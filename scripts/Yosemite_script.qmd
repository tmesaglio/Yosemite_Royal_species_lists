---
title: "Yosemite CCH vouchers"
format: html
editor: visual
editor_options: 
  chunk_output_type: console
---

## Libraries

```{r}
library(tidyverse)
library(eulerr)
library(sf)
library(data.table)
source("funx.R")
```

## 1. DON'T RUN: Generate a list of all names in vouchers, to edit

archive - no need to run and indeed won't run in this folder!

```{r}
Yosemite_list_before <- read_csv("data_Yosemite/Yosemite_all_data_2024.09.csv")

CCH_synonyms <- read_csv("data_Yosemite/Yosemite_synonyms_lookup_2024.06.11.csv") %>%
  distinct(starting_name, .keep_all = TRUE) %>%
  rename(CCH_synonym = current_name)

CCH2_taxa <- read_csv("data_Yosemite/Yosemite_CCH_records_2024_09_22.csv") %>%
  filter(phylum == "Tracheophyta") %>%
  filter(!keep_omit %in% c("x", "x-Mono")) %>%
  filter(year > 1859) %>%
  distinct(scientificName, .keep_all = TRUE) %>%
  filter(stringr::str_detect(scientificName, " ")) %>%
  select(scientificName) %>%
  left_join(CCH_synonyms %>% rename(scientificName = starting_name)) %>%
  mutate(
    CCH_synonym = ifelse(stringr::str_detect(CCH_synonym, " x ")|CCH_synonym == "NOT IN EFLORA", 
                         stringr::word(CCH_synonym, start = 1, end = 3), 
                         stringr::word(CCH_synonym, start = 1, end = 2))
    )

# All unmatched names
names_to_update <- 
  CCH2_taxa %>%
    filter(!CCH_synonym %in% Yosemite_list_before$scientific_name)

new_names <- 
  TNRS::TNRS(taxonomic_name = names_to_update$scientificName, sources = "wcvp")

updated_names <-
  new_names %>%
  filter(Name_matched_rank != "genus" & !is.na(Name_matched_rank) & !(Name_matched_rank == "")) %>%
  distinct(Name_submitted, Accepted_species, Name_matched_accepted_family) %>%
  rename(TNRS_synonym = Accepted_species, scientificName = Name_submitted, family_TNRS = Name_matched_accepted_family)

voucher_counts <-
  voucher_list %>%
  mutate(
    eventDate = ifelse(is.na(eventDate), row_number(), eventDate),
    year = ifelse(is.na(year), paste(10000+row_number()), year)
  ) %>%
  filter(keep_omit == "keep") %>%
  filter(!is.na(starting_name)) %>%
  distinct(starting_name, eventDate, recordedBy_simple, year) %>%
  arrange(starting_name, year, eventDate) %>%
  group_by(starting_name) %>%  
  summarise(
    voucher_obs = n()
  ) %>%
  distinct() %>%
  ungroup()

voucher_counts_coord <-
  voucher_list %>%
  mutate(
    eventDate = ifelse(is.na(eventDate), row_number(), eventDate),
    year = ifelse(is.na(year), paste(10000+row_number()), year)
  ) %>%
  filter(keep_omit == "keep") %>%
  filter(!is.na(starting_name)) %>%
  filter(!is.na(decimalLatitude) & !is.na(decimalLongitude)) %>%
  distinct(starting_name, eventDate, recordedBy_simple, year) %>%
  arrange(starting_name, year, eventDate) %>%
  group_by(starting_name) %>%  
  summarise(
    voucher_obs_coord = n()
  ) %>%
  distinct() %>%
  ungroup()

voucher_first_last_year <-
  voucher_list %>%
  mutate(eventDate = ifelse(is.na(eventDate), row_number(), eventDate),
         year = ifelse(is.na(year), paste(10000+row_number()), year)) %>%
  filter(keep_omit == "keep") %>%
  filter(year <= 2024, year > 1800) %>%
  filter(!is.na(starting_name)) %>%
  distinct(starting_name, eventDate, recordedBy_simple, year) %>%
  arrange(starting_name, year, eventDate) %>%
  group_by(starting_name) %>%  
  summarise(
    year_first = min(year),
    first_observer = first(recordedBy_simple),
    year_last = max(year)
  ) %>%
  distinct() %>%
  ungroup()

CCH2_taxa %>%
  left_join(updated_names) %>%
  mutate(
    current_name = ifelse(is.na(CCH_synonym)|CCH_synonym == "NOT IN EFLORA", TNRS_synonym, CCH_synonym),
    name_source = ifelse(is.na(CCH_synonym)|CCH_synonym == "NOT IN EFLORA", "TNRS_synonym", "CCH_synonym"),
    in_Yosemite_list = ifelse(current_name %in% Yosemite_list_before$scientific_name, TRUE, FALSE),
    family_TNRS = ifelse(is.na(family_TNRS), Yosemite_list_before$family[match(current_name, Yosemite_list_before$scientific_name)], family_TNRS)
    ) %>%
  left_join(Yosemite_list_before %>% select(current_name = scientific_name, broader)) %>%
  rename(starting_name = scientificName) %>%
  select(-TNRS_synonym, -CCH_synonym) %>%
  left_join(voucher_counts) %>%
  left_join(voucher_counts_coord) %>%
  left_join(voucher_first_last_year) %>%
  write_csv("Yosemite_synonyms2.csv")
```

## 2. Process voucher data

### - Read in CCH data, Synonym table

```{r}

Yosemite_list <- read_csv("data_Yosemite/Yosemite_all_data_2024_10_03.csv") %>%
  select(-voucher_obs, -voucher_obs_coord, -year_first, -year_last, -first_observer)

Yosemite_synonym_lookup <- read_csv("data_Yosemite/Yosemite_synonyms_lookup_2024.06.11.csv") %>%
  select(scientificName = starting_name, current_name, name_source)

park_species_list <- read_csv("data_Yosemite/Yosemite_parks_list_updated_taxonomy.csv")


park_species_list_2 <- read_csv("data_Yosemite/NPSpecies_FullList_YOSE_20240216_051634.csv")


Yos_data %>%
 filter(parks_outcome_detailed == "remove, species range far from park") -> far_from_park

park_species_list %>% filter(Accepted_species %in% far_from_park$accepted_name | Accepted_species %in% far_from_park$scientific_name) %>%
  select(Accepted_species, Name_submitted) %>%
  left_join(park_species_list_2 %>% select(Name_submitted = `Scientific Name`, Occurrence)) %>% View()
```

### - Filter CCH data, update taxonomy from lookup table

```{r}

CCH2_data <- read_csv("data_Yosemite/Yosemite_CCH_records_2024_09_22.csv") %>%
  filter(phylum == "Tracheophyta") %>%       # retain only vascular plants
  filter(keep_omit == c("keep")) %>%         # retain only valid vouchers
  filter(year > 1859) %>%                    # remove oldest records
  filter(!stringr::str_detect(recordedBy_simple, "Gill, Raymond J")) %>%                  # remove collection with photographic observations only
  filter(stringr::str_detect(scientificName, " ")) %>%  # remove genera
  left_join(Yosemite_synonym_lookup) %>%
  select(current_name, scientificName, keep_omit, institutionCode, recordedBy_simple, eventDate, year, locality, institutionCode, 
         recordNumber, decimalLatitude, decimalLongitude, recordedBy, county) %>%
  filter(!is.na(current_name))
```

### - Merge in GBIF samples

`{r} gbif_to_include <- read_csv("data_Yosemite/Yosemite_GBIF_records_2024.06.14.csv") %>%   filter(keep_omit == "keep")  voucher_data <- CCH2_data %>%   bind_rows(gbif_to_include %>% rename(scientificName = scientific_name))}`

#### DON'T RUN: Read in Yosemite shapefile

No longer need to run each time

```{r}
yos <- st_read("data_Yosemite/Yosemite.kml")
yos_sf <- st_transform(yos, crs = 4326)
yos_simp <- st_make_valid(yos_sf) %>% st_polygonize
```

#### DON'T RUN: Find GBIF samples not in CCH, update names

No longer need to run each time

```{r}
yos <- read_in_and_filter("data_Yosemite/GBIF_data_0005020-240202131308920.csv", yos_simp)

institutions_in_CCH <- CCH2_data %>% distinct(institutionCode)

yos_gbif <-
  yos %>%
    filter(
      basisOfRecord == "PRESERVED_SPECIMEN",
      species != ""
      ) %>%
  filter(!institutionCode %in% institutions_in_CCH$institutionCode) %>%
  select(scientific_name = species, institutionCode, eventDate, year, locality,
         recordNumber, decimalLatitude, decimalLongitude, recordedBy) %>%
  left_join(Yosemite_synonym_lookup %>% select(current_name, scientific_name = scientificName)) %>%
  write_csv("data_Yosemite/GBIF_only.csv")
```

### - DON'T RUN: Merge in Symbiota

Symbiota is another park list that we uncovered late in the process. It mostly aligns with the park list, but already throws out some of the odd entries. And also has a few newer ones.

```{r}

Symbiota <- read_csv("data_Yosemite/Symbiota_Yosemite National Park_1718164113.csv")

Symbiota2 <- Symbiota %>%   
  rename(scientificName = ScientificName) %>%   
  left_join(Yosemite_synonym_lookup) %>%   
  select(current_name) %>%   
  rename(scientific_name = current_name) %>%   
  distinct() %>%   
  mutate(symbiota = "in Symbiota")  

read_csv("data_Yosemite/Yosemite_all_data_2024_10_03.csv") %>%   
  full_join(Symbiota2) %>%   
  write_csv("data_Yosemite/Yosemite_all_data_2024_10_03.csv", na = "")
```

## 3. Summary statistics for vouchers

### - Create summaries

```{r}
voucher_counts_raw <-
  voucher_data %>%
    mutate(
      eventDate = ifelse(is.na(eventDate), row_number(), eventDate),
      year = ifelse(is.na(year), paste(10000+row_number()), year)
      ) %>%
    distinct(current_name, eventDate, recordedBy_simple, year) %>%
    arrange(current_name, year, eventDate)


voucher_counts <-
  voucher_data %>%
    mutate(
      eventDate = ifelse(is.na(eventDate), row_number(), eventDate),
      year = ifelse(is.na(year), paste(10000+row_number()), year)
      ) %>%
    distinct(current_name, eventDate, recordedBy_simple, year) %>%
    arrange(current_name, year, eventDate) %>%
    group_by(current_name) %>%  
    summarise(
      voucher_obs = n()
      ) %>%
    distinct() %>%
    ungroup()

voucher_counts_to_1990 <-
  voucher_data %>%
    mutate(
      eventDate = ifelse(is.na(eventDate), row_number(), eventDate),
      year = ifelse(is.na(year), paste(10000+row_number()), year)
      ) %>%
    distinct(current_name, eventDate, recordedBy_simple, year) %>%
    filter(year < 1990) %>%
    arrange(current_name, year, eventDate) %>%
    group_by(current_name) %>%  
    summarise(
      voucher_obs_to_1990 = n()
      ) %>%
    distinct() %>%
    ungroup()

voucher_counts_coord <-
  voucher_data %>%
  mutate(
    eventDate = ifelse(is.na(eventDate), row_number(), eventDate),
    year = ifelse(is.na(year), paste(10000+row_number()), year)
  ) %>%
  filter(!is.na(decimalLatitude) & !is.na(decimalLongitude)) %>%
  distinct(current_name, eventDate, recordedBy_simple, year) %>%
  arrange(current_name, year, eventDate) %>%
  group_by(current_name) %>%  
  summarise(
    voucher_obs_coord = n()
  ) %>%
  distinct() %>%
  ungroup()

voucher_first_last_year <-
  voucher_data %>%
    mutate(eventDate = ifelse(is.na(eventDate), row_number(), eventDate),
           year = ifelse(is.na(year), paste(10000+row_number()), year)) %>%
    filter(year <= 2024, year > 1800) %>%
    distinct(current_name, eventDate, recordedBy_simple, year) %>%
    arrange(current_name, year, eventDate) %>%
    group_by(current_name) %>%  
    summarise(
      year_first = min(year),
      first_observer = first(recordedBy_simple),
      year_last = max(year)
    ) %>%
    distinct() %>%
    ungroup()

voucher_data %>%
  mutate(eventDate = ifelse(is.na(eventDate), row_number(), eventDate),
           year = ifelse(is.na(year), paste(10000+row_number()), year)) %>%
  filter(year <= 2024, year > 1800) %>%
  distinct(current_name, eventDate, recordedBy_simple, year) %>%
  arrange(current_name, year, eventDate)  %>%
  group_by(recordedBy_simple) %>% 
  mutate(vouchers_per_collector = n()) %>% 
  distinct(recordedBy_simple, vouchers_per_collector) %>%
  rename(first_observer = recordedBy_simple) -> counts_per_collector
```

### - Merge various voucher summaries into a single data frame

```{r}
voucher_summary <- Yosemite_list %>%
  select(accepted_name, scientific_name, voucher_START, voucher_END, voucher_outcome) %>%
  left_join(voucher_counts %>% rename(scientific_name = current_name)) %>%
  left_join(voucher_counts_to_1990 %>% rename(scientific_name = current_name)) %>%
  left_join(voucher_counts_coord %>% rename(scientific_name = current_name)) %>%
  left_join(voucher_first_last_year %>% rename(scientific_name = current_name))

voucher_summary %>%
  write_csv("outputs/Yosemite_voucher_summary.csv", na = "")

voucher_summary %>%
  filter(voucher_END == 1) %>%
  group_by(first_observer) %>%
  mutate(
    observer_firsts = n(),
    year = first(year_first)
    ) %>%
  distinct(first_observer, observer_firsts, year) %>% 
  full_join(counts_per_collector) %>%
  write_csv("outputs/collector_stats.csv")
```

#### DON'T RUN: Checks

If there are NA's in voucher counts where there shouldn't be it is because of synonym matching between CCH and my master sheet. I'm progressively dealing with these and have finished all the ones where vouchers are retained

```{r}
# Check for duplicates in scientific name

Yosemite_list %>%
  select(scientific_name, accepted_name, family, broader, iNat_outcome, parks_outcome, voucher_outcome) %>%
  arrange(scientific_name) %>%
  group_by(scientific_name) %>%
   mutate(count = row_number()) %>%
  filter(count == 2) %>% View()

# manually removed these duplicates


# Check for taxa in CCH not being matched to any taxa in the Yosemite master list
synonym_complete <- read_csv("data_Yosemite/Yosemite_synonym_lookup_2024.06.07_edited.csv")

synonym_complete %>% 
  mutate(check = ifelse(!current_name %in% Yosemite_list$accepted_name, "change current", NA)) %>%
  write_csv("outputs/Yosemite_synonym_lookup_2024_temp.csv", na= "")
```

### - Merge voucher summary into Yosemite data file

setup to remerge easily - but be careful not to overwrite a file you don't want to

```{r}
read_csv("data_Yosemite/Yosemite_all_data_2024.09.csv") %>%
  select(-voucher_obs, -voucher_obs_coord, -year_first, -first_observer, -year_last) %>%
  left_join(voucher_summary %>% select(scientific_name, voucher_obs, voucher_obs_to_1990, voucher_obs_coord, year_first, first_observer, year_last) %>% distinct()) %>%
  select(accepted_name, scientific_name, status, family, broader, synonym_matches, establishment_means, count_RG, count_needs_id, in_park_START, 
         voucher_START, iNat_RG_START, in_park_END, voucher_END, iNat_RG_END, old_voucher, recent_voucher, final_list, possibly_valid_needs_ID, 
         iNat_outcome, parks_outcome, voucher_outcome, voucher_obs, voucher_obs_to_1990, voucher_obs_coord, year_first, first_observer, year_last, everything()) %>%
  write_csv("data_Yosemite/Yosemite_all_data_2024_09_22.csv", na = "")
```

## 4. Determine which "add-on" vouchers do/don't have valid coordinates

There were 339 species that were found through manual searches. Some were found because they were taxa on the park list or in iNat, but ostensibly didn't have vouchers. Others were found during a second search when all CCH vouchers in Tuolumne, Madera, and Mariposa counties were designated as "in" or "out" of the park based on locality names. However, to aline the data based on the 4 error categories, these had to be attributed to either a taxonomic error (synonym that wasn't picked up because of all the weird variants in CCH2 download that didn't have perfect matches in TNRS) or geographic error (coordinates). This code indicates which of these taxa didn't have any vouchers with coordinates inside the park boundary - because of coordinate errors.

```{r}
add_on_Yos_vouchers <- Yos_data %>%
  filter(voucher_outcome_detailed %in% c(
    "add, coordinates erroneously outside protected area or missing coordinates",
    "add, vouchers missed due to undetected synonyms"
  )) %>%
  select(accepted_name)

voucher_data_no_coord <- voucher_data %>%
  filter(is.na(decimalLatitude)|is.na(decimalLongitude)) %>%
  distinct(current_name)

voucher_data_with_coord <- voucher_data %>%
  filter(!is.na(decimalLatitude)&!is.na(decimalLongitude))

df_sf <-
    st_as_sf(
      voucher_data_with_coord,
      coords = c("decimalLongitude", "decimalLatitude"),
      crs = st_crs(yos_simp)
    )
  
voucher_data_with_coord$inside_kml <- st_within(df_sf, yos_simp, sparse = FALSE)

voucher_data_with_coord_inside_Yos <- voucher_data_with_coord %>% 
  filter(inside_kml) %>% 
  distinct(current_name)

voucher_data_with_coord_outside_Yos <- voucher_data_with_coord %>% 
  filter(!inside_kml) %>% 
  distinct(current_name)

species_no_Yos_coords <- voucher_data_no_coord %>%
  bind_rows(voucher_data_with_coord_outside_Yos) %>%
  distinct() %>%
  filter(current_name %in% add_on_Yos_vouchers$accepted_name) %>%
  filter(!current_name %in% voucher_data_with_coord_inside_Yos$current_name) %>%
  mutate(extra_info = "no vouchers with coordinates in park boundary") %>%
  rename(accepted_name = current_name)

Yos_data <- Yos_data %>%
  left_join(species_no_Yos_coords) %>%
  write_csv("data_Yosemite/Yosemite_all_data_2024_10_03.csv", na = "")
```

## 5. Create column of synonyms

Symbiota is another park list that we uncovered late in the process. It mostly aligns with the park list, but already throws out some of the odd entries. And also has a few newer ones.

```{r}
park_synonyms <- read_csv("data_Yosemite/Yosemite_parks_list_updated_taxonomy.csv") %>%
  select(synonyms = Name_submitted, current_name = Accepted_species)

all_synonyms <- Yosemite_synonym_lookup %>% 
  select(synonyms = scientificName, current_name) %>%
  bind_rows(park_synonyms) %>%
  distinct() %>%
  filter(current_name != synonyms) %>%
  arrange(current_name, synonyms) %>%
  group_by(current_name) %>%
  mutate(synonyms = paste0(synonyms, collapse = "; ")) %>%
  ungroup() %>%
  distinct() %>%
  rename(scientific_name = current_name)

Yos_data %>% 
  left_join(all_synonyms) %>%
  write_csv("data_Yosemite/Yosemite_all_data_2024_10_03.csv", na = "")
```

## 6. Check manually for iNat taxa only in Ackerson Mdw addition

Ackerson Meadow area is not included in the Yosemite polygon on iNat

But the download extends beyond the part of Ackerson Meadow that is now in the park, because of its convoluted shape...

16 taxa initially indicated of which 10 needed to be added to the list for having an iNat RG observation within the actual park boundaries.

```{r}

Ackerson_area_iNat <- read_csv("data_Yosemite/Ackerson_Meadow_iNat_observations-483455.csv")

taxa_in_iNat <- Yos_data %>% 
  filter(iNat_RG_END == 1)

Ackerson_area_unique_taxa <- Ackerson_area_iNat %>%
  filter(created_at < "2024-02-15 23:47:04 UTC") %>%
  distinct(taxon_species_name) %>%
  filter(!taxon_species_name %in% taxa_in_iNat$accepted_name)

# > Ackerson_area_unique_taxa
# # A tibble: 16 × 1
#    taxon_species_name         
#    <chr>                      
#  1 Navarretia intertexta      
#  2 Sclerolinon digynum        
#  3 Gratiola ebracteata        
#  4 Viola arvensis             
#  5 Lupinus bicolor            
#  6 Pteridium aquilinum        
#  7 Calycadenia mollis         
#  8 Alopecurus aequalis        
#  9 Ranunculus aquatilis       
# 10 Astragalus cicer           
# 11 Castilleja attenuata       
# 12 Veronica peregrina         
# 13 Montia linearis            
# 14 Polygonum douglasii        
# 15 Leptosiphon montanus       
# 16 Calycadenia multiglandulosa
```

## 7. Euler diagrams

```{r}

Yos_data <- read_csv("data_Yosemite/Yosemite_all_data_2024_11_08.csv")
```

### - starting data

```{r}

start <- Yos_data %>%
  mutate(
    voucher_start = ifelse(voucher_START == 1, TRUE, NA),
    voucher_start = ifelse(is.na(voucher_start), FALSE, voucher_start),
    parklist_start = ifelse(in_park_START == 1, TRUE, NA),
    parklist_start = ifelse(is.na(parklist_start), FALSE, parklist_start),
    iNat_RG_start = ifelse(iNat_RG_START== 1 | iNat_RG_START == "iNat-not-gbif", TRUE, NA),
    iNat_RG_start = ifelse(is.na(iNat_RG_start), FALSE, iNat_RG_start)
  )

data_for_start <- start %>% select(vouchers = voucher_start, parklist = parklist_start, iNat_RG = iNat_RG_start)

start_fit <- euler(data_for_start)
plot(start_fit, quantities = FALSE, labels = FALSE)
plot(start_fit, quantities = TRUE, labels = FALSE)

start_fit

total_count_start <- start_fit$original.values %>% sum()

voucher_start <- start_fit$original.values %>% data.frame() %>% rownames_to_column() %>% rename(counts = 2, category = 1) %>% filter(stringr::str_detect(category, "voucher"))
voucher_start_count <- sum(voucher_start$counts)
voucher_start_prop <- voucher_start_count / total_count_start

iNat_start <- start_fit$original.values %>% data.frame() %>% rownames_to_column() %>% rename(counts = 2, category = 1) %>% filter(stringr::str_detect(category, "iNat"))
iNat_start_count <- sum(iNat_start$counts)
iNat_start_prop <- iNat_start_count / total_count_start

parks_start <- start_fit$original.values %>% data.frame() %>% rownames_to_column() %>% rename(counts = 2, category = 1) %>% filter(stringr::str_detect(category, "park"))
parks_start_count <- sum(parks_start$counts)
parks_start_prop <- parks_start_count / total_count_start

```

### - ending data

```{r}

end <- Yos_data %>%
  filter(voucher_END == 1 | in_park_END == 1 | iNat_RG_END == 1) %>%
  mutate(
    voucher_end = ifelse(voucher_END == 1, TRUE, NA),
    voucher_end = ifelse(is.na(voucher_end), FALSE, voucher_end),
    parklist_end = ifelse(in_park_END == 1, TRUE, NA),
    parklist_end = ifelse(is.na(parklist_end), FALSE, parklist_end),
    iNat_RG_end = ifelse(iNat_RG_END == 1, TRUE, NA),
    iNat_RG_end = ifelse(is.na(iNat_RG_end), FALSE, iNat_RG_end)
  )

data_for_end <- end %>% select(vouchers = voucher_end, parklist = parklist_end, iNat_RG = iNat_RG_end)

end_fit <- euler(data_for_end)
plot(end_fit, quantities = FALSE, labels = FALSE)
plot(end_fit, quantities = TRUE, labels = TRUE)

total_count_end <- end_fit$original.values %>% sum()

iNat_end <- end_fit$original.values %>% data.frame() %>% rownames_to_column() %>% rename(counts = 2, category = 1) %>% filter(stringr::str_detect(category, "iNat"))
iNat_end_count <- sum(iNat_end$counts)
iNat_end_prop <- iNat_end_count / total_count_end

voucher_end <- end_fit$original.values %>% data.frame() %>% rownames_to_column() %>% rename(counts = 2, category = 1) %>% filter(stringr::str_detect(category, "voucher"))
voucher_end_count <- sum(voucher_end$counts)

parks_end <- end_fit$original.values %>% data.frame() %>% rownames_to_column() %>% rename(counts = 2, category = 1) %>% filter(stringr::str_detect(category, "park"))
parks_end_count <- sum(parks_end$counts)
```

### - ending data - showy

```{r}

showy <- Yos_data %>%
  filter(voucher_END == 1 | in_park_END == 1 | iNat_RG_END == 1) %>%
  filter(broader != "4.monocot") %>%
  mutate(
    voucher_end = ifelse(voucher_END == 1, TRUE, NA),
    voucher_end = ifelse(is.na(voucher_end), FALSE, voucher_end),
    parklist_end = ifelse(in_park_END == 1, TRUE, NA),
    parklist_end = ifelse(is.na(parklist_end), FALSE, parklist_end),
    iNat_RG_end = ifelse(iNat_RG_END == 1, TRUE, NA),
    iNat_RG_end = ifelse(is.na(iNat_RG_end), FALSE, iNat_RG_end)
  )

data_for_showy <- showy %>% select(vouchers = voucher_end, parklist = parklist_end, iNat_RG = iNat_RG_end)

showy_fit <- euler(data_for_showy)
plot(showy_fit, quantities = FALSE, labels = FALSE)
plot(showy_fit, quantities = TRUE, labels = TRUE)

iNat_end_showy <- showy_fit$original.values %>% data.frame() %>% rownames_to_column() %>% rename(counts = 2, category = 1) %>% filter(stringr::str_detect(category, "iNat"))
total_count_end_showy <- showy_fit$original.values %>% sum()
iNat_end_showy_count <- sum(iNat_end_showy$counts)
iNat_end_showy_prop <- iNat_end_showy_count / total_count_end_showy
```

### - ending data - graminoids

```{r}

graminoid <- Yos_data %>%
  filter(voucher_END == 1 | in_park_END == 1 | iNat_RG_END == 1) %>%
  filter(broader == "4.monocot") %>%
  mutate(
    voucher_end = ifelse(voucher_END == 1, TRUE, NA),
    voucher_end = ifelse(is.na(voucher_end), FALSE, voucher_end),
    parklist_end = ifelse(in_park_END == 1, TRUE, NA),
    parklist_end = ifelse(is.na(parklist_end), FALSE, parklist_end),
    iNat_RG_end = ifelse(iNat_RG_END == 1, TRUE, NA),
    iNat_RG_end = ifelse(is.na(iNat_RG_end), FALSE, iNat_RG_end)
  )

data_for_graminoid <- graminoid %>% select(vouchers = voucher_end, parklist = parklist_end, iNat_RG = iNat_RG_end)

graminoid_fit <- euler(data_for_graminoid)
plot(graminoid_fit, quantities = FALSE, labels = FALSE)
plot(graminoid_fit, quantities = TRUE, labels = TRUE)

iNat_end_graminoid <- graminoid_fit$original.values %>% data.frame() %>% rownames_to_column() %>% rename(counts = 2, category = 1) %>% filter(stringr::str_detect(category, "iNat"))
total_count_end_graminoid <- graminoid_fit$original.values %>% sum()
iNat_end_graminoid_count <- sum(iNat_end_graminoid$counts)
iNat_end_graminoid_prop <- iNat_end_graminoid_count / total_count_end_graminoid
```

### - ending data - natives

```{r}

native <- Yos_data %>%
  filter(voucher_END == 1 | in_park_END == 1 | iNat_RG_END == 1) %>%
  filter(establishment_means == "native") %>%
  mutate(
    voucher_end = ifelse(voucher_END == 1, TRUE, NA),
    voucher_end = ifelse(is.na(voucher_end), FALSE, voucher_end),
    parklist_end = ifelse(in_park_END == 1, TRUE, NA),
    parklist_end = ifelse(is.na(parklist_end), FALSE, parklist_end),
    iNat_RG_end = ifelse(iNat_RG_END == 1, TRUE, NA),
    iNat_RG_end = ifelse(is.na(iNat_RG_end), FALSE, iNat_RG_end)
  )

data_for_native <- native %>% select(vouchers = voucher_end, parklist = parklist_end, iNat_RG = iNat_RG_end)

native_fit <- euler(data_for_native)
plot(native_fit, quantities = FALSE, labels = FALSE)
plot(native_fit, quantities = TRUE, labels = TRUE)
```

### - ending data - introduced

```{r}

introduced <- Yos_data %>%
  filter(voucher_END == 1 | in_park_END == 1 | iNat_RG_END == 1) %>% 
  filter(establishment_means == "introduced") %>%
  mutate(
    voucher_end = ifelse(voucher_END == 1, TRUE, NA),
    voucher_end = ifelse(is.na(voucher_end), FALSE, voucher_end),
    parklist_end = ifelse(in_park_END == 1, TRUE, NA),
    parklist_end = ifelse(is.na(parklist_end), FALSE, parklist_end),
    iNat_RG_end = ifelse(iNat_RG_END == 1, TRUE, NA),
    iNat_RG_end = ifelse(is.na(iNat_RG_end), FALSE, iNat_RG_end)
  )

data_for_introduced <- introduced %>% select(vouchers = voucher_end, parklist = parklist_end, iNat_RG = iNat_RG_end)

introduced_fit <- euler(data_for_introduced)
plot(introduced_fit, quantities = FALSE, labels = FALSE)
plot(introduced_fit, quantities = TRUE, labels = TRUE)
```

### - ending data - old vouchers only

```{r}

old_vouchers <- Yos_data %>%
  filter(voucher_END == 1 | in_park_END == 1 | iNat_RG_END == 1) %>%
  filter(old_voucher == 1 & is.na(recent_voucher)) %>%
  mutate(
    voucher_end = ifelse(voucher_END == 1, TRUE, NA),
    voucher_end = ifelse(is.na(voucher_end), FALSE, voucher_end),
    parklist_end = ifelse(in_park_END == 1, TRUE, NA),
    parklist_end = ifelse(is.na(parklist_end), FALSE, parklist_end),
    iNat_RG_end = ifelse(iNat_RG_END == 1 , TRUE, NA),
    iNat_RG_end = ifelse(is.na(iNat_RG_end), FALSE, iNat_RG_end)
  )

data_for_end_old <- old_vouchers %>% select(vouchers = voucher_end, parklist = parklist_end, iNat_RG = iNat_RG_end)

end_old_fit <- euler(data_for_end_old)
plot(end_old_fit, quantities = TRUE, labels = FALSE)
plot(end_old_fit, quantities = FALSE, labels = FALSE)


total_count_end_old <- end_old_fit$original.values %>% sum()
iNat_end_old <- end_old_fit$original.values %>% data.frame() %>% rownames_to_column() %>% rename(counts = 2, category = 1) %>% filter(stringr::str_detect(category, "iNat"))
iNat_end_old_count <- sum(iNat_end_old$counts)
iNat_end_old_prop <- iNat_end_old_count / total_count_end_old
```

### - ending data - old & recent vouchers

```{r}

old_and_recent_vouchers <- Yos_data %>%
  filter(voucher_END == 1 | in_park_END == 1 | iNat_RG_END == 1) %>%
  filter(recent_voucher == 1 & old_voucher == 1) %>%
  mutate(
    voucher_end = ifelse(voucher_END == 1, TRUE, NA),
    voucher_end = ifelse(is.na(voucher_end), FALSE, voucher_end),
    parklist_end = ifelse(in_park_END == 1, TRUE, NA),
    parklist_end = ifelse(is.na(parklist_end), FALSE, parklist_end),
    iNat_RG_end = ifelse(iNat_RG_END == 1 , TRUE, NA),
    iNat_RG_end = ifelse(is.na(iNat_RG_end), FALSE, iNat_RG_end)
  )

data_for_end_old_recent <- old_and_recent_vouchers %>% select(vouchers = voucher_end, parklist = parklist_end, iNat_RG = iNat_RG_end)

end_old_recent_fit <- euler(data_for_end_old_recent)
plot(end_old_recent_fit, quantities = TRUE, labels = FALSE)
plot(end_old_recent_fit, quantities = FALSE, labels = FALSE)

total_count_end_old_recent <- end_old_recent_fit$original.values %>% sum()
iNat_end_old_recent <- end_old_recent_fit$original.values %>% data.frame() %>% rownames_to_column() %>% rename(counts = 2, category = 1) %>% filter(stringr::str_detect(category, "iNat"))
iNat_end_old_recent_count <- sum(iNat_end_old_recent$counts)
iNat_end_old_recent_prop <- iNat_end_old_recent_count / total_count_end_old_recent
```

### - ending data - recent vouchers only

```{r}

recent_vouchers <- Yos_data %>%
  filter(voucher_END == 1 | in_park_END == 1 | iNat_RG_END == 1) %>%
  filter(recent_voucher == 1 & is.na(old_voucher)) %>%
  mutate(
    voucher_end = ifelse(voucher_END == 1, TRUE, NA),
    voucher_end = ifelse(is.na(voucher_end), FALSE, voucher_end),
    parklist_end = ifelse(in_park_END == 1, TRUE, NA),
    parklist_end = ifelse(is.na(parklist_end), FALSE, parklist_end),
    iNat_RG_end = ifelse(iNat_RG_END == 1 , TRUE, NA),
    iNat_RG_end = ifelse(is.na(iNat_RG_end), FALSE, iNat_RG_end)
  )

data_for_end_recent <- recent_vouchers %>% select(vouchers = voucher_end, parklist = parklist_end, iNat_RG = iNat_RG_end)

end_recent_fit <- euler(data_for_end_recent)
plot(end_recent_fit, quantities = FALSE, labels = FALSE)
plot(end_recent_fit, quantities = TRUE, labels = FALSE)

total_count_end_recent <- end_recent_fit$original.values %>% sum()
iNat_end_recent <- end_recent_fit$original.values %>% data.frame() %>% rownames_to_column() %>% rename(counts = 2, category = 1) %>% filter(stringr::str_detect(category, "iNat"))
iNat_end_recent_count <- sum(iNat_end_recent$counts)
iNat_end_recent_prop <- iNat_end_recent_count / total_count_end_recent
```

## 8a. Pie charts - vouchers

### - unique voucher outcomes

```{r}

# unique voucher outcomes
voucher_outcomes_unique <- Yos_data %>%
  distinct(voucher_outcome, voucher_outcome_detailed) %>%
  mutate(
    voucher_outcome = factor(voucher_outcome, levels = c("retain exact name", "retain species, replacing taxonomic synonym or misapplied name with accepted name", "geographic error", "identification error", "taxonomic or nomenclatural error", "databasing discrepancy", "XX-synonym", "XX-not in graphics")),
    voucher_outcome_detailed = factor(voucher_outcome_detailed, levels = c(
      "retain exact name", 
      "retain species, replacing taxonomic synonym or misapplied name with accepted name",
      "remove, coordinates erroneously inside protected area",
      "add, coordinates erroneously outside protected area or missing coordinates",
      "remove, incorrect identification",
      "remove, misapplied name",
      "remove, double or triple listing due to synonymy",
      "remove, untraced taxonomic error",
      "remove, taxa lumped when using iNaturalist taxonomy",
      "add, vouchers missed due to undetected synonyms",
      "remove, horticultural record",
      "add, known vouchers missing from biodiversity portal",
      "vouchers missed due to undetected synonyms",
      "XX-synonym", 
      "XX-no voucher, but occurs in protected area", 
      "XX-no voucher, not in protected area", 
      "XX-voucher with 'coordinates erroneously outside protected area or missing coordinates' found, but rejected due to 'incorrect identification'; not in protected area",
      "XX-voucher with 'coordinates erroneously outside protected area or missing coordinates' found, but rejected due to 'untraced taxonomic error'; not in protected area",
      "XX-voucher with 'coordinates erroneously outside protected area or missing coordinates' found, but rejected because 'horticultural record'; not in protected area",
      "XX-vouchers missed due to 'undetected synonyms' found, but rejected due to 'untraced taxonomic error'", 
      "XX-iNat needs ID only", "XX-Symbiotica only"
    ))
    ) %>%
  arrange(voucher_outcome, voucher_outcome_detailed)
```

### - voucher outcomes detailed

```{r}

# summarise voucher outcomes
voucher_outcomes <- Yos_data %>%
  select(outcome = voucher_outcome_detailed, voucher_outcome) %>%
  filter(!is.na(outcome)) %>%
  filter(!stringr::str_starts(outcome, "XX")) %>%
  #filter(!stringr::str_starts(outcome, "add")) %>%
  mutate(
    voucher_outcome = factor(voucher_outcome, levels = c("retain exact name", "retain species, replacing taxonomic synonym or misapplied name with accepted name", "geographic error", "identification error", "taxonomic or nomenclatural error", "databasing discrepancy", "XX-synonym", "XX-not in graphics")),
    outcome = factor(outcome, levels = c(
      "retain exact name", "retain species, replacing taxonomic synonym or misapplied name with accepted name",
      "remove, coordinates erroneously inside protected area",
      "add, coordinates erroneously outside protected area or missing coordinates",
      "remove, incorrect identification",
      "remove, misapplied name",
      "remove, double or triple listing due to synonymy",
      "remove, untraced taxonomic error",
      "remove, taxa lumped when using iNaturalist taxonomy",
      "add, vouchers missed due to undetected synonyms",
      "remove, horticultural record",
      "add, known vouchers missing from biodiversity portal",
      "vouchers missed due to undetected synonyms"))) %>%
  group_by(outcome) %>%
  mutate(outcome_counts = n()) %>%
  ungroup() %>%
  distinct(voucher_outcome, outcome, .keep_all = TRUE) %>%
  select(voucher_outcome, outcome, outcome_counts)  %>%
  arrange(outcome)

voucher_outcomes <- voucher_outcomes %>%
  mutate(percent = 100*outcome_counts / sum(voucher_outcomes$outcome_counts)) %>%
  arrange(outcome)

# retain vs remove pie chart
ggplot(voucher_outcomes, aes(x="", y=outcome_counts, fill=outcome))+
  geom_bar(width = 1, stat = "identity") +
  coord_polar("y", start=0) +
  theme_minimal() +
  theme(axis.text.x=element_blank())  
```

### - voucher outcomes collapsed

```{r}

 voucher_outcomes_collapsed <- Yos_data %>%
  select(outcome = voucher_outcome, voucher_outcome_detailed) %>%
  filter(!is.na(outcome)) %>%
  filter(!stringr::str_starts(outcome, "XX") & !stringr::str_starts(voucher_outcome_detailed, "add")) %>%
  select(-voucher_outcome_detailed) %>%
  mutate(
    outcome = factor(outcome, levels = c("retain exact name", "retain species, replacing taxonomic synonym or misapplied name with accepted name", "geographic error", "identification error", "taxonomic or nomenclatural error", "databasing discrepancy"))
  ) %>%
  group_by(outcome) %>%
  mutate(outcome_counts = n()) %>%
  ungroup() %>%
  distinct(outcome, .keep_all = TRUE) %>%
  arrange(outcome)

# double check numbers
start_fit[2] %>% as.data.frame() %>% rownames_to_column() %>% filter(str_detect(rowname, "voucher")) %>% select(original.values) %>% sum()
voucher_outcomes_collapsed %>% select(outcome_counts) %>% sum()

voucher_outcomes_collapsed <- voucher_outcomes_collapsed %>%
  mutate(percent = 100*outcome_counts / sum(voucher_outcomes_collapsed$outcome_counts)) %>%
  arrange(outcome)

# retain vs remove pie chart
ggplot(voucher_outcomes_collapsed, aes(x="", y=outcome_counts, fill=outcome))+
  geom_bar(width = 1, stat = "identity") +
  coord_polar("y", start=0) +
  theme_minimal() +
  theme(axis.text.x=element_blank())  

```

### - voucher add-on outcomes

```{r}

add_ons_vouchers <- Yos_data %>%
  select(outcome = voucher_outcome, voucher_outcome_detailed) %>%
  filter(!is.na(outcome)) %>%
  filter(!stringr::str_starts(outcome, "XX")) %>%
  filter(stringr::str_starts(voucher_outcome_detailed, "add,")) %>%
  select(-voucher_outcome_detailed) %>%
  group_by(outcome) %>%
  mutate(outcome_counts = n()) %>%
  ungroup() %>%
  distinct()

rest_of_circle_vouchers <- sum(voucher_outcomes$outcome_counts) - sum(add_ons_vouchers$outcome_counts)

total_retained_vouchers <- 
  tibble(
    outcome = "rest", 
    outcome_counts = rest_of_circle_vouchers)

add_ons_vouchers <- add_ons_vouchers %>%
  bind_rows(total_retained_vouchers)

# create add-on wedge via pie chart
ggplot(add_ons_vouchers, aes(x="", y=outcome_counts, fill=outcome))+
  geom_bar(width = 1, stat = "identity") +
  coord_polar("y", start=0) +
  theme_minimal() +
  theme(axis.text.x=element_blank())  
```

## 8b. Pie charts - parks list

### - unique parks list outcomes

```{r}

park_outcomes_unique <- Yos_data %>%
  distinct(parks_outcome, parks_outcome_detailed) %>%
  mutate(
    parks_outcome = factor(parks_outcome, levels = c("retain exact name", "retain species, replacing taxonomic synonym or misapplied name with accepted name", "retain because vouchers for species are close to the park", "geographic error", "identification error", "taxonomic or nomenclatural error", "databasing discrepancy", "XX-synonym", "XX-not in graphics")),
    parks_outcome_detailed = factor(parks_outcome_detailed, levels = c(
      "retain exact name", "retain species, replacing taxonomic synonym or misapplied name with accepted name",
      "retain because vouchers for species are close to the park",
      "retain, misapplied",
      "remove, species range far from park",
      "remove, misapplied name",
      "remove, double or triple listing due to synonymy",
      "remove, taxa lumped using iNaturalist taxonomy",
      "add, taxonomic splits since last list update",
      "remove, designated as 'False Report'",
      "remove, wrong name assigned during databasing",
      "remove, horticultural record",
      "add, known vouchers missing from biodiversity portal",
      "vouchers missed due to undetected synonyms",
      "XX-synonym", "XX-misapplied",
      "XX-not on parks list, but occurs in protected area", 
      "XX-not on parks list, not in protected area",
      "XX-iNat needs ID only", "XX-Symbiotica only"
    ))
    ) %>%
  arrange(parks_outcome, parks_outcome_detailed)
```

### - parks list outcomes detailed

```{r}

parklist_outcomes <- Yos_data %>%
  select(outcome = parks_outcome_detailed, parks_outcome) %>%
  filter(!stringr::str_starts(outcome, "XX")) %>%
  filter(!stringr::str_starts(outcome, "add")) %>%
  mutate(parks_outcome = factor(parks_outcome, levels = c("retain exact name", "retain species, replacing taxonomic synonym or misapplied name with accepted name", "retain because vouchers for species are close to the park", "geographic error", "identification error", "taxonomic or nomenclatural error", "databasing discrepancy", "XX-synonym", "XX-not in graphics")),
    outcome = factor(outcome, levels = c(
      "retain exact name", "retain species, replacing taxonomic synonym or misapplied name with accepted name",
      "retain because vouchers for species are close to the park",
      "retain, misapplied",
      "remove, species range far from park",
      "remove, misapplied name",
      "remove, double or triple listing due to synonymy",
      "add, taxonomic splits since last list update",
      "remove, designated as 'False Report'",
      "remove, horticultural record",
      "add, known vouchers missing from biodiversity portal",
      "vouchers missed due to undetected synonyms",
      "XX-synonym", "XX-misapplied",
      "XX-not on parks list, but occurs in protected area", 
      "XX-not on parks list, not in protected area",
      "XX-iNat needs ID only", "XX-Symbiotica only"
    ))
        ) %>%
  group_by(outcome) %>%
  mutate(outcome_counts = n()) %>%
  ungroup() %>%
  distinct() %>%
  arrange(outcome)

parklist_outcomes <- parklist_outcomes %>%
  mutate(percent = (100*outcome_counts) / sum(parklist_outcomes$outcome_counts)) %>%
  distinct() %>%
  arrange(outcome)

# retain vs remove pie chart
ggplot(parklist_outcomes, aes(x="", y=outcome_counts, fill=outcome))+
  geom_bar(width = 1, stat = "identity") +
  coord_polar("y", start=0) + scale_fill_brewer(palette="Blues")+
  theme_minimal() +
  theme(axis.text.x=element_blank())  
```

### - parks list outcomes collapsed

```{r}

# summarise parks list outcomes
parklist_outcomes_collapsed <- Yos_data %>%
  select(outcome = parks_outcome, parks_outcome_detailed) %>%
  filter(!stringr::str_starts(outcome, "XX")) %>%
  filter(!stringr::str_starts(parks_outcome_detailed, "add")) %>%
  select(-parks_outcome_detailed) %>%
  mutate(outcome = factor(outcome, levels = c("retain exact name", "retain species, replacing taxonomic synonym or misapplied name with accepted name", "retain because vouchers for species are close to the park", "geographic error", "identification error", "taxonomic or nomenclatural error", "databasing discrepancy"))) %>%
  group_by(outcome) %>%
  mutate(outcome_counts = n()) %>%
  ungroup() %>%
  distinct() %>%
  arrange(outcome)

parklist_outcomes_collapsed <- parklist_outcomes_collapsed %>%
  mutate(percent = (100*outcome_counts) / sum(parklist_outcomes_collapsed$outcome_counts)) %>%
  distinct() %>%
  arrange(outcome)

# double check numbers
start_fit[2] %>% as.data.frame() %>% rownames_to_column() %>% filter(str_detect(rowname, "park")) %>% select(original.values) %>% sum()
parklist_outcomes_collapsed %>% select(outcome_counts) %>% sum()

# retain vs remove pie chart
ggplot(parklist_outcomes_collapsed, aes(x="", y=outcome_counts, fill=outcome))+
  geom_bar(width = 1, stat = "identity") +
  coord_polar("y", start=0) + scale_fill_brewer(palette="Blues")+
  theme_minimal() +
  theme(axis.text.x=element_blank())  
```

### - park list add-on outcomes

```{r}

add_ons_parks <- Yos_data %>%
  select(outcome = parks_outcome, parks_outcome_detailed) %>%
  filter(!is.na(outcome)) %>%
  filter(!stringr::str_starts(outcome, "XX")) %>%
  filter(stringr::str_starts(parks_outcome_detailed, "add,")) %>%
  select(-parks_outcome_detailed) %>%
  group_by(outcome) %>%
  mutate(outcome_counts = n()) %>%
  ungroup() %>%
  distinct()
```

## 8c. Pie charts - iNaturalist

### - unique voucher outcomes

```{r}
iNat_outcomes_unique <- Yos_data %>%
  distinct(iNat_outcome, iNat_outcome_detailed) %>%
  mutate(
    iNat_outcome = factor(iNat_outcome, levels = c(
      "retain exact name", "retain, restricted license", 
      "geographic error", "identification error", 
      "taxonomic or nomenclatural error", "databasing discrepancy", 
      "XX-synonym", "XX-not in graphics"
      )),
    iNat_outcome_detailed = ifelse(stringr::str_detect(iNat_outcome_detailed, "restricted license"), "retain, but restricted license", iNat_outcome_detailed),
    iNat_outcome_detailed = ifelse(stringr::str_detect(iNat_outcome_detailed, "exact name"), "retain exact name", iNat_outcome_detailed),
    iNat_outcome_detailed = factor(iNat_outcome_detailed, levels = c(
      "retain exact name", "retain species, replacing taxonomic synonym or misapplied name with accepted name",
      "retain, but restricted license",
      "remove, coordinates erroneously inside protected area",
      "remove, incorrect identification",
      "remove, misapplied name",
      "remove, double or triple listing due to synonymy",
      "remove, horticultural record",
      "add, observations lost due to auto-obscured coordinates",
      "add, observations lost due manually obscured coordinates",
      "add, iNaturalist's protected area polygon out-of-date and excluded valid observation",
      "add, needsID observation that likely correct",
      "XX-synonym", 
      "XX-not in iNat, but occurs in protected area", 
      "XX-not in iNat, not in protected area",
      "XX-iNat needs ID only", "XX-Symbiotica only"
      ))
    ) %>%
  arrange(iNat_outcome, iNat_outcome_detailed) %>%
  distinct()
```

### - iNaturalist outcomes detailed

```{r}
# summarise iNaturalist outcomes
iNat_outcomes <- Yos_data %>%
  select(outcome = iNat_outcome_detailed, iNat_outcome) %>%
  filter(!stringr::str_starts(iNat_outcome, "XX")) %>%
  #filter(!stringr::str_starts(outcome, "add")) %>%
  mutate(
      outcome = ifelse(
        stringr::str_detect(outcome, "restricted license"), 
        "retain, but restricted license", 
        outcome),
    outcome = ifelse(
      stringr::str_detect(outcome, "exact name"), 
      "retain exact name", 
      outcome),
    iNat_outcome = factor(iNat_outcome, levels = c(
      "retain exact name", "retain, restricted license", 
      "geographic error", "identification error", 
      "taxonomic or nomenclatural error", "databasing discrepancy", 
      "XX-synonym", "XX-not in graphics"
      )),
    outcome = factor(outcome, levels = c(
      "retain exact name", "retain species, replacing taxonomic synonym or misapplied name with accepted name",
      "retain, but restricted license",
      "remove, coordinates erroneously inside protected area",
      "remove, incorrect identification",
      "remove, misapplied name",
      "remove, double or triple listing due to synonymy",
      "remove, horticultural record",
      "add, observations lost due to auto-obscured coordinates",
      "add, observations lost due manually obscured coordinates",
      "add, iNaturalist's protected area polygon out-of-date and excluded valid observation",
  ))
  ) %>%
  group_by(outcome) %>%
  mutate(outcome_counts = n()) %>%
  ungroup() %>%
  distinct() %>%
  arrange(outcome)

iNat_outcomes <- iNat_outcomes %>% 
  mutate(percent = 100*outcome_counts / sum(iNat_outcomes$outcome_counts)) %>%
  arrange(outcome)

# retain vs remove pie chart
ggplot(iNat_outcomes, aes(x="", y=outcome_counts, fill=outcome))+
  geom_bar(width = 1, stat = "identity") +
  coord_polar("y", start=0) + #scale_fill_brewer(palette="Blues")+
  theme_minimal() +
  theme(axis.text.x=element_blank())  
```

### - iNaturalist outcomes collapsed

```{r}
# summarise iNaturalist outcomes
iNat_outcomes_collapsed <- Yos_data %>%
  select(outcome = iNat_outcome, iNat_outcome_detailed) %>%
  filter(!stringr::str_starts(outcome, "XX")) %>%
  filter(!stringr::str_starts(iNat_outcome_detailed, "add")) %>%
  select(-iNat_outcome_detailed) %>%
  mutate(outcome = factor(outcome, levels = c(
      "retain exact name", "retain, restricted license", 
      "geographic error", "identification error", 
      "taxonomic or nomenclatural error", "databasing discrepancy"
      )),
  ) %>%
  group_by(outcome) %>%
  mutate(outcome_counts = n()) %>%
  ungroup() %>%
  distinct()

iNat_outcomes_collapsed <- iNat_outcomes_collapsed %>% 
  mutate(percent = 100*outcome_counts / sum(iNat_outcomes_collapsed$outcome_counts)) %>%
  arrange(outcome)

# double check numbers
start_fit[2] %>% as.data.frame() %>% rownames_to_column() %>% filter(str_detect(rowname, "iNat")) %>% select(original.values) %>% sum()
iNat_outcomes_collapsed %>% select(outcome_counts) %>% sum()

# retain vs remove pie chart
ggplot(iNat_outcomes_collapsed, aes(x="", y=outcome_counts, fill=outcome))+
  geom_bar(width = 1, stat = "identity") +
  coord_polar("y", start=0) + #scale_fill_brewer(palette="Blues")+
  theme_minimal() +
  theme(axis.text.x=element_blank())  
```

### - iNaturalist add-on outcomes

```{r}
add_ons_iNat <- Yos_data %>%
  select(outcome = iNat_outcome, iNat_outcome_detailed) %>%
  filter(!is.na(outcome)) %>%
  filter(!stringr::str_starts(outcome, "XX")) %>%
  filter(stringr::str_starts(iNat_outcome_detailed, "add,")) %>%
  select(-iNat_outcome_detailed) %>%
  group_by(outcome) %>%
  mutate(outcome_counts = n()) %>%
  ungroup() %>%
  distinct()

rest_of_circle_iNat <- sum(iNat_outcomes$outcome_counts) - sum(add_ons_iNat$outcome_counts)

total_retained_iNat <- 
  tibble(
    outcome = "rest", 
    outcome_counts = rest_of_circle_iNat)

add_ons_iNat <- add_ons_iNat %>%
  bind_rows(total_retained_iNat)

# create add-on wedge via pie chart
ggplot(add_ons_iNat, aes(x="", y=outcome_counts, fill=outcome))+
  geom_bar(width = 1, stat = "identity") +
  coord_polar("y", start=0) +
  theme_minimal() +
  theme(axis.text.x=element_blank())   
```

## 9. DON'T RUN: Figure 2 Euler diagram for post-automated steps; is approximate

File for this isn't on GutHub

```{r}
read_csv("data_Yosemite/Yos_synonyms_corrected.csv") -> synonym_corrected

synonyms <- synonym_corrected %>%
  mutate(
    voucher_start = ifelse(voucher_START == 1, TRUE, NA),
    voucher_start = ifelse(is.na(voucher_start), FALSE, voucher_start),
    parklist_start = ifelse(in_park_START == 1, TRUE, NA),
    parklist_start = ifelse(is.na(parklist_start), FALSE, parklist_start),
    iNat_RG_start = ifelse(iNat_RG_START== 1 | iNat_RG_START == "iNat-not-gbif", TRUE, NA),
    iNat_RG_start = ifelse(is.na(iNat_RG_start), FALSE, iNat_RG_start)
  )

data_for_synonyms <- synonyms %>% select(vouchers = voucher_start, parklist = parklist_start, iNat_RG = iNat_RG_start)

synonyms_fit <- euler(data_for_synonyms)
plot(start_fit, quantities = FALSE, labels = FALSE, lwd = 2)
plot(synonyms_fit, quantities = FALSE, labels = FALSE, lwd = 2)
plot(end_fit, quantities = FALSE, labels = FALSE, lwd = 2)

```

## 10. Final statistics

### - overall counts

```{r}
#final species count: 
total_species_count <- Yos_data %>% filter(final_list == 1) %>% nrow()

#final iNat count:

final_iNat_count <- Yos_data %>% filter(iNat_RG_END == 1) %>% nrow()

final_iNat_count / total_species_count

# final parks count: 

final_park_count <- Yos_data %>% filter(in_park_END == 1) %>% nrow()

final_park_count / total_species_count


# final voucher count: 

final_voucher_count <- Yos_data %>% filter(voucher_END == 1) %>% nrow()

final_voucher_count / total_species_count
```

### - voucher counts end

```{r}
Yos_data %>% filter(in_park_END == 1) %>% nrow() / Yos_data %>% filter(final_list == 1) %>% nrow()

old_only <- Yos_data %>% filter(final_list == 1, old_voucher == 1, is.na(recent_voucher)) %>% nrow()

old_new <- Yos_data %>% filter(final_list == 1, old_voucher == 1, recent_voucher == 1) %>% nrow()

new_only <- Yos_data %>% filter(final_list == 1, is.na(old_voucher), recent_voucher == 1) %>% nrow()

graminoid <- Yos_data %>% filter(broader == "4.monocot") %>% nrow()
```

### - iNat proportions

```{r}
iNat_and_old <- 
  Yos_data %>% 
  filter(final_list == 1, old_voucher == 1, is.na(recent_voucher)) %>% 
  filter(iNat_RG_END == 1) %>%
  nrow()

iNat_and_old / old_only

iNat_and_old_new <- 
  Yos_data %>% 
  filter(final_list == 1, old_voucher == 1, recent_voucher == 1) %>% 
  filter(iNat_RG_END == 1) %>%
  nrow()

iNat_and_old_new / old_new

iNat_and_new <- 
  Yos_data %>% 
  filter(final_list == 1, is.na(old_voucher), recent_voucher == 1) %>% 
  filter(iNat_RG_END == 1) %>%
  nrow()

iNat_and_new / new_only

iNat_graminoid <- 
  Yos_data %>% 
  filter(broader == "4.monocot") %>% 
  filter(iNat_RG_END == 1) %>%
  nrow()

iNat_graminoid / graminoid

```

### - park proportions

```{r}
  Yos_data %>% 
  filter(final_list == 1) %>%
  distinct(accepted_name, family, establishment_means) %>%
  write_csv("data_Yosemite/final_Yosemite_list.csv")

  Yos_data %>% 
  filter(final_list == 1) %>%
    select(accepted_name, scientific_name, status, family, broader, synonym_matches, establishment_means, count_RG, count_needs_id, in_park_START, voucher_START, iNat_RG_START, in_park_END, voucher_END, iNat_RG_END, old_voucher, recent_voucher, final_list, possibly_valid_needs_ID, iNat_outcome, parks_outcome, voucher_outcome, voucher_obs, voucher_obs_coord, year_first, first_observer, year_last, iNat_needs_ID_only_verdict, symbiota, voucher_notes = notes_about_vouchers, iNat_notes, parklist_notes = notes_for_parks_only) %>%
    write_csv("data_Yosemite/Yosemite_with_notes.csv")

park_and_old <- 
  Yos_data %>% 
  filter(final_list == 1, old_voucher == 1, is.na(recent_voucher)) %>% 
  filter(in_park_END == 1) %>%
  nrow()

park_and_old / old_only

park_and_old_new <- 
  Yos_data %>% 
  filter(final_list == 1, old_voucher == 1, recent_voucher == 1) %>% 
  filter(in_park_END == 1) %>%
  nrow()

park_and_old_new / old_new

park_and_new <- 
  Yos_data %>% 
  filter(final_list == 1, is.na(old_voucher), recent_voucher == 1) %>% 
  filter(in_park_END == 1) %>%
  nrow()

park_and_new / new_only

new_only - park_and_new


total_species_count - final_park_count

Yos_data %>%
  filter(final_list == 1) %>%
  filter(!(recent_voucher == 1 & is.na(old_voucher)))%>% 
  filter(in_park_END == 1)

1301/1390
```

### - lists of unique species by resource

```{r}

iNat_only <- Yos_data %>% 
  filter(iNat_RG_END == 1 & is.na(voucher_END) & is.na(in_park_END)) %>%
  select(accepted_name, family, establishment_means, broader) %>%
  distinct() %>%
  mutate(group = "iNaturalist only")

voucher_only <- Yos_data %>% 
  filter(is.na(iNat_RG_END) & voucher_END == 1 & is.na(in_park_END)) %>%
  select(accepted_name, family, establishment_means, broader) %>%
  distinct() %>%
  mutate(group = "voucher only")

parklist_only <- Yos_data %>% 
  filter(is.na(iNat_RG_END) == 1 & is.na(voucher_END) & in_park_END == 1) %>%
  select(accepted_name, family, establishment_means, broader) %>%
  distinct() %>%
  mutate(group = "protected area list only")

species_list <- voucher_only %>%
  bind_rows(parklist_only, iNat_only) %>%
  write_csv("data_Yosemite/Yosemite_unique_species.csv")
```
