---
title: "Royal vouchers, parks list, iNaturalist"
format: html
editor: visual
editor_options: 
  chunk_output_type: console
---

## Libraries

```{r}
library(tidyverse)
library(eulerr)

Royal_data <- read_csv("data_Royal/Royal_Supplementary Table.csv")
```

## 7 Euler diagrams

### - starting data

```{r}
start <- Royal_data %>%
  filter(!notes %in% c("needsID-IGNORE")) %>%
  mutate(
    voucher_start = ifelse(voucher_START == 1, TRUE, NA),
    voucher_start = ifelse(is.na(voucher_start), FALSE, voucher_start),
    parklist_start = ifelse(in_park_START == 1, TRUE, NA),
    parklist_start = ifelse(is.na(parklist_start), FALSE, parklist_start),
    iNat_RG_start = ifelse(iNat_RG_START== 1 | iNat_RG_START == "iNat-not-gbif", TRUE, NA),
    iNat_RG_start = ifelse(is.na(iNat_RG_start), FALSE, iNat_RG_start)
  )

data_for_start <- start %>% select(vouchers = voucher_start, parklist = parklist_start, iNat_RG = iNat_RG_start)

start_fit <- euler(data_for_start)
plot(start_fit, quantities = FALSE, labels = FALSE)
plot(start_fit, quantities = TRUE, labels = FALSE)

start_fit

total_count_start <- start_fit$original.values %>% sum()

voucher_start <- start_fit$original.values %>% data.frame() %>% rownames_to_column() %>% rename(counts = 2, category = 1) %>% filter(stringr::str_detect(category, "voucher"))
voucher_start_count <- sum(voucher_start$counts)
voucher_start_prop <- voucher_start_count / total_count_start

iNat_start <- start_fit$original.values %>% data.frame() %>% rownames_to_column() %>% rename(counts = 2, category = 1) %>% filter(stringr::str_detect(category, "iNat"))

iNat_start_count <- sum(iNat_start$counts)
iNat_start_prop <- iNat_start_count / total_count_start

park_start <- start_fit$original.values %>% data.frame() %>% rownames_to_column() %>% rename(counts = 2, category = 1) %>% filter(stringr::str_detect(category, "park"))

park_start_count <- sum(park_start$counts)
```

### - ending data

```{r}
end <- Royal_data %>%
  filter(final_list == 1) %>%
  mutate(
    voucher_end = ifelse(voucher_END == 1, TRUE, NA),
    voucher_end = ifelse(is.na(voucher_end), FALSE, voucher_end),
    parklist_end = ifelse(in_park_END == 1, TRUE, NA),
    parklist_end = ifelse(is.na(parklist_end), FALSE, parklist_end),
    iNat_RG_end = ifelse(iNat_RG_END == 1, TRUE, NA),
    iNat_RG_end = ifelse(is.na(iNat_RG_end), FALSE, iNat_RG_end)
  )

data_for_end <- end %>% select(vouchers = voucher_end, parklist = parklist_end, iNat_RG = iNat_RG_end)

end_fit <- euler(data_for_end)
plot(end_fit, quantities = FALSE, labels = FALSE)
plot(end_fit, quantities = TRUE, labels = TRUE)

total_count_end <- end_fit$original.values %>% sum()

voucher_end <- end_fit$original.values %>% data.frame() %>% rownames_to_column() %>% rename(counts = 2, category = 1) %>% filter(stringr::str_detect(category, "voucher"))
voucher_end_count <- sum(voucher_end$counts)

iNat_end <- end_fit$original.values %>% data.frame() %>% rownames_to_column() %>% rename(counts = 2, category = 1) %>% filter(stringr::str_detect(category, "iNat"))
iNat_end_count <- sum(iNat_end$counts)
iNat_end_prop <- iNat_end_count / total_count_end

park_end <- end_fit$original.values %>% data.frame() %>% rownames_to_column() %>% rename(counts = 2, category = 1) %>% filter(stringr::str_detect(category, "park"))
park_end_count <- sum(park_end$counts)
```

### - ending data - showy

```{r}
#Royal_data <- read_csv("data_Royal/Royal master species list_2024_09_23.csv")

showy <- Royal_data %>%
  filter(voucher_END == 1 | in_park_END == 1 | iNat_RG_END == 1) %>%
  filter(broader != "4.monocot") %>%
  mutate(
    voucher_end = ifelse(voucher_END == 1, TRUE, NA),
    voucher_end = ifelse(is.na(voucher_end), FALSE, voucher_end),
    parklist_end = ifelse(in_park_END == 1, TRUE, NA),
    parklist_end = ifelse(is.na(parklist_end), FALSE, parklist_end),
    iNat_RG_end = ifelse(iNat_RG_END == 1, TRUE, NA),
    iNat_RG_end = ifelse(is.na(iNat_RG_end), FALSE, iNat_RG_end)
  )

data_for_showy <- showy %>% select(vouchers = voucher_end, parklist = parklist_end, iNat_RG = iNat_RG_end)

showy_fit <- euler(data_for_showy)
plot(showy_fit, quantities = FALSE, labels = FALSE)
plot(showy_fit, quantities = TRUE, labels = TRUE)

iNat_end_showy <- showy_fit$original.values %>% data.frame() %>% rownames_to_column() %>% rename(counts = 2, category = 1) %>% filter(stringr::str_detect(category, "iNat"))
total_count_end_showy <- showy_fit$original.values %>% sum()
iNat_end_showy_count <- sum(iNat_end_showy$counts)
iNat_end_showy_prop <- iNat_end_showy_count / total_count_end_showy
```

### - ending data - graminoids

```{r}
graminoid <- Royal_data %>%
  filter(voucher_END == 1 | in_park_END == 1 | iNat_RG_END == 1) %>%
  filter(broader == "4.monocot") %>%
  mutate(
    voucher_end = ifelse(voucher_END == 1, TRUE, NA),
    voucher_end = ifelse(is.na(voucher_end), FALSE, voucher_end),
    parklist_end = ifelse(in_park_END == 1, TRUE, NA),
    parklist_end = ifelse(is.na(parklist_end), FALSE, parklist_end),
    iNat_RG_end = ifelse(iNat_RG_END == 1, TRUE, NA),
    iNat_RG_end = ifelse(is.na(iNat_RG_end), FALSE, iNat_RG_end)
  )

data_for_graminoid <- graminoid %>% select(vouchers = voucher_end, parklist = parklist_end, iNat_RG = iNat_RG_end)

graminoid_fit <- euler(data_for_graminoid)
plot(graminoid_fit, quantities = FALSE, labels = FALSE)
plot(graminoid_fit, quantities = TRUE, labels = TRUE)

iNat_end_graminoid <- graminoid_fit$original.values %>% data.frame() %>% rownames_to_column() %>% rename(counts = 2, category = 1) %>% filter(stringr::str_detect(category, "iNat"))
total_count_end_graminoid <- graminoid_fit$original.values %>% sum()
iNat_end_graminoid_count <- sum(iNat_end_graminoid$counts)
iNat_end_graminoid_prop <- iNat_end_graminoid_count / total_count_end_graminoid

```

### - ending data - natives

```{r}
native <- Royal_data %>%
  filter(voucher_END == 1 | in_park_END == 1 | iNat_RG_END == 1) %>%
  filter(establishment_means == "native") %>%
  mutate(
    voucher_end = ifelse(voucher_END == 1, TRUE, NA),
    voucher_end = ifelse(is.na(voucher_end), FALSE, voucher_end),
    parklist_end = ifelse(in_park_END == 1, TRUE, NA),
    parklist_end = ifelse(is.na(parklist_end), FALSE, parklist_end),
    iNat_RG_end = ifelse(iNat_RG_END == 1, TRUE, NA),
    iNat_RG_end = ifelse(is.na(iNat_RG_end), FALSE, iNat_RG_end)
  )

data_for_native <- native %>% select(vouchers = voucher_end, parklist = parklist_end, iNat_RG = iNat_RG_end)

native_fit <- euler(data_for_native)
plot(native_fit, quantities = FALSE, labels = FALSE)
plot(native_fit, quantities = TRUE, labels = TRUE)
```

### - ending data - invasives

```{r}
invasive <- Royal_data %>%
  filter(voucher_END == 1 | in_park_END == 1 | iNat_RG_END == 1) %>%
  filter(establishment_means == "introduced") %>%
  mutate(
    voucher_end = ifelse(voucher_END == 1, TRUE, NA),
    voucher_end = ifelse(is.na(voucher_end), FALSE, voucher_end),
    parklist_end = ifelse(in_park_END == 1, TRUE, NA),
    parklist_end = ifelse(is.na(parklist_end), FALSE, parklist_end),
    iNat_RG_end = ifelse(iNat_RG_END == 1, TRUE, NA),
    iNat_RG_end = ifelse(is.na(iNat_RG_end), FALSE, iNat_RG_end)
  )

data_for_invasive <- invasive %>% select(vouchers = voucher_end, parklist = parklist_end, iNat_RG = iNat_RG_end)

invasive_fit <- euler(data_for_invasive)
plot(invasive_fit, quantities = FALSE, labels = FALSE)
plot(invasive_fit, quantities = TRUE, labels = TRUE)
```

### - ending data - old vouchers only

```{r}
old_vouchers <- Royal_data %>%
  filter(voucher_END == 1 | in_park_END == 1 | iNat_RG_END == 1) %>%
  filter(old_voucher == 1 & is.na(recent_voucher)) %>%
  mutate(
    voucher_end = ifelse(voucher_END == 1, TRUE, NA),
    voucher_end = ifelse(is.na(voucher_end), FALSE, voucher_end),
    parklist_end = ifelse(in_park_END == 1, TRUE, NA),
    parklist_end = ifelse(is.na(parklist_end), FALSE, parklist_end),
    iNat_RG_end = ifelse(iNat_RG_END == 1 , TRUE, NA),
    iNat_RG_end = ifelse(is.na(iNat_RG_end), FALSE, iNat_RG_end)
  )

data_for_end_old <- old_vouchers %>% select(vouchers = voucher_end, parklist = parklist_end, iNat_RG = iNat_RG_end)

end_old_fit <- euler(data_for_end_old)
plot(end_old_fit, quantities = TRUE, labels = FALSE)
plot(end_old_fit, quantities = TRUE, labels = TRUE)


total_count_end_old <- end_old_fit$original.values %>% sum()
iNat_end_old <- end_old_fit$original.values %>% data.frame() %>% rownames_to_column() %>% rename(counts = 2, category = 1) %>% filter(stringr::str_detect(category, "iNat"))
iNat_end_old_count <- sum(iNat_end_old$counts)
iNat_end_old_prop <- iNat_end_old_count / total_count_end_old
```

### - ending data - old & recent vouchers

```{r}
old_and_recent_vouchers <- Royal_data %>%
  filter(voucher_END == 1 | in_park_END == 1 | iNat_RG_END == 1) %>%
  filter(recent_voucher == 1 & old_voucher == 1) %>%
  mutate(
    voucher_end = ifelse(voucher_END == 1, TRUE, NA),
    voucher_end = ifelse(is.na(voucher_end), FALSE, voucher_end),
    parklist_end = ifelse(in_park_END == 1, TRUE, NA),
    parklist_end = ifelse(is.na(parklist_end), FALSE, parklist_end),
    iNat_RG_end = ifelse(iNat_RG_END == 1 , TRUE, NA),
    iNat_RG_end = ifelse(is.na(iNat_RG_end), FALSE, iNat_RG_end)
  )

data_for_end_old_recent <- old_and_recent_vouchers %>% select(vouchers = voucher_end, parklist = parklist_end, iNat_RG = iNat_RG_end)

end_old_recent_fit <- euler(data_for_end_old_recent)
plot(end_old_recent_fit, quantities = TRUE, labels = FALSE)
plot(end_old_recent_fit, quantities = FALSE, labels = FALSE)

total_count_end_old_recent <- end_old_recent_fit$original.values %>% sum()
iNat_end_old_recent <- end_old_recent_fit$original.values %>% data.frame() %>% rownames_to_column() %>% rename(counts = 2, category = 1) %>% filter(stringr::str_detect(category, "iNat"))
iNat_end_old_recent_count <- sum(iNat_end_old_recent$counts)
iNat_end_old_recent_prop <- iNat_end_old_recent_count / total_count_end_old_recent
```

### - ending data - recent vouchers only

```{r}
recent_vouchers <- Royal_data %>%
  filter(voucher_END == 1 | in_park_END == 1 | iNat_RG_END == 1) %>%
  filter(recent_voucher == 1 & is.na(old_voucher)) %>%
  mutate(
    voucher_end = ifelse(voucher_END == 1, TRUE, NA),
    voucher_end = ifelse(is.na(voucher_end), FALSE, voucher_end),
    parklist_end = ifelse(in_park_END == 1, TRUE, NA),
    parklist_end = ifelse(is.na(parklist_end), FALSE, parklist_end),
    iNat_RG_end = ifelse(iNat_RG_END == 1 , TRUE, NA),
    iNat_RG_end = ifelse(is.na(iNat_RG_end), FALSE, iNat_RG_end)
  )

data_for_end_recent <- recent_vouchers %>% select(vouchers = voucher_end, parklist = parklist_end, iNat_RG = iNat_RG_end)

end_recent_fit <- euler(data_for_end_recent)
plot(end_recent_fit, quantities = FALSE, labels = FALSE)
plot(end_recent_fit, quantities = TRUE, labels = FALSE)

total_count_end_recent <- end_recent_fit$original.values %>% sum()
iNat_end_recent <- end_recent_fit$original.values %>% data.frame() %>% rownames_to_column() %>% rename(counts = 2, category = 1) %>% filter(stringr::str_detect(category, "iNat"))
iNat_end_recent_count <- sum(iNat_end_recent$counts)
iNat_end_recent_prop <- iNat_end_recent_count / total_count_end_recent


graminoid_fit$original %>% sum() + showy_fit$original %>% sum()
invasive_fit$original %>% sum() + native_fit$original %>% sum()
end_old_fit$original %>% sum() + end_old_recent_fit$original %>% sum() + end_recent_fit$original %>% sum()
```

## 8a. Pie charts - vouchers

### - unique voucher outcomes

```{r}
# unique voucher outcomes
voucher_outcomes_unique <- Royal_data %>%
  distinct(voucher_outcome, voucher_outcome_detailed) %>%
  mutate(
    voucher_outcome = factor(voucher_outcome, levels = c("retain exact name", "retain species, replacing taxonomic synonym or misapplied name with accepted name", "geographic error", "identification error", "taxonomic or nomenclatural error", "databasing discrepancy", "XX-synonym", "XX-misapplied", "XX-not in graphics")),
    voucher_outcome_detailed = factor(voucher_outcome_detailed, levels = c(
      "retain exact name", "retain species, replacing taxonomic synonym or misapplied name with accepted name",
      "remove, coordinates erroneously inside protected area",
      "add, coordinates erroneously outside protected area or missing coordinates",
      "remove, incorrect identification",
      "remove, misapplied name",
      "remove, double or triple listing due to synonymy",
      "remove, taxa lumped using iNaturalist taxonomy",
      "remove, untraced taxonomic error",
      "add, vouchers missed due to undetected synonyms",
      "remove, horticultural record",
      "remove, wrong name assigned during databasing",
      "add, known vouchers missing from biodiversity portal",
      "vouchers missed due to undetected synonyms",
      "XX-synonym", "XX-misapplied",
      "XX-no voucher, but occurs in protected area", 
      "XX-no voucher, not in protected area", 
      "XX-voucher with 'coordinates erroneously outside protected area or missing coordinates' found, but rejected due to 'incorrect identification'; not in protected area",
      "XX-voucher with 'coordinates erroneously outside protected area or missing coordinates' found, but rejected due to 'untraced taxonomic error'; not in protected area",
      "XX-voucher with 'coordinates erroneously outside protected area or missing coordinates' found, but rejected because 'horticultural record'; not in protected area",
      "XX-vouchers missed due to 'undetected synonyms' found, but rejected due to 'untraced taxonomic error'", 
      "XX-iNat needs ID only", "XX-Symbiotica only"
    ))
    ) %>%
  arrange(voucher_outcome, voucher_outcome_detailed)
```

### - voucher outcomes detailed

```{r}
# summarise voucher outcomes
voucher_outcomes <- Royal_data %>%
  select(outcome = voucher_outcome_detailed, voucher_outcome) %>%
  filter(!is.na(outcome)) %>%
  filter(!stringr::str_starts(outcome, "XX")) %>%
  #filter(!stringr::str_starts(outcome, "add")) %>%
  mutate(
      voucher_outcome = factor(voucher_outcome, levels = c("retain exact name", "retain species, replacing taxonomic synonym or misapplied name with accepted name", "geographic error", "identification error", "taxonomic or nomenclatural error", "databasing discrepancy", "XX-synonym", "XX-misapplied", "XX-not in graphics")),
    outcome = factor(outcome, levels = c(
      "retain exact name", "retain species, replacing taxonomic synonym or misapplied name with accepted name",
      "remove, coordinates erroneously inside protected area",
      "add, coordinates erroneously outside protected area or missing coordinates",
      "remove, incorrect identification",
      "remove, misapplied name",
      "remove, double or triple listing due to synonymy",
      "remove, taxa lumped using iNaturalist taxonomy",
      "remove, untraced taxonomic error",
      "add, vouchers missed due to undetected synonyms",
      "remove, horticultural record",
      "remove, wrong name assigned during databasing",
      "add, known vouchers missing from biodiversity portal",
      "vouchers missed due to undetected synonyms"))) %>%
  group_by(outcome) %>%
  mutate(outcome_counts = n()) %>%
  ungroup() %>%
  distinct(voucher_outcome, outcome, .keep_all = TRUE) %>%
  select(voucher_outcome, outcome, outcome_counts)  %>%
  arrange(outcome)

voucher_outcomes <- voucher_outcomes %>%
  mutate(percent = 100*outcome_counts / sum(voucher_outcomes$outcome_counts)) %>%
  arrange(outcome)

# retain vs remove pie chart
ggplot(voucher_outcomes, aes(x="", y=outcome_counts, fill=outcome))+
  geom_bar(width = 1, stat = "identity") +
  coord_polar("y", start=0) +
  theme_minimal() +
  theme(axis.text.x=element_blank())  
```

### - voucher outcomes collapsed

```{r}
 voucher_outcomes_collapsed <- Royal_data %>%
  select(outcome = voucher_outcome, voucher_outcome_detailed) %>%
  filter(!is.na(outcome)) %>%
  filter(!stringr::str_starts(outcome, "XX") & !stringr::str_starts(voucher_outcome_detailed, "add")) %>%
  select(-voucher_outcome_detailed) %>%
  mutate(
    outcome = factor(outcome, levels = c(
      "retain exact name", "retain species, replacing taxonomic synonym or misapplied name with accepted name",
      "geographic error", "identification error", "taxonomic or nomenclatural error", "databasing discrepancy"))
  ) %>%
  group_by(outcome) %>%
  mutate(outcome_counts = n()) %>%
  ungroup() %>%
  distinct(outcome, .keep_all = TRUE) %>%
  arrange(outcome)

# double check numbers
start_fit[2] %>% as.data.frame() %>% rownames_to_column() %>% filter(str_detect(rowname, "voucher")) %>% select(original.values) %>% sum()
voucher_outcomes_collapsed %>% select(outcome_counts) %>% sum()

voucher_outcomes_collapsed <- voucher_outcomes_collapsed %>%
  mutate(percent = 100*outcome_counts / sum(voucher_outcomes_collapsed$outcome_counts)) %>%
  arrange(outcome)

# retain vs remove pie chart
ggplot(voucher_outcomes_collapsed, aes(x="", y=outcome_counts, fill=outcome))+
  geom_bar(width = 1, stat = "identity") +
  coord_polar("y", start=0) +
  theme_minimal() +
  theme(axis.text.x=element_blank())  

```

### - voucher add-on outcomes

```{r}
add_ons_vouchers <- Royal_data %>%
  select(outcome = voucher_outcome, voucher_outcome_detailed) %>%
  filter(!is.na(outcome)) %>%
  filter(!stringr::str_starts(outcome, "XX")) %>%
  filter(stringr::str_starts(voucher_outcome_detailed, "add,")) %>%
  select(-voucher_outcome_detailed) %>%
  group_by(outcome) %>%
  mutate(outcome_counts = n()) %>%
  ungroup() %>%
  distinct()

rest_of_circle_vouchers <- sum(voucher_outcomes$outcome_counts) - sum(add_ons_vouchers$outcome_counts)

total_retained_vouchers <- 
  tibble(
    outcome = "rest", 
    outcome_counts = rest_of_circle_vouchers)

add_ons_vouchers <- add_ons_vouchers %>%
  bind_rows(total_retained_vouchers)

# create add-on wedge via pie chart
ggplot(add_ons_vouchers, aes(x="", y=outcome_counts, fill=outcome))+
  geom_bar(width = 1, stat = "identity") +
  coord_polar("y", start=0) +
  theme_minimal() +
  theme(axis.text.x=element_blank())  
```

## 8b. Pie charts - parks list

### - unique parks list outcomes

```{r}
park_outcomes_unique <- Royal_data %>%
  distinct(parks_outcome, parks_outcome_detailed) %>%
  mutate(
    parks_outcome = factor(parks_outcome, levels = c("retain exact name", "retain species, replacing taxonomic synonym or misapplied name with accepted name", "retain because vouchers for species are close to the park", "geographic error", "identification error", "taxonomic or nomenclatural error", "databasing discrepancy", "XX-synonym", "XX-misapplied", "XX-not in graphics")),
    parks_outcome_detailed = factor(parks_outcome_detailed, levels = c(
      "retain exact name", "retain species, replacing taxonomic synonym or misapplied name with accepted name",
      "retain because vouchers for species are close to the park",
      "retain, misapplied",
      "remove, species range far from park",
      "remove, misapplied name",
      "remove, double or triple listing due to synonymy",
      "remove, taxa lumped using iNaturalist taxonomy",
      "add, taxonomic splits since last list update",
      "remove, designated as 'False Report'",
      "remove, wrong name assigned during databasing",
      "remove, horticultural record",
      "add, known vouchers missing from biodiversity portal",
      "vouchers missed due to undetected synonyms",
      "XX-synonym", "XX-misapplied",
      "XX-not on parks list, but occurs in protected area", 
      "XX-not on parks list, not in protected area",
      "XX-iNat needs ID only", "XX-Symbiotica only"
    ))
    ) %>%
  arrange(parks_outcome, parks_outcome_detailed)
```

### - parks list outcomes detailed

```{r}
parklist_outcomes <- Royal_data %>%
  select(outcome = parks_outcome_detailed, parks_outcome) %>%
  filter(!stringr::str_starts(outcome, "XX")) %>%
  mutate(parks_outcome = factor(parks_outcome, levels = c("retain exact name", "retain species, replacing taxonomic synonym or misapplied name with accepted name", "retain because vouchers for species are close to the park", "geographic error", "identification error", "taxonomic or nomenclatural error", "databasing discrepancy", "XX-synonym", "XX-not in graphics")),
    outcome = factor(outcome, levels = c(
      "retain exact name", 
      "retain species, replacing taxonomic synonym or misapplied name with accepted name",
      "retain because vouchers for species are close to the park",
      "remove, species range far from park",
      "remove, misapplied name",
      "remove, double or triple listing due to synonymy",
      "remove, taxa lumped using iNaturalist taxonomy",
      "add, taxonomic splits since last list update",
      "remove, designated as 'False Report'",
      "remove, wrong name assigned during databasing",
      "remove, horticultural record",
      "add, known vouchers missing from biodiversity portal",
      "vouchers missed due to undetected synonyms",
      "XX-synonym", "XX-misapplied",
      "XX-not on parks list, but occurs in protected area", 
      "XX-not on parks list, not in protected area",
      "XX-iNat needs ID only", "XX-Symbiotica only"
    ))
        ) %>%
  group_by(outcome) %>%
  mutate(outcome_counts = n()) %>%
  ungroup() %>%
  distinct() %>%
  arrange(outcome)

parklist_outcomes <- parklist_outcomes %>%
  mutate(percent = (100*outcome_counts) / sum(parklist_outcomes$outcome_counts)) %>%
  distinct() %>%
  arrange(outcome)

# retain vs remove pie chart
ggplot(parklist_outcomes, aes(x="", y=outcome_counts, fill=outcome))+
  geom_bar(width = 1, stat = "identity") +
  coord_polar("y", start=0) + scale_fill_brewer(palette="Blues")+
  theme_minimal() +
  theme(axis.text.x=element_blank())  
```

### - parks list outcomes collapsed

```{r}
# summarise parks list outcomes
parklist_outcomes_collapsed <- Royal_data %>%
  select(outcome = parks_outcome, parks_outcome_detailed) %>%
  filter(!stringr::str_starts(outcome, "XX")) %>%
  filter(!stringr::str_starts(parks_outcome_detailed, "add")) %>%
  select(-parks_outcome_detailed) %>%
  mutate(outcome = factor(outcome, levels = c("retain exact name", "retain species, replacing taxonomic synonym or misapplied name with accepted name", "retain because vouchers for species are close to the park", "geographic error", "identification error", "taxonomic or nomenclatural error", "databasing discrepancy"))) %>%
  group_by(outcome) %>%
  mutate(outcome_counts = n()) %>%
  ungroup() %>%
  distinct() %>%
  arrange(outcome)

parklist_outcomes_collapsed <- parklist_outcomes_collapsed %>%
  mutate(percent = (100*outcome_counts) / sum(parklist_outcomes_collapsed$outcome_counts)) %>%
  distinct() %>%
  arrange(outcome)

# double check numbers
start_fit[2] %>% as.data.frame() %>% rownames_to_column() %>% filter(str_detect(rowname, "park")) %>% select(original.values) %>% sum()
parklist_outcomes_collapsed %>% select(outcome_counts) %>% sum()

# retain vs remove pie chart
ggplot(parklist_outcomes_collapsed, aes(x="", y=outcome_counts, fill=outcome))+
  geom_bar(width = 1, stat = "identity") +
  coord_polar("y", start=0) + scale_fill_brewer(palette="Blues")+
  theme_minimal() +
  theme(axis.text.x=element_blank())  
```

### - park list add-on outcomes

```{r}
add_ons_parks <- Royal_data %>%
  select(outcome = parks_outcome, parks_outcome_detailed) %>%
  filter(!is.na(outcome)) %>%
  filter(!stringr::str_starts(outcome, "XX")) %>%
  filter(stringr::str_starts(parks_outcome_detailed, "add,")) %>%
  select(-parks_outcome_detailed) %>%
  group_by(outcome) %>%
  mutate(outcome_counts = n()) %>%
  ungroup() %>%
  distinct()
```

## 8c. Pie charts - iNaturalist

### - unique voucher outcomes

```{r}
iNat_outcomes_unique <- Royal_data %>%
  distinct(iNat_outcome, iNat_outcome_detailed) %>%
  mutate(
    iNat_outcome = factor(iNat_outcome, levels = c(
      "retain exact name", "retain, restricted license", 
      "geographic error", "identification error", 
      "taxonomic or nomenclatural error", "databasing discrepancy", 
      "XX-synonym", "XX-misapplied", "XX-not in graphics"
      )),
    iNat_outcome_detailed = ifelse(stringr::str_detect(iNat_outcome_detailed, "restricted license"), "retain, but restricted license", iNat_outcome_detailed),
    iNat_outcome_detailed = ifelse(stringr::str_detect(iNat_outcome_detailed, "exact name"), "retain exact name", iNat_outcome_detailed),
    iNat_outcome_detailed = factor(iNat_outcome_detailed, levels = c(
      "retain exact name", "retain species, replacing taxonomic synonym or misapplied name with accepted name",
      "retain, but restricted license",
      "remove, coordinates erroneously inside protected area",
      "remove, incorrect identification",
      "remove, misapplied name",
      "remove, double or triple listing due to synonymy",
      "remove, horticultural record",
      "add, observations lost due to auto-obscured coordinates",
      "add, observations lost due manually obscured coordinates",
      "add, observations lost due to inaccurate protected area polygon",
      "add, needsID observation that is definitely correct",
      "add, needsID observation that likely correct",
      "XX-synonym", "XX-misapplied", 
      "XX-not in iNat, but occurs in protected area", 
      "XX-not in iNat, not in protected area",
      "XX-iNat needs ID only", "XX-Symbiotica only"
      ))
    ) %>%
  arrange(iNat_outcome, iNat_outcome_detailed) %>%
  distinct()
```

### - iNaturalist outcomes detailed

```{r}
# summarise iNaturalist outcomes
iNat_outcomes <- Royal_data %>%
  select(outcome = iNat_outcome_detailed, iNat_outcome) %>%
  filter(!stringr::str_starts(iNat_outcome, "XX")) %>%
  mutate(
      outcome = ifelse(
        stringr::str_detect(outcome, "restricted license"), 
        "retain, but restricted license", 
        outcome),
    outcome = ifelse(
      stringr::str_detect(outcome, "exact name"), 
      "retain exact name", 
      outcome),
    iNat_outcome = factor(iNat_outcome, levels = c(
      "retain exact name", "retain, restricted license", 
      "geographic error", "identification error", 
      "taxonomic or nomenclatural error", "databasing discrepancy", 
      "XX-synonym", "XX-misapplied", "XX-not in graphics"
      )),
    outcome = factor(outcome, levels = c(
      "retain exact name", "retain species, replacing taxonomic synonym or misapplied name with accepted name",
      "retain, but restricted license",
      "remove, coordinates erroneously inside protected area",
      "remove, incorrect identification",
      "remove, misapplied name",
      "remove, double or triple listing due to synonymy",
      "remove, horticultural record",
      "add, observations lost due to auto-obscured coordinates",
      "add, observations lost due manually obscured coordinates",
      "add, observations lost due to inaccurate protected area polygon"
  ))
  ) %>%
  group_by(outcome) %>%
  mutate(outcome_counts = n()) %>%
  ungroup() %>%
  distinct() %>%
  arrange(outcome)

iNat_outcomes <- iNat_outcomes %>% 
  mutate(percent = 100*outcome_counts / sum(iNat_outcomes$outcome_counts)) %>%
  arrange(outcome)

# retain vs remove pie chart
ggplot(iNat_outcomes, aes(x="", y=outcome_counts, fill=outcome))+
  geom_bar(width = 1, stat = "identity") +
  coord_polar("y", start=0) + #scale_fill_brewer(palette="Blues")+
  theme_minimal() +
  theme(axis.text.x=element_blank())  
```

### - iNaturalist outcomes collapsed

```{r}
# summarise iNaturalist outcomes
iNat_outcomes_collapsed <- Royal_data %>%
  select(outcome = iNat_outcome, iNat_outcome_detailed) %>%
  filter(!stringr::str_starts(outcome, "XX")) %>%
  filter(!stringr::str_starts(iNat_outcome_detailed, "add")) %>%
  select(-iNat_outcome_detailed) %>%
  mutate(outcome = factor(outcome, levels = c(
      "retain exact name", "retain, restricted license", 
      "geographic error", "identification error", 
      "taxonomic or nomenclatural error", "databasing discrepancy"
      )),
  ) %>%
  group_by(outcome) %>%
  mutate(outcome_counts = n()) %>%
  ungroup() %>%
  distinct()

iNat_outcomes_collapsed <- iNat_outcomes_collapsed %>% 
  mutate(percent = 100*outcome_counts / sum(iNat_outcomes_collapsed$outcome_counts)) %>%
  arrange(outcome)

# double check numbers
start_fit[2] %>% as.data.frame() %>% rownames_to_column() %>% filter(str_detect(rowname, "iNat")) %>% select(original.values) %>% sum()
iNat_outcomes_collapsed %>% select(outcome_counts) %>% sum()

# retain vs remove pie chart
ggplot(iNat_outcomes_collapsed, aes(x="", y=outcome_counts, fill=outcome))+
  geom_bar(width = 1, stat = "identity") +
  coord_polar("y", start=0) + #scale_fill_brewer(palette="Blues")+
  theme_minimal() +
  theme(axis.text.x=element_blank())  
```

### - iNaturalist add-on outcomes

```{r}
add_ons_iNat <- Royal_data %>%
  select(outcome = iNat_outcome, iNat_outcome_detailed) %>%
  filter(!is.na(outcome)) %>%
  filter(!stringr::str_starts(outcome, "XX")) %>%
  filter(stringr::str_starts(iNat_outcome_detailed, "add,")) %>%
  select(-iNat_outcome_detailed) %>%
  group_by(outcome) %>%
  mutate(outcome_counts = n()) %>%
  ungroup() %>%
  distinct()

rest_of_circle_iNat <- sum(iNat_outcomes$outcome_counts) - sum(add_ons_iNat$outcome_counts)

total_retained_iNat <- 
  tibble(
    outcome = "rest", 
    outcome_counts = rest_of_circle_iNat)

add_ons_iNat <- add_ons_iNat %>%
  bind_rows(total_retained_iNat)

# create add-on wedge via pie chart
ggplot(add_ons_iNat, aes(x="", y=outcome_counts, fill=outcome))+
  geom_bar(width = 1, stat = "identity") +
  coord_polar("y", start=0) +
  theme_minimal() +
  theme(axis.text.x=element_blank())   
```

## 8. Pie charts

### - voucher outcomes

```{r}
voucher_outcomes <- Royal_data %>%
  select(outcome = voucher_outcome) %>%
  filter(!is.na(outcome)) %>%
  filter(stringr::str_starts(outcome, "retain")|stringr::str_starts(outcome, "remove")) %>% 
  mutate(
    outcome = case_when(
      outcome == "retain voucher" ~ "1. retain",
      outcome == "retain, synonym" ~ "2. retain a synonym",
      outcome == "retain, misapplied" ~ "3. retain, misapplied",
      outcome == "remove, wrong coordinates" ~ "4. wrong coordinates",
      outcome == "remove, mis-identification" ~ "5. wrong ID",
      outcome == "remove, duplicate synonym" ~ "6. duplicate name",
      outcome == "remove, taxonomic mismatch (weird)" ~ "7. untraced taxonomic mismatch",
      outcome == "remove, horticultural" ~ "8. horticultural record",
      outcome == "remove, double listing" ~ "6. duplicate name",
      outcome == "remove, contrived synonym" ~ "7. contrived synonym",
      outcome == "remove, listing based on database error" ~ "8. databasing discrepancies"
      )
  ) %>%
  group_by(outcome) %>%
  mutate(outcome_counts = n()) %>%
  ungroup() %>%
  distinct()

voucher_outcomes <- voucher_outcomes %>%
  mutate(percent = 100*outcome_counts / sum(voucher_outcomes$outcome_counts)) %>%
  arrange(outcome)

# retain vs remove pie chart
ggplot(voucher_outcomes, aes(x="", y=outcome_counts, fill=outcome))+
  geom_bar(width = 1, stat = "identity") +
  coord_polar("y", start=0) +
  theme_minimal() +
  theme(axis.text.x=element_blank())  
```

### - voucher outcomes collapsed

```{r}
voucher_outcomes_collapsed <- Royal_data %>%
  select(outcome = voucher_outcome) %>%
  filter(!is.na(outcome)) %>%
  filter(stringr::str_starts(outcome, "retain")|stringr::str_starts(outcome, "remove")) %>%
  mutate(
    outcome = case_when(
      outcome == "retain voucher" ~ "1. retain",
      outcome == "retain, synonym" ~ "2. retain a synonym",
      outcome == "retain, misapplied" ~ "2. retain a synonym",
      outcome == "remove, wrong coordinates" ~ "4. geographic errors",
      outcome == "remove, mis-identification" ~ "5. identification errors",
      outcome == "remove, duplicate synonym" ~ "6. taxonomic and nomenclature errors",
      outcome == "remove, double listing" ~ "6. taxonomic and nomenclature errors",
      outcome == "remove, contrived synonym" ~ "6. taxonomic and nomenclature errors",
      outcome == "remove, taxonomic mismatch (weird)" ~ "6. taxonomic and nomenclature errors",
      outcome == "remove, listing based on database error" ~ "8. databasing discrepancies",
      outcome == "remove, horticultural" ~ "8. databasing discrepancies"
      )
  ) %>%
  group_by(outcome) %>%
  mutate(outcome_counts = n()) %>%
  ungroup() %>%
  distinct()

voucher_outcomes_collapsed <- voucher_outcomes_collapsed %>%
  mutate(percent = 100*outcome_counts / sum(voucher_outcomes_collapsed$outcome_counts)) %>%
  arrange(outcome)

start_fit[2] %>% as.data.frame() %>% rownames_to_column() %>% filter(str_detect(rowname, "voucher")) %>% select(original.values) %>% sum()
voucher_outcomes_collapsed %>% select(outcome_counts) %>% sum()

# retain vs remove pie chart
ggplot(voucher_outcomes_collapsed, aes(x="", y=outcome_counts, fill=outcome))+
  geom_bar(width = 1, stat = "identity") +
  coord_polar("y", start=0) +
  theme_minimal() +
  theme(axis.text.x=element_blank())  
```

### - voucher summarise add-on outcomes

```{r}
add_ons_vouchers <- Royal_data %>%
  select(outcome = voucher_outcome) %>%
  filter(!is.na(outcome)) %>%
  filter(stringr::str_starts(outcome, "add")) %>%
  mutate(
    outcome = case_when(
      outcome == "add, voucher found during check" ~ "add, voucher found checking other lists"
    )) %>%
  group_by(outcome) %>%
  mutate(outcome_counts = n()) %>%
  ungroup() %>%
  distinct()

rest_of_circle_vouchers <- sum(voucher_outcomes$outcome_counts) - sum(add_ons_vouchers$outcome_counts)

total_retained_vouchers <- 
  tibble(
    outcome = "rest", 
    outcome_counts = rest_of_circle_vouchers)

add_ons_vouchers <- add_ons_vouchers %>%
  bind_rows(total_retained_vouchers)

# create add-on wedge via pie chart
ggplot(add_ons_vouchers, aes(x="", y=outcome_counts, fill=outcome))+
  geom_bar(width = 1, stat = "identity") +
  coord_polar("y", start=0) +
  theme_minimal() +
  theme(axis.text.x=element_blank())  
```

### - parks list outcomes

```{r}
parklist_outcomes <- Royal_data %>%
  select(outcome = parks_outcome) %>%
  filter(stringr::str_starts(outcome, "retain")|stringr::str_starts(outcome, "remove")) %>%
  # mutate(outcome = case_when(
  #   outcome == "retain on list" ~ "1. retain",
  #   outcome == "retain, synonym" ~ "2. retain a synonym",
  #   outcome == "retain, misapplied" ~ "3. retain, misapplied",
  #   outcome == "remove, False Report" ~ "4. remove, no reliable evidence",
  #   outcome == "remove, duplicate synonym" ~ "5. remove, duplicate synonym",
  #   outcome == "remove, wrong per park list" ~ "8. remove, wrong per park list"
  #   outcome == "remove, double listing" ~ "6. remove, double listing",
  #   outcome == "remove, contrived synonym" ~ "7. remove, contrived synonym",
  #   outcome == "remove, listing based on database error" ~ "8. databasing discrepancies"
  #         )
  #       ) %>%
  group_by(outcome) %>%
  mutate(outcome_counts = n()) %>%
  ungroup() %>%
  distinct()

parklist_outcomes <- parklist_outcomes %>%
  mutate(percent = (100*outcome_counts) / sum(parklist_outcomes$outcome_counts)) %>%
  distinct() %>%
  arrange(outcome)

# retain vs remove pie chart
ggplot(parklist_outcomes, aes(x="", y=outcome_counts, fill=outcome))+
  geom_bar(width = 1, stat = "identity") +
  coord_polar("y", start=0) + scale_fill_brewer(palette="Blues")+
  theme_minimal() +
  theme(axis.text.x=element_blank())  
```

### - parks list outcomes collapsed

```{r}
parklist_outcomes_collapsed <- Royal_data %>%
  select(outcome = parks_outcome) %>%
  filter(stringr::str_starts(outcome, "retain")|stringr::str_starts(outcome, "remove")) %>%
  mutate(outcome = case_when(
    outcome == "retain on list" ~ "1. retain",
    outcome == "retain, synonym" ~ "2. retain a synonym",
    outcome == "retain, misapplied" ~ "2. retain a synonym",
    outcome == "remove, False Report" ~ "4. geographic errors",
    outcome == "remove, duplicate synonym" ~ "6. taxonomic and nomenclature errors",
    outcome == "remove, double listing" ~ "6. taxonomic and nomenclature errors",
    outcome == "remove, contrived synonym" ~ "6. taxonomic and nomenclature errors",
    outcome == "remove, wrong per park list" ~ "8. databasing discrepancies",
    outcome == "remove, listing based on database error" ~ "8. databasing discrepancies",
    outcome == "remove, based on erroneous voucher" ~ "8. databasing discrepancies",
    outcome == "remove, listing based on database error" ~ "8. databasing discrepancies"
          )
        ) %>%
  group_by(outcome) %>%
  mutate(outcome_counts = n()) %>%
  ungroup() %>%
  distinct()

parklist_outcomes_collapsed <- parklist_outcomes_collapsed %>%
  mutate(percent = (100*outcome_counts) / sum(parklist_outcomes_collapsed$outcome_counts)) %>%
  distinct() %>%
  arrange(outcome)

start_fit[2] %>% as.data.frame() %>% rownames_to_column() %>% filter(str_detect(rowname, "park")) %>% select(original.values) %>% sum()
parklist_outcomes_collapsed %>% select(outcome_counts) %>% sum()
end_fit[2] %>% as.data.frame() %>% rownames_to_column() %>% filter(str_detect(rowname, "park")) %>% select(original.values) %>% sum()

# retain vs remove pie chart
ggplot(parklist_outcomes_collapsed, aes(x="", y=outcome_counts, fill=outcome))+
  geom_bar(width = 1, stat = "identity") +
  coord_polar("y", start=0) + scale_fill_brewer(palette="Blues")+
  theme_minimal() +
  theme(axis.text.x=element_blank())  
```

### - iNaturalist outcomes

```{r}
iNat_outcomes <- Royal_data %>%
  select(outcome = iNat_outcome) %>%
  filter(stringr::str_starts(outcome, "retain")|stringr::str_starts(outcome, "remove")) %>% 
  mutate(outcome = case_when(
    outcome == "retain observation" ~ "1. retain",
    outcome == "retain, but restricted license" ~ "2. retain, restricted",
    outcome == "remove, 01. wrong ID" ~ "3. wrong ID",
    outcome == "remove, 02. wrong coordinates" ~ "4. wrong coordinates",
    outcome == "remove, 03. horticultural" ~ "5. horticultural record",
    outcome == "remove, 05. duplicate synonym" ~ "6. duplicate synonym"
    )
  ) %>%
  group_by(outcome) %>%
  mutate(outcome_counts = n()) %>%
  ungroup() %>%
  distinct()

iNat_outcomes <- iNat_outcomes %>% 
  mutate(percent = 100*outcome_counts / sum(iNat_outcomes$outcome_counts)) %>%
  arrange(outcome)

# retain vs remove pie chart
ggplot(iNat_outcomes, aes(x="", y=outcome_counts, fill=outcome))+
  geom_bar(width = 1, stat = "identity") +
  coord_polar("y", start=0) + #scale_fill_brewer(palette="Blues")+
  theme_minimal() +
  theme(axis.text.x=element_blank())  
```

### - iNaturalist outcomes collapsed

```{r}
iNat_outcomes_collapsed <- Royal_data %>%
  select(outcome = iNat_outcome) %>%
  filter(stringr::str_starts(outcome, "retain")|stringr::str_starts(outcome, "remove")) %>% 
  mutate(outcome = case_when(
    outcome == "retain observation" ~ "1. retain",
    outcome == "retain, but restricted license" ~ "2. retain, restricted",
    outcome == "remove, 01. wrong ID" ~ "5. identification errors",
    outcome == "remove, 02. wrong coordinates" ~ "4. geographic errors",
    outcome == "remove, 03. horticultural" ~ "8. databasing discrepancies",
    outcome == "remove, 05. duplicate synonym" ~ "6. taxonomic and nomenclature errors"
    )
  ) %>%
  group_by(outcome) %>%
  mutate(outcome_counts = n()) %>%
  ungroup() %>%
  distinct()

iNat_outcomes_collapsed <- iNat_outcomes_collapsed %>% 
  mutate(percent = 100*outcome_counts / sum(iNat_outcomes_collapsed$outcome_counts)) %>%
  arrange(outcome)

start_fit[2] %>% as.data.frame() %>% rownames_to_column() %>% filter(str_detect(rowname, "iNat")) %>% select(original.values) %>% sum()
iNat_outcomes_collapsed %>% select(outcome_counts) %>% sum()
end_fit[2] %>% as.data.frame() %>% rownames_to_column() %>% filter(str_detect(rowname, "iNat")) %>% select(original.values) %>% sum()

# retain vs remove pie chart
ggplot(iNat_outcomes_collapsed, aes(x="", y=outcome_counts, fill=outcome))+
  geom_bar(width = 1, stat = "identity") +
  coord_polar("y", start=0) + #scale_fill_brewer(palette="Blues")+
  theme_minimal() +
  theme(axis.text.x=element_blank())  
```

### - iNat summarise add-on outcomes

```{r}
add_ons_iNat <- Royal_data %>%
  select(outcome = iNat_outcome) %>%
  filter(!is.na(outcome)) %>%
  filter(stringr::str_starts(outcome, "add")|stringr::str_starts(outcome, "needsID")) %>%
  mutate(
    outcome = case_when(
    outcome == "add, auto-obscured coordinates" ~ "1. auto-obscured coordinates",
    outcome == "add, manually obscured coordinates" ~ "2. manually obscured coordinates",
    outcome == "needsID_only_correct" ~ "3. needsID correct",
    outcome == "needsID-likely correct" ~ "4. needsID likely correct",
    )) %>%
  group_by(outcome) %>%
  mutate(outcome_counts = n()) %>%
  ungroup() %>%
  distinct()

rest_of_circle_iNat <- sum(iNat_outcomes$outcome_counts) - sum(add_ons_iNat$outcome_counts)

total_retained_iNat <- 
  tibble(
    outcome = "rest", 
    outcome_counts = rest_of_circle_iNat)

add_ons_iNat <- add_ons_iNat %>%
  bind_rows(total_retained_iNat)

# create add-on wedge via pie chart
ggplot(add_ons_iNat, aes(x="", y=outcome_counts, fill=outcome))+
  geom_bar(width = 1, stat = "identity") +
  coord_polar("y", start=0) +
  theme_minimal() +
  theme(axis.text.x=element_blank())   
```

## 9. Extra statistics

### - lists of unique species by resource

```{r}
iNat_only <- Royal_data %>% 
  filter(iNat_RG_END == 1 & is.na(voucher_END) & is.na(in_park_END)) %>%
  select(accepted_name, family, establishment_means, broader) %>%
  distinct() %>%
  mutate(group = "iNaturalist only")

voucher_only <- Royal_data %>% 
  filter(is.na(iNat_RG_END) & voucher_END == 1 & is.na(in_park_END)) %>%
  select(accepted_name, family, establishment_means, broader) %>%
  distinct() %>%
  mutate(group = "voucher only")

parklist_only <- Royal_data %>% 
  filter(is.na(iNat_RG_END) == 1 & is.na(voucher_END) & in_park_END == 1) %>%
  select(accepted_name, family, establishment_means, broader) %>%
  distinct() %>%
  mutate(group = "protected area list only")

species_list <- voucher_only %>%
  bind_rows(parklist_only, iNat_only) %>%
  write_csv("data_Royal/Royal_unique_species.csv")
```

### Master list

```{r}
Royal_masterlist <- Royal_data %>%
  filter(in_park_END == 1 | voucher_END == 1 | iNat_RG_END == 1) %>%
  select(accepted_name, family, broader, establishment_means, park_list = in_park_END, voucher_exists = voucher_END, iNat_RG_record_exists = iNat_RG_END)

Royal_masterlist %>%
  filter(voucher_exists == 1) %>%
  nrow()
# 1052

Royal_masterlist %>%
  filter(iNat_RG_record_exists == 1) %>%
  nrow()
# 704

Royal_masterlist %>%
  filter(park_list == 1) %>%
  nrow()

# 1260

Royal_masterlist %>% write_csv("data_Royal/Royal_masterlist.csv", na = "")

```
