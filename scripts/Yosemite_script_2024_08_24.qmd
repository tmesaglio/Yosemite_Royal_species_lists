---
title: "Yosemite CCH vouchers"
format: html
editor: visual
editor_options: 
  chunk_output_type: console
---

## Libraries

```{r}
library(tidyverse)
library(lubridate)
library(ggplot2)
library(data.table)

# spatial
library(sf)
library(rgdal)
library(rmapshaper)

# plotting
library(eulerr)
library(cowplot)
library(scales)
library(gridExtra)
library(grid)

source("funx.R")
```

## 1. DON'T RUN: Generate a list of all names in vouchers, to edit

archive - no need to run and indeed won't run in this folder!

```{r}
Yosemite_list_before <- read_csv("data_Yosemite/Yosemite_all_data_2024.06.09.csv")

CCH_synonyms <- read_csv("data_Yosemite/CCH_synonyms_2024.06.11.csv") %>%
  distinct(starting_name, .keep_all = TRUE) %>%
  rename(CCH_synonym = current_name)

CCH2_taxa <- read_csuv("data_Yosemite/Yosemite_CCH_records_2024.06.09.csv") %>%
  filter(phylum == "Tracheophyta") %>%
  filter(!keep_omit %in% c("x", "x-Mono")) %>%
  filter(year > 1859) %>%
  distinct(scientificName, .keep_all = TRUE) %>%
  filter(stringr::str_detect(scientificName, " ")) %>%
  select(scientificName) %>%
  left_join(CCH_synonyms %>% rename(scientificName = starting_name)) %>%
  mutate(
    CCH_synonym = ifelse(stringr::str_detect(CCH_synonym, " x ")|CCH_synonym == "NOT IN EFLORA", 
                         stringr::word(CCH_synonym, start = 1, end = 3), 
                         stringr::word(CCH_synonym, start = 1, end = 2))
    )

# All unmatched names
names_to_update <- 
  CCH2_taxa %>%
    filter(!CCH_synonym %in% Yosemite_list_before$scientific_name)

new_names <- 
  TNRS::TNRS(taxonomic_name = names_to_update$scientificName, sources = "wcvp")

updated_names <-
  new_names %>%
  filter(Name_matched_rank != "genus" & !is.na(Name_matched_rank) & !(Name_matched_rank == "")) %>%
  distinct(Name_submitted, Accepted_species, Name_matched_accepted_family) %>%
  rename(TNRS_synonym = Accepted_species, scientificName = Name_submitted, family_TNRS = Name_matched_accepted_family)

voucher_counts <-
  voucher_list %>%
  mutate(
    eventDate = ifelse(is.na(eventDate), row_number(), eventDate),
    year = ifelse(is.na(year), paste(10000+row_number()), year)
  ) %>%
  filter(keep_omit == "keep") %>%
  filter(!is.na(starting_name)) %>%
  distinct(starting_name, eventDate, recordedBy_simple, year) %>%
  arrange(starting_name, year, eventDate) %>%
  group_by(starting_name) %>%  
  summarise(
    voucher_obs = n()
  ) %>%
  distinct() %>%
  ungroup()

voucher_counts_coord <-
  voucher_list %>%
  mutate(
    eventDate = ifelse(is.na(eventDate), row_number(), eventDate),
    year = ifelse(is.na(year), paste(10000+row_number()), year)
  ) %>%
  filter(keep_omit == "keep") %>%
  filter(!is.na(starting_name)) %>%
  filter(!is.na(decimalLatitude) & !is.na(decimalLongitude)) %>%
  distinct(starting_name, eventDate, recordedBy_simple, year) %>%
  arrange(starting_name, year, eventDate) %>%
  group_by(starting_name) %>%  
  summarise(
    voucher_obs_coord = n()
  ) %>%
  distinct() %>%
  ungroup()

voucher_first_last_year <-
  voucher_list %>%
  mutate(eventDate = ifelse(is.na(eventDate), row_number(), eventDate),
         year = ifelse(is.na(year), paste(10000+row_number()), year)) %>%
  filter(keep_omit == "keep") %>%
  filter(year <= 2024, year > 1800) %>%
  filter(!is.na(starting_name)) %>%
  distinct(starting_name, eventDate, recordedBy_simple, year) %>%
  arrange(starting_name, year, eventDate) %>%
  group_by(starting_name) %>%  
  summarise(
    year_first = min(year),
    first_observer = first(recordedBy_simple),
    year_last = max(year)
  ) %>%
  distinct() %>%
  ungroup()

CCH2_taxa %>%
  left_join(updated_names) %>%
  mutate(
    current_name = ifelse(is.na(CCH_synonym)|CCH_synonym == "NOT IN EFLORA", TNRS_synonym, CCH_synonym),
    name_source = ifelse(is.na(CCH_synonym)|CCH_synonym == "NOT IN EFLORA", "TNRS_synonym", "CCH_synonym"),
    in_Yosemite_list = ifelse(current_name %in% Yosemite_list_before$scientific_name, TRUE, FALSE),
    family_TNRS = ifelse(is.na(family_TNRS), Yosemite_list_before$family[match(current_name, Yosemite_list_before$scientific_name)], family_TNRS)
    ) %>%
  left_join(Yosemite_list_before %>% select(current_name = scientific_name, broader)) %>%
  rename(starting_name = scientificName) %>%
  select(-TNRS_synonym, -CCH_synonym) %>%
  left_join(voucher_counts) %>%
  left_join(voucher_counts_coord) %>%
  left_join(voucher_first_last_year) %>%
  write_csv("Yosemite_synonyms2.csv")
```

## 2. Update all voucher names

### Read in CCH data

```{r}
Yosemite_list <- read_csv("data_Yosemite/Yosemite_all_data_2024.06.13.csv") %>%
  select(-voucher_obs, -voucher_obs_coord, -year_first, -year_last, -first_observer)

Yosemite_synonym_lookup <- read_csv("data_Yosemite/Yosemite_synonyms_lookup_2024.06.11.csv") %>%
  select(scientificName = starting_name, current_name, name_source)

CCH2_data <- read_csv("data_Yosemite/Yosemite_CCH_records_2024.06.14.csv") %>%
  filter(phylum == "Tracheophyta") %>%                  # retain only vascular plants
  filter(keep_omit == c("keep")) %>%                            # retain only valid vouchers
  filter(year > 1859) %>%                               # remove garbage years
  filter(recordedBy != "Gill, Raymond J.") %>%                  # remove collection with photographic observations only
  filter(stringr::str_detect(scientificName, " ")) %>%  # remove genera
  left_join(Yosemite_synonym_lookup) %>%
  select(current_name, scientificName, keep_omit, institutionCode, recordedBy_simple, eventDate, year, locality, institutionCode, 
         recordNumber, decimalLatitude, decimalLongitude, recordedBy, county) %>%
  filter(!is.na(current_name))
```

### DON'T RUN: Read in Yosemite shapefile,

No longer need to run each time

```{r}
yos <- st_read("data_Yosemite/Yosemite.kml")
yos_sf <- st_transform(yos, crs = 4326)
yos_simp <- st_make_valid(yos_sf) %>% st_polygonize
```

### DON'T RUN: Find GBIF samples not in CCH, update names

No longer need to run each time

```{r}
yos <- read_in_and_filter("data_Yosemite/GBIF_data_0005020-240202131308920.csv", yos_simp)

institutions_in_CCH <- CCH2_data %>% distinct(institutionCode)

yos_gbif <-
  yos %>%
    filter(
      basisOfRecord == "PRESERVED_SPECIMEN",
      species != ""
      ) %>%
  filter(!institutionCode %in% institutions_in_CCH$institutionCode) %>%
  select(scientific_name = species, institutionCode, eventDate, year, locality,
         recordNumber, decimalLatitude, decimalLongitude, recordedBy) %>%
  left_join(Yosemite_synonym_lookup %>% select(current_name, scientific_name = scientificName)) %>%
  write_csv("data_Yosemite/GBIF_only.csv")
```

### Merge in GBIF samples

```{r}
gbif_to_include <- read_csv("data_Yosemite/Yosemite_GBIF_records_2024.06.14.csv") %>%
  filter(keep_omit == "keep")

voucher_data <- CCH2_data %>%
  bind_rows(gbif_to_include %>% rename(scientificName = scientific_name))
```

## 3. Create final summaries for years, voucher counts

```{r}
voucher_counts_raw <-
  voucher_data %>%
    mutate(
      eventDate = ifelse(is.na(eventDate), row_number(), eventDate),
      year = ifelse(is.na(year), paste(10000+row_number()), year)
      ) %>%
    distinct(current_name, eventDate, recordedBy_simple, year) %>%
    arrange(current_name, year, eventDate)


voucher_counts <-
  voucher_data %>%
    mutate(
      eventDate = ifelse(is.na(eventDate), row_number(), eventDate),
      year = ifelse(is.na(year), paste(10000+row_number()), year)
      ) %>%
    distinct(current_name, eventDate, recordedBy_simple, year) %>%
    arrange(current_name, year, eventDate) %>%
    group_by(current_name) %>%  
    summarise(
      voucher_obs = n()
      ) %>%
    distinct() %>%
    ungroup()

voucher_counts_coord <-
  voucher_data %>%
  mutate(
    eventDate = ifelse(is.na(eventDate), row_number(), eventDate),
    year = ifelse(is.na(year), paste(10000+row_number()), year)
  ) %>%
  filter(!is.na(decimalLatitude) & !is.na(decimalLongitude)) %>%
  distinct(current_name, eventDate, recordedBy_simple, year) %>%
  arrange(current_name, year, eventDate) %>%
  group_by(current_name) %>%  
  summarise(
    voucher_obs_coord = n()
  ) %>%
  distinct() %>%
  ungroup()

voucher_first_last_year <-
  voucher_data %>%
    mutate(eventDate = ifelse(is.na(eventDate), row_number(), eventDate),
           year = ifelse(is.na(year), paste(10000+row_number()), year)) %>%
    filter(year <= 2024, year > 1800) %>%
    distinct(current_name, eventDate, recordedBy_simple, year) %>%
    arrange(current_name, year, eventDate) %>%
    group_by(current_name) %>%  
    summarise(
      year_first = min(year),
      first_observer = first(recordedBy_simple),
      year_last = max(year)
    ) %>%
    distinct() %>%
    ungroup()

voucher_data %>%
  mutate(eventDate = ifelse(is.na(eventDate), row_number(), eventDate),
           year = ifelse(is.na(year), paste(10000+row_number()), year)) %>%
  filter(year <= 2024, year > 1800) %>%
  distinct(current_name, eventDate, recordedBy_simple, year) %>%
  arrange(current_name, year, eventDate)  %>%
  group_by(recordedBy_simple) %>% 
  mutate(vouchers_per_collector = n()) %>% 
  distinct(recordedBy_simple, vouchers_per_collector) %>%
  rename(first_observer = recordedBy_simple) -> counts_per_collector
```

## 4. Merge data into Yosemite file

```{r}
voucher_summary <- Yosemite_list %>%
  select(accepted_name, scientific_name, voucher_START, voucher_END, voucher_outcome) %>%
  left_join(voucher_counts %>% rename(scientific_name = current_name)) %>%
  left_join(voucher_counts_coord %>% rename(scientific_name = current_name)) %>%
  left_join(voucher_first_last_year %>% rename(scientific_name = current_name))

voucher_summary %>%
  write_csv("outputs/Yosemite_voucher_summary.csv", na = "")

voucher_summary %>%
  filter(voucher_END == 1) %>%
  group_by(first_observer) %>%
  mutate(
    observer_firsts = n(),
    year = first(year_first)
    ) %>%
  distinct(first_observer, observer_firsts, year) %>% 
  full_join(counts_per_collector) %>%
  write_csv("outputs/collector_stats.csv")
```

## 5. DON'T RUN: Checks

If there are NA's in voucher counts where there shouldn't be it is because of synonym matching between CCH and my master sheet. I'm progressively dealing with these and have finished all the ones where vouchers are retained

```{r}
# Check for duplicates in scientific name

Yosemite_list %>%
  select(scientific_name, accepted_name, family, broader, iNat_outcome, parks_outcome, voucher_outcome) %>%
  arrange(scientific_name) %>%
  group_by(scientific_name) %>%
   mutate(count = row_number()) %>%
  filter(count == 2) %>% View()

# manually removed these duplicates


# Check for taxa in CCH not being matched to any taxa in the Yosemite master list
synonym_complete <- read_csv("data_Yosemite/Yosemite_synonym_lookup_2024.06.07_edited.csv")

synonym_complete %>% 
  mutate(check = ifelse(!current_name %in% Yosemite_list$accepted_name, "change current", NA)) %>%
  write_csv("outputs/Yosemite_synonym_lookup_2024_temp.csv", na= "")
```

## 6. Merge in voucher summary

setup to remerge easily - but be careful not to overwrite a file you don't want to

```{r}
read_csv("data_Yosemite/Yosemite_all_data_2024.06.13.csv") %>%
  select(-voucher_obs, -voucher_obs_coord, -year_first, -first_observer, -year_last) %>%
  left_join(voucher_summary %>% select(scientific_name, voucher_obs, voucher_obs_coord, year_first, first_observer, year_last) %>% distinct()) %>%
  select(accepted_name, scientific_name, status, family, broader, synonym_matches, establishment_means, count_RG, count_needs_id, in_park_START, 
         voucher_START, iNat_RG_START, in_park_END, voucher_END, iNat_RG_END, old_voucher, recent_voucher, final_list, possibly_valid_needs_ID, 
         iNat_outcome, parks_outcome, voucher_outcome, voucher_obs, voucher_obs_coord, year_first, first_observer, year_last, everything()) %>%
  write_csv("data_Yosemite/Yosemite_all_data_2024.temp.csv", na = "")
```

### 7. DON'T RUN: Symbiota

```{r}
read_csv("data_Yosemite/Symbiota_Yosemite National Park_1718164113.csv") -> Symbiota

Symbiota2 <- Symbiota %>%
  rename(scientificName = ScientificName) %>%
  left_join(Yosemite_synonym_lookup) %>%
  select(current_name) %>%
  rename(scientific_name = current_name) %>%
  distinct() %>%
  mutate(symbiota = "in Symbiota")

read_csv("data_Yosemite/Yosemite_all_data_2024.06.13.csv") %>%
  full_join(Symbiota2) %>%
  write_csv("data_Yosemite/Yosemite_all_data_2024.06.13.csv", na = "")
```

## 7 Euler diagrams

```{r}
Yos_species_list <- read_csv("data_Yosemite/Yosemite_all_data_2024.06.13.csv")
```

### - starting data

```{r}
start <- Yos_species_list %>%
  mutate(
    voucher_start = ifelse(voucher_START == 1, TRUE, NA),
    voucher_start = ifelse(is.na(voucher_start), FALSE, voucher_start),
    parklist_start = ifelse(in_park_START == 1, TRUE, NA),
    parklist_start = ifelse(is.na(parklist_start), FALSE, parklist_start),
    iNat_RG_start = ifelse(iNat_RG_START== 1 | iNat_RG_START == "iNat-not-gbif", TRUE, NA),
    iNat_RG_start = ifelse(is.na(iNat_RG_start), FALSE, iNat_RG_start)
  )

data_for_start <- start %>% select(vouchers = voucher_start, parklist = parklist_start, iNat_RG = iNat_RG_start)

start_fit <- euler(data_for_start)
plot(start_fit, quantities = FALSE, labels = FALSE)
plot(start_fit, quantities = TRUE, labels = FALSE)

start_fit

total_count_start <- start_fit$original.values %>% sum()

voucher_start <- start_fit$original.values %>% data.frame() %>% rownames_to_column() %>% rename(counts = 2, category = 1) %>% filter(stringr::str_detect(category, "voucher"))
voucher_start_count <- sum(voucher_start$counts)
voucher_start_prop <- voucher_start_count / total_count_start

iNat_start <- start_fit$original.values %>% data.frame() %>% rownames_to_column() %>% rename(counts = 2, category = 1) %>% filter(stringr::str_detect(category, "iNat"))
iNat_start_count <- sum(iNat_start$counts)
iNat_start_prop <- iNat_start_count / total_count_start
```

### - ending data

```{r}
end <- Yos_species_list %>%
  filter(voucher_END == 1 | in_park_END == 1 | iNat_RG_END == 1) %>%
  mutate(
    voucher_end = ifelse(voucher_END == 1, TRUE, NA),
    voucher_end = ifelse(is.na(voucher_end), FALSE, voucher_end),
    parklist_end = ifelse(in_park_END == 1, TRUE, NA),
    parklist_end = ifelse(is.na(parklist_end), FALSE, parklist_end),
    iNat_RG_end = ifelse(iNat_RG_END == 1, TRUE, NA),
    iNat_RG_end = ifelse(is.na(iNat_RG_end), FALSE, iNat_RG_end)
  )

data_for_end <- end %>% select(vouchers = voucher_end, parklist = parklist_end, iNat_RG = iNat_RG_end)

end_fit <- euler(data_for_end)
plot(end_fit, quantities = FALSE, labels = FALSE)
plot(end_fit, quantities = TRUE, labels = TRUE)

total_count_end <- end_fit$original.values %>% sum()
iNat_end <- end_fit$original.values %>% data.frame() %>% rownames_to_column() %>% rename(counts = 2, category = 1) %>% filter(stringr::str_detect(category, "iNat"))
iNat_end_count <- sum(iNat_end$counts)
iNat_end_prop <- iNat_end_count / total_count_end
```

### - ending data - showy

```{r}
showy <- Yos_species_list %>%
  filter(voucher_END == 1 | in_park_END == 1 | iNat_RG_END == 1) %>%
  filter(broader != "4.monocot") %>%
  mutate(
    voucher_end = ifelse(voucher_END == 1, TRUE, NA),
    voucher_end = ifelse(is.na(voucher_end), FALSE, voucher_end),
    parklist_end = ifelse(in_park_END == 1, TRUE, NA),
    parklist_end = ifelse(is.na(parklist_end), FALSE, parklist_end),
    iNat_RG_end = ifelse(iNat_RG_END == 1, TRUE, NA),
    iNat_RG_end = ifelse(is.na(iNat_RG_end), FALSE, iNat_RG_end)
  )

data_for_showy <- showy %>% select(vouchers = voucher_end, parklist = parklist_end, iNat_RG = iNat_RG_end)

showy_fit <- euler(data_for_showy)
plot(showy_fit, quantities = FALSE, labels = FALSE)
plot(showy_fit, quantities = TRUE, labels = TRUE)

iNat_end_showy <- showy_fit$original.values %>% data.frame() %>% rownames_to_column() %>% rename(counts = 2, category = 1) %>% filter(stringr::str_detect(category, "iNat"))
total_count_end_showy <- showy_fit$original.values %>% sum()
iNat_end_showy_count <- sum(iNat_end_showy$counts)
iNat_end_showy_prop <- iNat_end_showy_count / total_count_end_showy
```

### - ending data - graminoids

```{r}
graminoid <- Yos_species_list %>%
  filter(voucher_END == 1 | in_park_END == 1 | iNat_RG_END == 1) %>%
  filter(broader == "4.monocot") %>%
  mutate(
    voucher_end = ifelse(voucher_END == 1, TRUE, NA),
    voucher_end = ifelse(is.na(voucher_end), FALSE, voucher_end),
    parklist_end = ifelse(in_park_END == 1, TRUE, NA),
    parklist_end = ifelse(is.na(parklist_end), FALSE, parklist_end),
    iNat_RG_end = ifelse(iNat_RG_END == 1, TRUE, NA),
    iNat_RG_end = ifelse(is.na(iNat_RG_end), FALSE, iNat_RG_end)
  )

data_for_graminoid <- graminoid %>% select(vouchers = voucher_end, parklist = parklist_end, iNat_RG = iNat_RG_end)

graminoid_fit <- euler(data_for_graminoid)
plot(graminoid_fit, quantities = FALSE, labels = FALSE)
plot(graminoid_fit, quantities = TRUE, labels = TRUE)

iNat_end_graminoid <- graminoid_fit$original.values %>% data.frame() %>% rownames_to_column() %>% rename(counts = 2, category = 1) %>% filter(stringr::str_detect(category, "iNat"))
total_count_end_graminoid <- graminoid_fit$original.values %>% sum()
iNat_end_graminoid_count <- sum(iNat_end_graminoid$counts)
iNat_end_graminoid_prop <- iNat_end_graminoid_count / total_count_end_graminoid
```

### - ending data - natives

```{r}
native <- Yos_species_list %>%
  filter(voucher_END == 1 | in_park_END == 1 | iNat_RG_END == 1) %>%
  filter(establishment_means == "native") %>%
  mutate(
    voucher_end = ifelse(voucher_END == 1, TRUE, NA),
    voucher_end = ifelse(is.na(voucher_end), FALSE, voucher_end),
    parklist_end = ifelse(in_park_END == 1, TRUE, NA),
    parklist_end = ifelse(is.na(parklist_end), FALSE, parklist_end),
    iNat_RG_end = ifelse(iNat_RG_END == 1, TRUE, NA),
    iNat_RG_end = ifelse(is.na(iNat_RG_end), FALSE, iNat_RG_end)
  )

data_for_native <- native %>% select(vouchers = voucher_end, parklist = parklist_end, iNat_RG = iNat_RG_end)

native_fit <- euler(data_for_native)
plot(native_fit, quantities = FALSE, labels = FALSE)
plot(native_fit, quantities = TRUE, labels = TRUE)
```

### - ending data - invasives

```{r}
invasive <- Yos_species_list %>%
  filter(voucher_END == 1 | in_park_END == 1 | iNat_RG_END == 1) %>%
  filter(establishment_means == "invasive") %>%
  mutate(
    voucher_end = ifelse(voucher_END == 1, TRUE, NA),
    voucher_end = ifelse(is.na(voucher_end), FALSE, voucher_end),
    parklist_end = ifelse(in_park_END == 1, TRUE, NA),
    parklist_end = ifelse(is.na(parklist_end), FALSE, parklist_end),
    iNat_RG_end = ifelse(iNat_RG_END == 1, TRUE, NA),
    iNat_RG_end = ifelse(is.na(iNat_RG_end), FALSE, iNat_RG_end)
  )

data_for_invasive <- invasive %>% select(vouchers = voucher_end, parklist = parklist_end, iNat_RG = iNat_RG_end)

invasive_fit <- euler(data_for_invasive)
plot(invasive_fit, quantities = FALSE, labels = FALSE)
plot(invasive_fit, quantities = TRUE, labels = TRUE)
```

### - ending data - old vouchers only

```{r}
old_vouchers <- Yos_species_list %>%
  filter(voucher_END == 1 | in_park_END == 1 | iNat_RG_END == 1) %>%
  filter(old_voucher == 1 & is.na(recent_voucher)) %>%
  mutate(
    voucher_end = ifelse(voucher_END == 1, TRUE, NA),
    voucher_end = ifelse(is.na(voucher_end), FALSE, voucher_end),
    parklist_end = ifelse(in_park_END == 1, TRUE, NA),
    parklist_end = ifelse(is.na(parklist_end), FALSE, parklist_end),
    iNat_RG_end = ifelse(iNat_RG_END == 1 , TRUE, NA),
    iNat_RG_end = ifelse(is.na(iNat_RG_end), FALSE, iNat_RG_end)
  )

data_for_end_old <- old_vouchers %>% select(vouchers = voucher_end, parklist = parklist_end, iNat_RG = iNat_RG_end)

end_old_fit <- euler(data_for_end_old)
plot(end_old_fit, quantities = TRUE, labels = FALSE)
plot(end_old_fit, quantities = FALSE, labels = FALSE)


total_count_end_old <- end_old_fit$original.values %>% sum()
iNat_end_old <- end_old_fit$original.values %>% data.frame() %>% rownames_to_column() %>% rename(counts = 2, category = 1) %>% filter(stringr::str_detect(category, "iNat"))
iNat_end_old_count <- sum(iNat_end_old$counts)
iNat_end_old_prop <- iNat_end_old_count / total_count_end_old
```

### - ending data - old & recent vouchers

```{r}
old_and_recent_vouchers <- Yos_species_list %>%
  filter(voucher_END == 1 | in_park_END == 1 | iNat_RG_END == 1) %>%
  filter(recent_voucher == 1 & old_voucher == 1) %>%
  mutate(
    voucher_end = ifelse(voucher_END == 1, TRUE, NA),
    voucher_end = ifelse(is.na(voucher_end), FALSE, voucher_end),
    parklist_end = ifelse(in_park_END == 1, TRUE, NA),
    parklist_end = ifelse(is.na(parklist_end), FALSE, parklist_end),
    iNat_RG_end = ifelse(iNat_RG_END == 1 , TRUE, NA),
    iNat_RG_end = ifelse(is.na(iNat_RG_end), FALSE, iNat_RG_end)
  )

data_for_end_old_recent <- old_and_recent_vouchers %>% select(vouchers = voucher_end, parklist = parklist_end, iNat_RG = iNat_RG_end)

end_old_recent_fit <- euler(data_for_end_old_recent)
plot(end_old_recent_fit, quantities = TRUE, labels = FALSE)
plot(end_old_recent_fit, quantities = FALSE, labels = FALSE)

total_count_end_old_recent <- end_old_recent_fit$original.values %>% sum()
iNat_end_old_recent <- end_old_recent_fit$original.values %>% data.frame() %>% rownames_to_column() %>% rename(counts = 2, category = 1) %>% filter(stringr::str_detect(category, "iNat"))
iNat_end_old_recent_count <- sum(iNat_end_old_recent$counts)
iNat_end_old_recent_prop <- iNat_end_old_recent_count / total_count_end_old_recent
```

### - ending data - recent vouchers only

```{r}
recent_vouchers <- Yos_species_list %>%
  filter(voucher_END == 1 | in_park_END == 1 | iNat_RG_END == 1) %>%
  filter(recent_voucher == 1 & is.na(old_voucher)) %>%
  mutate(
    voucher_end = ifelse(voucher_END == 1, TRUE, NA),
    voucher_end = ifelse(is.na(voucher_end), FALSE, voucher_end),
    parklist_end = ifelse(in_park_END == 1, TRUE, NA),
    parklist_end = ifelse(is.na(parklist_end), FALSE, parklist_end),
    iNat_RG_end = ifelse(iNat_RG_END == 1 , TRUE, NA),
    iNat_RG_end = ifelse(is.na(iNat_RG_end), FALSE, iNat_RG_end)
  )

data_for_end_recent <- recent_vouchers %>% select(vouchers = voucher_end, parklist = parklist_end, iNat_RG = iNat_RG_end)

end_recent_fit <- euler(data_for_end_recent)
plot(end_recent_fit, quantities = FALSE, labels = FALSE)
plot(end_recent_fit, quantities = TRUE, labels = FALSE)

total_count_end_recent <- end_recent_fit$original.values %>% sum()
iNat_end_recent <- end_recent_fit$original.values %>% data.frame() %>% rownames_to_column() %>% rename(counts = 2, category = 1) %>% filter(stringr::str_detect(category, "iNat"))
iNat_end_recent_count <- sum(iNat_end_recent$counts)
iNat_end_recent_prop <- iNat_end_recent_count / total_count_end_recent
```

## 8. Pie charts

### - voucher outcomes

```{r}
# summarise voucher outcomes
voucher_outcomes <- Yos_species_list %>%
  select(outcome = voucher_outcome) %>%
  filter(!is.na(outcome)) %>%
  filter(stringr::str_starts(outcome, "retain")|stringr::str_starts(outcome, "remove")) %>%
  mutate(
    outcome = case_when(
      outcome == "retain voucher" ~ "1. retain",
      outcome == "retain voucher, synonym" ~ "2. retain a synonym",
      outcome == "retain, in park, but no vouchers found during check" ~ "1. retain, but no vouchers found",
      outcome == "remove, wrong coordinates" ~ "3. wrong coordinates",
      outcome == "remove, mis-identification" ~ "4. wrong ID",
      outcome == "remove, misapplied name" ~ "5. misapplied name",
      outcome == "remove, duplicate synonym" ~ "6. duplicate name",
      outcome == "remove, taxonomic mismatch" ~ "7. untraced taxonomic mismatch",
      outcome == "remove, horticultural species" ~ "8. horticultural record",
      outcome == "remove, no voucher located during check & not in park" ~ "9. no vouchers",
      outcome == "remove, no voucher located during check but exists in park" ~ "9. no vouchers"
      )
  ) %>%
  group_by(outcome) %>%
  mutate(outcome_counts = n()) %>%
  ungroup() %>%
  distinct()

voucher_outcomes <- voucher_outcomes %>%
  mutate(percent = 100*outcome_counts / sum(voucher_outcomes$outcome_counts)) %>%
  arrange(outcome)

# retain vs remove pie chart
ggplot(voucher_outcomes, aes(x="", y=outcome_counts, fill=outcome))+
  geom_bar(width = 1, stat = "identity") +
  coord_polar("y", start=0) +
  theme_minimal() +
  theme(axis.text.x=element_blank())  

# summarise add-on outcomes
add_ons_vouchers <- Yos_species_list %>%
  select(outcome = voucher_outcome) %>%
  filter(!is.na(outcome)) %>%
  filter(stringr::str_starts(outcome, "add")) %>%
  mutate(
    outcome = case_when(
      outcome == "add, voucher found during check" ~ "add, voucher found checking other lists",
      outcome == "add, voucher found in CCH download" ~ "add, voucher found manual download"
    )) %>%
  group_by(outcome) %>%
  mutate(outcome_counts = n()) %>%
  ungroup() %>%
  distinct()

rest_of_circle_vouchers <- sum(voucher_outcomes$outcome_counts) - sum(add_ons_vouchers$outcome_counts)

total_retained_vouchers <- 
  tibble(
    outcome = "rest", 
    outcome_counts = rest_of_circle_vouchers)

add_ons_vouchers <- add_ons_vouchers %>%
  bind_rows(total_retained_vouchers)

# create add-on wedge via pie chart
ggplot(add_ons_vouchers, aes(x="", y=outcome_counts, fill=outcome))+
  geom_bar(width = 1, stat = "identity") +
  coord_polar("y", start=0) +
  theme_minimal() +
  theme(axis.text.x=element_blank())  
```

### - parks list outcomes

```{r}
# summarise parks list outcomes
parklist_outcomes <- Yos_species_list %>%
  select(outcome = parks_outcome) %>%
  filter(stringr::str_starts(outcome, "retain")|stringr::str_starts(outcome, "remove")) %>%
  mutate(outcome = case_when(
    outcome == "retain on list" ~ "1. retain",
    outcome == "retain, synonym" ~ "2. retain a synonym",
    outcome == "retain, nearby voucher" ~ "3. retain, nearby voucher",
    outcome == "remove, range far from park" ~ "4. remove, range far from park",
    outcome == "remove, range far from park; based on wrong voucher" ~ "4. remove, range far from park",
    outcome == "remove, misapplied name" ~ "5. remove, misapplied name",
    outcome == "remove, duplicate synonym" ~ "6. remove, duplicate synonym",
    outcome == "remove, False Report" ~ "7. remove, False Report"
          )
        ) %>%
  group_by(outcome) %>%
  mutate(outcome_counts = n()) %>%
  ungroup()

parklist_outcomes <- parklist_outcomes %>%
  mutate(percent = (100*outcome_counts) / sum(parklist_outcomes$outcome_counts)) %>%
  distinct() %>%
  arrange(outcome)

# retain vs remove pie chart
ggplot(parklist_outcomes, aes(x="", y=outcome_counts, fill=outcome))+
  geom_bar(width = 1, stat = "identity") +
  coord_polar("y", start=0) + scale_fill_brewer(palette="Blues")+
  theme_minimal() +
  theme(axis.text.x=element_blank())  

# summarise add-on outcomes
add_ons_parks <- Yos_species_list %>%
  select(outcome = parks_outcome) %>%
  filter(!is.na(outcome)) %>%
  filter(stringr::str_starts(outcome, "add")) %>% nrow()
```

### - iNaturalist outcomes

```{r}
# summarise iNaturalist outcomes
iNat_outcomes <- Yos_species_list %>%
  select(outcome = iNat_outcome) %>%
  filter(stringr::str_starts(outcome, "retain")|stringr::str_starts(outcome, "remove")) %>%
  mutate(outcome = case_when(
    outcome == "retain observation" ~ "1. retain",
    outcome == "retain, new native record" ~ "1. retain",
    outcome == "retain, new weed record" ~ "1. retain",
    outcome == "retain, restricted license" ~ "2. retain restricted",
    outcome == "retain, restricted & new weed record" ~ "2. retain restricted",
    outcome == "retain, restricted & new native record" ~ "2. retain restricted",
    outcome == "retain, auto-obscured coordinates" ~ "3. retain auto-obscured",
    outcome == "retain, manually obscured coordinates" ~ "4. retain manually obscured",
    outcome == "remove, 01. wrong ID" ~ "5. wrong ID",
    outcome == "remove, 04. misapplied name" ~ "5. wrong ID",
    outcome == "remove, 02. wrong coordinates" ~ "6. wrong coordinates",
    outcome == "remove, 03. horticultural" ~ "7. horticultural record",
    outcome == "remove, 05. duplicate synonym" ~ "8. duplicate synonym",
    )
  ) %>%
  group_by(outcome) %>%
  mutate(outcome_counts = n()) %>%
  ungroup() %>%
  distinct()

iNat_outcomes <- iNat_outcomes %>% 
  mutate(percent = 100*outcome_counts / sum(iNat_outcomes$outcome_counts)) %>%
  arrange(outcome)

# retain vs remove pie chart
ggplot(iNat_outcomes, aes(x="", y=outcome_counts, fill=outcome))+
  geom_bar(width = 1, stat = "identity") +
  coord_polar("y", start=0) + #scale_fill_brewer(palette="Blues")+
  theme_minimal() +
  theme(axis.text.x=element_blank())  

# summarise add-on outcomes
add_ons_iNat <- Yos_species_list %>%
  select(outcome = iNat_outcome) %>%
  filter(!is.na(outcome)) %>%
  filter(stringr::str_starts(outcome, "add")) %>%
  mutate(
    outcome = case_when(
    outcome == "add, auto-obscured coordinates" ~ "1. auto-obscured coordinates",
    outcome == "add, manually obscured coordinates" ~ "2. manually obscured coordinates",
    outcome == "add, needsID likely correct" ~ "3. needsID",
    )) %>%
  group_by(outcome) %>%
  mutate(outcome_counts = n()) %>%
  ungroup() %>%
  distinct()

rest_of_circle_iNat <- sum(iNat_outcomes$outcome_counts) - sum(add_ons_iNat$outcome_counts)

total_retained_iNat <- 
  tibble(
    outcome = "rest", 
    outcome_counts = rest_of_circle_iNat)

add_ons_iNat <- add_ons_iNat %>%
  bind_rows(total_retained_iNat)

# create add-on wedge via pie chart
ggplot(add_ons_iNat, aes(x="", y=outcome_counts, fill=outcome))+
  geom_bar(width = 1, stat = "identity") +
  coord_polar("y", start=0) +
  theme_minimal() +
  theme(axis.text.x=element_blank())   
```

### DON'T RUN: flowchart middle figure

File for this isn't on GutHub

```{r}
read_csv("data_Yosemite/Yos_synonyms_corrected.csv") -> synonym_corrected

synonyms <- synonym_corrected %>%
  mutate(
    voucher_start = ifelse(voucher_START == 1, TRUE, NA),
    voucher_start = ifelse(is.na(voucher_start), FALSE, voucher_start),
    parklist_start = ifelse(in_park_START == 1, TRUE, NA),
    parklist_start = ifelse(is.na(parklist_start), FALSE, parklist_start),
    iNat_RG_start = ifelse(iNat_RG_START== 1 | iNat_RG_START == "iNat-not-gbif", TRUE, NA),
    iNat_RG_start = ifelse(is.na(iNat_RG_start), FALSE, iNat_RG_start)
  )

data_for_synonyms <- synonyms %>% select(vouchers = voucher_start, parklist = parklist_start, iNat_RG = iNat_RG_start)

synonyms_fit <- euler(data_for_synonyms)
plot(start_fit, quantities = FALSE, labels = FALSE, lwd = 2)
plot(synonyms_fit, quantities = FALSE, labels = FALSE, lwd = 2)
plot(end_fit, quantities = FALSE, labels = FALSE, lwd = 2)

```

### 9. Final statistics

#### overall counts

```{r}
#final species count: 
total_species_count <- Yos_species_list %>% filter(final_list == 1) %>% nrow()

#final iNat count:

final_iNat_count <- Yos_species_list %>% filter(iNat_RG_END == 1) %>% nrow()

final_iNat_count / total_species_count

# final parks count: 

final_park_count <- Yos_species_list %>% filter(in_park_END == 1) %>% nrow()

final_park_count / total_species_count


# final voucher count: 

final_voucher_count <- Yos_species_list %>% filter(voucher_END == 1) %>% nrow()

final_voucher_count / total_species_count
```

#### voucher counts end

```{r}
Yos_species_list %>% filter(in_park_END == 1) %>% nrow() / Yos_species_list %>% filter(final_list == 1) %>% nrow()

old_only <- Yos_species_list %>% filter(final_list == 1, old_voucher == 1, is.na(recent_voucher)) %>% nrow()

old_new <- Yos_species_list %>% filter(final_list == 1, old_voucher == 1, recent_voucher == 1) %>% nrow()

new_only <- Yos_species_list %>% filter(final_list == 1, is.na(old_voucher), recent_voucher == 1) %>% nrow()

graminoid <- Yos_species_list %>% filter(broader == "4.monocot") %>% nrow()
```

#### iNat proportions

```{r}
iNat_and_old <- 
  Yos_species_list %>% 
  filter(final_list == 1, old_voucher == 1, is.na(recent_voucher)) %>% 
  filter(iNat_RG_END == 1) %>%
  nrow()

iNat_and_old / old_only

iNat_and_old_new <- 
  Yos_species_list %>% 
  filter(final_list == 1, old_voucher == 1, recent_voucher == 1) %>% 
  filter(iNat_RG_END == 1) %>%
  nrow()

iNat_and_old_new / old_new

iNat_and_new <- 
  Yos_species_list %>% 
  filter(final_list == 1, is.na(old_voucher), recent_voucher == 1) %>% 
  filter(iNat_RG_END == 1) %>%
  nrow()

iNat_and_new / new_only

iNat_graminoid <- 
  Yos_species_list %>% 
  filter(broader == "4.monocot") %>% 
  filter(iNat_RG_END == 1) %>%
  nrow()

iNat_graminoid / graminoid

```

#### park proportions

```{r}
  Yos_species_list %>% 
  filter(final_list == 1) %>%
  distinct(accepted_name, family, establishment_means) %>%
  write_csv("data_Yosemite/final_Yosemite_list.csv")

  Yos_species_list %>% 
  filter(final_list == 1) %>%
    select(accepted_name, scientific_name, status, family, broader, synonym_matches, establishment_means, count_RG, count_needs_id, in_park_START, voucher_START, iNat_RG_START, in_park_END, voucher_END, iNat_RG_END, old_voucher, recent_voucher, final_list, possibly_valid_needs_ID, iNat_outcome, parks_outcome, voucher_outcome, voucher_obs, voucher_obs_coord, year_first, first_observer, year_last, iNat_needs_ID_only_verdict, symbiota, voucher_notes = notes_about_vouchers, iNat_notes, parklist_notes = notes_for_parks_only) %>%
    write_csv("data_Yosemite/Yosemite_with_notes.csv")

park_and_old <- 
  Yos_species_list %>% 
  filter(final_list == 1, old_voucher == 1, is.na(recent_voucher)) %>% 
  filter(in_park_END == 1) %>%
  nrow()

park_and_old / old_only

park_and_old_new <- 
  Yos_species_list %>% 
  filter(final_list == 1, old_voucher == 1, recent_voucher == 1) %>% 
  filter(in_park_END == 1) %>%
  nrow()

park_and_old_new / old_new

park_and_new <- 
  Yos_species_list %>% 
  filter(final_list == 1, is.na(old_voucher), recent_voucher == 1) %>% 
  filter(in_park_END == 1) %>%
  nrow()

park_and_new / new_only

new_only - park_and_new


total_species_count - final_park_count

Yos_species_list %>%
  filter(final_list == 1) %>%
  filter(!(recent_voucher == 1 & is.na(old_voucher)))%>% 
  filter(in_park_END == 1)

1301/1390
```

# Paper 2

## Add iNat summaries - DONT RUN EACH TIME

```{r}
iNat_dates <- Yos_iNat %>%
  select(scientific_name, observed_on, user_login) %>%
  arrange(observed_on) %>%
  mutate(scientific_name = stringr::word(scientific_name, start = 1, end = 2)) %>%
  left_join(Yosemite_synonym_lookup %>% rename(scientific_name = scientificName)) %>%
  filter(current_name %in% Yos_species_paper_2$accepted_name) %>%
  select(current_name, user_login, observed_on) %>%
  group_by(current_name) %>%
  summarise_all(.funs = c(first, last)) %>%
  ungroup() %>%
  rename(first_iNat_date = observed_on_fn1, last_iNat_date = observed_on_fn2, first_iNat_observed = user_login_fn1, last_iNat_observed = user_login_fn2) %>%
  mutate(
    iNat_year_first = year(first_iNat_date),
    iNat_year_last = year(last_iNat_date)
  )

# Yos_species_list %>%
#  left_join(iNat_dates %>% rename(accepted_name = current_name)) %>%
#  write_csv("data_Yosemite/Yosemite_all_data_2024.08.28.csv", na = "")
```

## Read in data

```{r}
Yos_species_list <- read_csv("data_Yosemite/Yosemite_all_data_2024.08.28.csv")

Yos_species_paper_2 <- Yos_species_list %>%
  filter(voucher_END == "1" | iNat_RG_END == "1")

Yos_iNat <- read_csv("data_Yosemite/Yosemite_ResearchGrade.csv") %>%
  mutate(accepted_name = stringr::word(scientific_name, start = 1, end = 2)) %>%
  
Yosemite_synonym_lookup <- read_csv("data_Yosemite/Yosemite_synonyms_lookup_2024.06.11.csv") %>%
  select(scientificName = starting_name, current_name, name_source)

CCH2_data <- read_csv("data_Yosemite/Yosemite_CCH_records_2024.06.14.csv") %>%
  filter(phylum == "Tracheophyta") %>%                  # retain only vascular plants
  filter(keep_omit == c("keep")) %>%                    # retain only valid vouchers
  filter(year > 1859) %>%                               # remove garbage years
  filter(recordedBy != "Gill, Raymond J.") %>%          # remove collection with photographic observations only
  filter(stringr::str_detect(scientificName, " ")) %>%  # remove genera
  left_join(Yosemite_synonym_lookup) %>%
  select(current_name, scientificName, keep_omit, institutionCode, recordedBy_simple, eventDate, year, locality, institutionCode, 
         recordNumber, decimalLatitude, decimalLongitude, recordedBy, county) %>%
  filter(!is.na(current_name))

gbif_to_include <- read_csv("data_Yosemite/Yosemite_GBIF_records_2024.06.14.csv") %>%
  filter(keep_omit == "keep") %>% 
  rename(scientificName = scientific_name)

voucher_data <- CCH2_data %>%
  bind_rows(gbif_to_include)
```

## Figure 1. Maps of long unobserved, recent finds

```{r}
establish_colours <-  c("native" = "#6A51A3", "invasive" = "red")

Yos_old_only <- Yos_species_paper_2 %>%
  filter(is.na(recent_voucher) & is.na(iNat_RG_END))

old_voucher_locations <- CCH2_data %>%
  filter(current_name %in% Yos_old_only$accepted_name, keep_omit == "keep") %>%
  # turning off so that I retain actual final location and will manually fill in locations
  #filter(!is.na(decimalLatitude)) %>%   
  arrange(-year) %>%
  group_by(current_name) %>%
  summarise_all(.funs = first) %>%
  distinct() %>%
  ungroup() %>%
  left_join(Yos_old_only %>% select(current_name = accepted_name, establishment_means))

#old_voucher_locations %>% write_csv("data_Yosemite/Yosemite_long_unseen_last_location.csv")

old_voucher_locations <- read_csv("data_Yosemite/Yosemite_long_unseen_last_location.csv")

Yos_recent_only <- Yos_species_paper_2 %>%
  filter(is.na(old_voucher) & (iNat_RG_END == "1" | recent_voucher == "1"))

iNat_recent_additions <- Yos_iNat %>%
  select(scientific_name, observed_on, latitude, longitude) %>%
  filter(scientific_name %in% Yos_recent_only$accepted_name)
  
CCH_recent_additions <- CCH2_data %>%
  filter(current_name %in% Yos_recent_only$accepted_name, keep_omit == "keep") %>%
  # turning off so that I retain actual final location and will manually fill in locations
  #filter(!is.na(decimalLatitude), decimalLatitude > 37) %>%
  arrange(year) %>%
  group_by(current_name) %>%
  summarise_all(.funs = first) %>%
  distinct() %>%
  ungroup() %>%
  select(scientific_name = current_name, observed_on = year, latitude = decimalLatitude , longitude = decimalLongitude) %>%
  mutate(observed_on = lubridate::make_date(observed_on, 1, 1))

#CCH_recent_additions %>% write_csv("data_Yosemite/Yosemite_CCH_recent_additions.csv")

CCH_recent_additions <- read_csv("data_Yosemite/Yosemite_CCH_recent_additions.csv")

recent_additions_all <- iNat_recent_additions %>%
  bind_rows(CCH_recent_additions) %>%
  left_join(Yos_recent_only %>% select(scientific_name = accepted_name, establishment_means)) %>%
  arrange(observed_on) %>%
  group_by(scientific_name) %>%
  summarise_all(.funs = first) %>%
  distinct() %>%
  ungroup() %>%
  filter

yosemite_outline <- st_read("data_Yosemite/Yosemite.shp") %>%
  st_transform(crs = 4326) %>%
  st_make_valid()

yos_roads <- st_read("data_Yosemite/Yosemite_roads.gpx", layer = "tracks") %>%
  st_transform(crs = 4326) %>%
  st_make_valid()

yos_roads_clipped <- rmapshaper::ms_clip(target = yos_roads, clip = yosemite_outline[1])

long_unseen <-
  ggplot() + 
  geom_sf(mapping = aes(), data = yosemite_outline , stat = "sf", fill = "#C5DDC2", color = "grey50") +
  geom_sf(mapping = aes(), data = yos_roads_clipped, stat = "sf") +
  geom_point(aes(decimalLongitude, decimalLatitude, col = factor(establishment_means)), data = old_voucher_locations, position = "jitter") +
  scale_colour_manual(values = establish_colours, name = "origin") +
  theme_classic() + 
  ggtitle("a. Last location long-unseen species (Yosemite)") +
  theme(
    legend.position = "none",
    axis.title = element_blank(),
    axis.text = element_blank(),
    axis.ticks = element_blank(),
    axis.line = element_blank(),
    plot.title = element_text(hjust = 0, size = 10),
    plot.margin=unit(c(.08,.0,.0,.1),"cm")
  )

new_arrivals_tmp <-
  ggplot() + 
  geom_sf(mapping = aes(), data = yosemite_outline , stat = "sf", fill = "#C5DDC2", color = "grey50") +
  geom_sf(mapping = aes(), data = yos_roads_clipped, stat = "sf") +
  geom_point(aes(longitude, latitude, col = factor(establishment_means)), data = recent_additions_all, position = "jitter") +
  scale_colour_manual(values = establish_colours, name = "species origin") +
  theme_classic() +
  ggtitle("b. First location post-1990 new records (Yosemite)") +
  theme(
    legend.position = "bottom",
    axis.title = element_blank(),
    axis.text = element_blank(),
    axis.ticks = element_blank(),
    axis.line = element_blank(),
    plot.title = element_text(hjust = 0, size = 10),
    plot.margin=unit(c(.08,.0,.0,.0),"cm")
  )

legend_maps <- get_legend(new_arrivals_tmp) #+ theme(legend.margin = margin(2, 2, 2, 2))

new_arrivals <- new_arrivals_tmp + theme(legend.position = "none")

Yos_maps_combined <- ggdraw(plot_grid(long_unseen, new_arrivals, ncol=2, align='v', rel_widths=c(1, 1)))

blank <- grid::rectGrob(gp = gpar(fill="white", col = "white"))

Yos_maps <- grid.arrange(
  long_unseen, new_arrivals, legend_maps, blank,
  ncol = 2, 
  widths = c(1, 1),
  heights = c(1, 0.08)
)

cowplot::save_plot("outputs/Yos_maps.jpg", Yos_maps, base_width = 8, base_height = 5)
```

## Figure 2. Decline in "unobserved" over time

### - generate data summaries

```{r}

paper2_fig2 <-
  Yos_species_paper_2 %>%
  select(accepted_name, establishment_means, voucher_END, iNat_RG_END, old_voucher, recent_voucher) %>%
  distinct()

# vouchers
recent_obs_CCH <- CCH2_data %>%
  filter(keep_omit == "keep", year > 1989) %>%
  filter(current_name %in% paper2_fig2$accepted_name) %>%
  select(accepted_name = current_name, year) %>%
  mutate(dataset = "CCH") %>%
  arrange(year) %>%
  distinct(accepted_name, .keep_all = TRUE)

summary_recent_CCH <- recent_obs_CCH %>%
  group_by(year) %>%
  mutate(re_finds_per_year = n()) %>%
  distinct(re_finds_per_year) %>%
  ungroup()

#write_csv(summary_recent_CCH, "data_Yosemite/summary_recent_CCH.csv")

# iNaturalist
recent_obs_iNat <- Yos_iNat %>%
  select(scientific_name, observed_on) %>%
  mutate(year = year(observed_on)) %>%
  filter(year > 2007) %>%
  filter(scientific_name %in% Yos_species_paper_2$accepted_name) %>%
  select(accepted_name = scientific_name, year) %>%
  mutate(dataset = "iNat") %>%
  arrange(year) %>%
  distinct(accepted_name, .keep_all = TRUE)
# have confirmed there were no species with pre-2008 observations that haven't been seen since - so filtering changes when species were "ticked off" the iNat list, but not whether they are ticked off the list, at least for Yosemite

summary_recent_iNat <- recent_obs_iNat %>%
  group_by(year) %>%
  mutate(re_finds_per_year = n()) %>%
  distinct(re_finds_per_year) %>%
  ungroup() 

#write_csv(summary_recent_iNat, "data_Yosemite/summary_recent_iNat.csv")

# combined voucher & iNat

recent_obs_combined <- recent_obs_CCH %>%
  bind_rows(recent_obs_iNat) %>%
  arrange(accepted_name, year) %>%
  mutate(accepted_name = stringr::word(accepted_name, start = 1, end = 2)) %>%
  group_by(accepted_name) %>%
  summarise_all(.funs = first) %>%
  ungroup() %>%
  arrange(year)

summary_recent_combined <- recent_obs_combined %>%
  group_by(year) %>%
  mutate(re_finds_per_year = n()) %>%
  distinct(re_finds_per_year) %>%
  ungroup()

#write_csv(summary_recent_combined, "data_Yosemite/summary_recent_combined.csv")

summary_2_lines <- recent_obs_combined %>%
  mutate(counts = 1) %>%
  pivot_wider(names_from = dataset, values_from = counts) %>%
  mutate(
    iNat = if_else(is.na(iNat), 0, iNat),
    CCH = if_else(is.na(CCH), 0, CCH)
    ) %>%
  select(-accepted_name) %>%
  group_by(year) %>%
  mutate(
    CCH_finds_per_year = sum(CCH),
    iNat_finds_per_year = sum(iNat)
    ) %>%
  select(-CCH, -iNat) %>%
  distinct() %>%
  ungroup()

#write_csv(summary_2_lines, "data_Yosemite/summary_2_lines.csv")
```

### - generate plots

```{r}
summary_recent_CCH <- read_csv("data_Yosemite/summary_recent_CCH.csv")
summary_recent_iNat <- read_csv("data_Yosemite/summary_recent_iNat.csv")
summary_recent_combined <- read_csv("data_Yosemite/summary_recent_combined.csv")
summary_recent_2lines <- read_csv("data_Yosemite/summary_2_lines.csv")

combined_plot_a <- ggplot() + 
  geom_rect(aes(xmin = 1990, xmax = 2024, ymin = 0, ymax = min(summary_recent_CCH$remaining)), fill = "#608CB8", colour = NA, alpha = 0.1) + 
  geom_rect(aes(xmin = 2008, xmax = 2024, ymin = 0, ymax = min(summary_recent_iNat$remaining)), fill = "#74AC00", colour = NA, alpha = 0.1) + 
  geom_ribbon(aes(x = year, ymin = min(summary_recent_CCH$remaining), ymax = remaining), data = summary_recent_CCH, fill = "#608CB8", color = "#608CB8", alpha = 0.35) +
  geom_ribbon(aes(x = year, ymin = min(summary_recent_iNat$remaining), ymax = remaining), data = summary_recent_iNat, fill = "#74AC00", color = "#74AC00", alpha = 0.35) +
  scale_x_continuous(limits = c(1990, 2025), breaks = c(1990, 2000, 2010, 2020), expand = c(0,0)) +
  scale_y_continuous(limits = c(0, 1600), breaks = c(500, 1000, 1500), expand = c(0,0)) +
  geom_text(aes(x = 2008, y = 200, label = "?  ?  ?  unknown status  ?  ?  ?")) +
  #scale_y_log10(limits = c(1, 1800), breaks = c(1, 10, 100, 1000, 1577), expand = c(0,0)) +
  theme_classic() +
  labs(
    y = "species without records since 1990"
  )


# try https://stackoverflow.com/questions/61775003/ggplot2-create-shaded-area-with-gradient-below-curve to get colors to grade; won't let you use gradients with geom_ribbon
points <- data.frame(x = c(summary_recent_2lines$year, 2024, 1990), 
                     y = c(summary_recent_2lines$combined_remaining, 237, 237)
)

combined_plot_b <- ggplot() + 
    geom_rect(aes(xmin = 1990, xmax = 2024, ymin = 0, ymax = min(summary_recent_2lines$combined_remaining)), fill = "#64B47D", colour = NA, alpha = 0.15) +
    geom_ribbon(aes(x = year, ymin = min(summary_recent_2lines$combined_remaining), ymax = combined_remaining), data = summary_recent_2lines, fill = "#64B47D", alpha = 0.3) +
  #scale_fill_gradient(low = "#608CB8", high = "#74AC00") +
  geom_line(aes(x = year, y = combined_remaining), data = summary_recent_2lines, color = "#74AC00", size = 1) +
  geom_line(aes(x = year, y = CCH_remaining), data = summary_recent_2lines, color = "#608CB8", size = 1) +
  scale_x_continuous(limits = c(1990, 2025), breaks = c(1990, 2000, 2010, 2020), expand = c(0,0)) +
  scale_y_continuous(limits = c(0, 1600), breaks = c(500, 1000, 1500), expand = c(0,0)) +
  geom_text(aes(x = 2008, y = 100, label = "?  ?  ?  unknown status  ?  ?  ?")) +
  theme_classic() +
  labs(
    y = "species without records since 1990"
  )


decline_in_unobserved <- grid.arrange(
  combined_plot_a, combined_plot_b, combined_plot_a, combined_plot_b,
  ncol = 2
)

cowplot::save_plot("outputs/decline_in_unobserved.jpg", decline_in_unobserved, base_width = 8, base_height = 8)

```

## Figure 3/4/S. "Finds per observer" histogram

### - generate voucher summary

```{r}
counts_per_decade <- Yos_species_list %>%
  select(accepted_name, establishment_means, voucher_END, year_first, first_observer) %>%
  filter(voucher_END == "1") %>%
  arrange(year_first) %>%
  mutate(decade_plus = 
           case_when(
             year_first < 1900 ~ "1860-1900",
             year_first >= 1900 & year_first < 1930 ~ "1900 - 1930",
             year_first >= 1930 & year_first < 1990 ~ "1930 - 1990",
             year_first >= 1990  ~ "1990 - 2024"
             ),
         source = "voucher") %>%
  group_by(decade_plus, first_observer, source) %>%
  summarise(counts_per_obs = n()) %>%
  distinct(decade_plus, first_observer, counts_per_obs, source) %>%
  ungroup() %>%
  filter(!is.na(decade_plus)) %>%
  bind_rows(iNat_discoverers)
```

### - generate iNat summary

```{r}
iNat_discoveries <- Yos_species_list %>%
  filter(iNat_RG_END == "1", is.na(voucher_END))

iNat_discoverers <- Yos_iNat %>%
  select(scientific_name, observed_on, user_login) %>%
  arrange(observed_on) %>%
  mutate(scientific_name = stringr::word(scientific_name, start = 1, end = 2)) %>%
  filter(scientific_name %in% iNat_discoveries$accepted_name) %>%
  group_by(scientific_name) %>%
  summarise_all(.funs = first) %>%
  ungroup() %>%
  group_by(user_login) %>%
  mutate(counts_per_obs = n()) %>%
  ungroup() %>% 
  distinct(user_login, counts_per_obs) %>%
  mutate(
    source = "iNat",
    decade_plus = "1990 - 2024"
    ) %>%
  rename(first_observer = user_login)
```

### - histograms of "finds" by observer

```{r}
collection_colours <-  c("iNaturalist" = "#74AC00", "voucher" = "#608CB8")

counts_per_decade <- counts_per_decade %>%
  mutate(source = ifelse(source == "iNat", "iNaturalist", source))

Yos_histograms <- ggplot(data = counts_per_decade, aes(x = counts_per_obs)) +
  geom_histogram(aes_string(fill = "source")) +
  facet_wrap(~ decade_plus, ncol = 1) +
  scale_x_log10() +
  scale_y_continuous(limits = c(0,40)) +
  scale_fill_manual(values = collection_colours, name = "data source") +
  labs(
    y = "number of observers",
    #x = "number of first records",
    title = "Yosemite"
    ) +
  theme(
    axis.title.x = element_blank(),
    plot.title = element_text(hjust = 0.5)
  )

Yos_histograms_2 <- Yos_histograms + 
  theme(
    axis.text.y = element_blank(),
    axis.title.y = element_blank(),
    axis.ticks.y = element_blank()
    ) 

Royal_histograms <- Yos_histograms + theme(legend.position = "none") + labs(title = "Royal")

histograms <- grid.arrange(
  Royal_histograms, Yos_histograms_2,
  ncol = 2, 
  widths = c(1, 1.2),
  bottom = textGrob("number of first records", gp = gpar(fontsize = 10))
)

cowplot::save_plot("outputs/observer_histograms.jpg", histograms, base_width = 6, base_height = 9)
```


## - NOT USING: Figure XX. taxonomic summaries

Will's figures are much better!

### - - summary by vouchers

```{r}
family_voucher_summary <- Yos_species_list %>%
  filter(voucher_END == 1) %>%
  group_by(family) %>%
  summarise(family_count = n()) %>%
  ungroup() %>%
  filter(family_count > 12)

ggplot(family_voucher_summary, aes(x="", y=family_count, fill=family))+
  geom_bar(width = 1, stat = "identity") +
  coord_polar("y", start=0) +
  theme_minimal() +
  theme(axis.text.x=element_blank())  
```

### - - summary by iNat

```{r}
family_iNat_summary <- Yos_species_list %>%
  filter(iNat_RG_END == 1) %>%
  filter(family %in% family_voucher_summary$family) %>%
  group_by(family) %>%
  summarise(family_count = n()) %>%
  ungroup()

ggplot(family_iNat_summary, aes(x="", y=family_count, fill=family))+
  geom_bar(width = 1, stat = "identity") +
  coord_polar("y", start=0) +
  theme_minimal() +
  theme(axis.text.x=element_blank())  
```
