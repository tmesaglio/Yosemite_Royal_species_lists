---
title: "Paper 2"
format: html
editor: visual
editor_options: 
  chunk_output_type: console
knitr:
  opts_knit:
    root.dir: "C:/Users/Lizzy/Documents/GitHub/wa_inat_plants/"
---

## Libraries

```{r}
library(tidyverse)
library(lubridate)
library(ggplot2)
library(data.table)

# spatial
library(sf)
library(rgdal)
library(rmapshaper)

# plotting
library(eulerr)
library(cowplot)
library(scales)
library(gridExtra)
library(grid)
library(ggspatial)

setwd("C:/Users/Lizzy/Documents/GitHub/wa_inat_plants/")
```

## Read in Yosemite data

```{r}
setwd("C:/Users/Lizzy/Documents/GitHub/wa_inat_plants/")

Yosemite_species_list <- read_csv("data_Yosemite/Yosemite_all_data_2024_10_17.csv")

Yosemite_species_paper_2 <- Yosemite_species_list %>%
  filter(voucher_END == "1" | iNat_RG_END == "1")

Yosemite_iNat <- read_csv("data_Yosemite/Yosemite_ResearchGrade.csv") %>%
  mutate(accepted_name = stringr::word(scientific_name, start = 1, end = 2))
  
Yosemite_synonym_lookup <- read_csv("data_Yosemite/Yosemite_synonyms_lookup_2024.06.11.csv") %>%
  select(scientificName = starting_name, current_name, name_source)

Yosemite_CCH2_data <- read_csv("data_Yosemite/Yosemite_CCH_records_2024.06.14.csv") %>%
  filter(phylum == "Tracheophyta") %>%                  # retain only vascular plants
  filter(keep_omit == c("keep")) %>%                    # retain only valid vouchers
  filter(year > 1859) %>%                               # remove garbage years
  filter(recordedBy != "Gill, Raymond J.") %>%          # remove collection with photographic observations only
  filter(stringr::str_detect(scientificName, " ")) %>%  # remove genera
  left_join(Yosemite_synonym_lookup) %>%
  select(current_name, scientificName, keep_omit, institutionCode, recordedBy_simple, eventDate, year, locality, institutionCode, 
         recordNumber, decimalLatitude, decimalLongitude, recordedBy, county) %>%
  filter(!is.na(current_name))

Yosemite_gbif_to_include <- read_csv("data_Yosemite/Yosemite_GBIF_records_2024.06.14.csv") %>%
  filter(keep_omit == "keep") %>% 
  rename(scientificName = scientific_name)

Yosemite_voucher_data <- Yosemite_CCH2_data %>%
  bind_rows(Yosemite_gbif_to_include)
```

## Read in Royal data

```{r}
Royal_observers <- read_csv("data_Royal/species_per_collector.csv")
```

## Figure 2. Maps of long unobserved, recent finds

```{r}
establish_colours <-  c("native" = "#6A51A3", "introduced" = "red")
source_shapes <-  c("iNat" = 17, "voucher" = 16)

Yosemite_long_unseen <- Yosemite_species_paper_2 %>%
  filter(is.na(recent_voucher) & is.na(iNat_RG_END))

#Yosemite_long_unseen_locations <- Yosemite_CCH2_data %>%
#  filter(current_name %in% Yosemite_long_unseen$accepted_name, keep_omit == "keep") %>%
  # turning off so that I retain actual final location and will manually fill in locations
  #filter(!is.na(decimalLatitude)) %>%   
#  arrange(-year) %>%
#  group_by(current_name) %>%
#  summarise_all(.funs = first) %>%
#  distinct() %>%
#  ungroup() %>%
#  left_join(Yosemite_long_unseen %>% select(current_name = accepted_name, establishment_means))

#Yosemite_long_unseen_locations %>% write_csv("data_Yosemite/Yosemite_long_unseen_last_location.csv")

Yosemite_long_unseen_locations <- read_csv("data_Yosemite/long_unseen_edited_lat_lon.csv") %>%
  filter(is.na(omit_from_list)) %>%
  mutate(source = "voucher") %>%
  left_join(Yosemite_long_unseen %>% select(current_name = accepted_name, establishment_means))

Yosemite_recent_additions_data <- Yosemite_species_paper_2 %>%
  filter(is.na(old_voucher) & (iNat_RG_END == "1" | recent_voucher == "1"))

Yosemite_iNat_recent_additions <- Yosemite_iNat %>%
  select(scientific_name, observed_on, latitude, longitude) %>%
  filter(scientific_name %in% Yosemite_recent_additions_data$accepted_name) %>%
  mutate(source = "iNat")
  
Yosemite_CCH_recent_additions <- Yosemite_CCH2_data %>%
  filter(current_name %in% Yosemite_recent_additions_data$accepted_name, keep_omit == "keep") %>%
  # turning off so that I retain actual final location and will manually fill in locations
  #filter(!is.na(decimalLatitude), decimalLatitude > 37) %>%
  arrange(year) %>%
  group_by(current_name) %>%
  summarise_all(.funs = first) %>%
  distinct() %>%
  ungroup() %>%
  select(scientific_name = current_name, observed_on = year, latitude = decimalLatitude , longitude = decimalLongitude, recordedBy_simple, locality, institutionCode) %>%
  mutate(observed_on = lubridate::make_date(observed_on, 1, 1))

#Yosemite_CCH_recent_additions %>% write_csv("data_Yosemite/Yosemite_CCH_recent_additions.csv")

Yosemite_recent_additions_vouchers <- read_csv("data_Yosemite/CCH_recent_additions_latlon_fixed.csv") %>% 
  mutate(
    source = "voucher", 
    observed_on = date(observed_on)
    )

Yosemite_recent_additions_all <- Yosemite_iNat_recent_additions %>%
  bind_rows(Yosemite_recent_additions_vouchers) %>%
  left_join(Yosemite_recent_additions_data %>% select(scientific_name = accepted_name, establishment_means)) %>%
  arrange(observed_on) %>%
  group_by(scientific_name) %>%
  summarise_all(.funs = first) %>%
  ungroup() %>%
  distinct()

yosemite_outline <- st_read("data_Yosemite/Yosemite.shp") %>%
  st_transform(crs = 4326) %>%
  st_make_valid()

yos_roads <- st_read("data_Yosemite/Yosemite_roads.gpx", layer = "tracks") %>%
  st_transform(crs = 4326) %>%
  st_make_valid()

yos_roads_clipped <- rmapshaper::ms_clip(target = yos_roads, clip = yosemite_outline[1])

Yosemite_long_unseen <- 
  ggplot() + 
  geom_sf(mapping = aes(), data = yosemite_outline , stat = "sf", fill = "#C5DDC2", color = "grey50") +
  geom_sf(mapping = aes(), data = yos_roads_clipped, stat = "sf") +
  geom_point(aes(longitude, latitude, col = factor(establishment_means)), data = Yosemite_long_unseen_locations, position = position_jitter(height=.005, width=.005)) +
  scale_colour_manual(values = establish_colours, name = "origin") +
  #scale_x_continuous(expand = c(0, 0)) +
  #scale_y_continuous(expand = c(0, 0)) +
  theme_classic() + 
  ggspatial::annotation_scale(location = "br", width_hint = 0.5, pad_y = unit(0, "cm"), pad_x = unit(0, "cm"),line_width = 0.5, height = unit(0.2, "cm")) +
  ggtitle("b. Yosemite") +
  theme(
    legend.position = "none",
    axis.title = element_blank(),
    axis.text = element_blank(),
    axis.ticks = element_blank(),
    axis.line = element_blank(),
    axis.ticks.length = unit(0, "pt"),
    plot.title = element_text(hjust = 0, size = 10),
    plot.margin=unit(c(.0,.0,.0,.0),"cm")
  )

Yos_new_discoveries_tmp <-
  ggplot() + 
  geom_sf(mapping = aes(), data = yosemite_outline , stat = "sf", fill = "#C5DDC2", color = "grey50") +
  geom_sf(mapping = aes(), data = yos_roads_clipped, stat = "sf") +
  geom_point(aes(longitude, latitude, col = factor(establishment_means), shape = factor(source)), data = Yosemite_recent_additions_all, position = position_jitter(height=.005, width=.005)) +
  scale_colour_manual(values = establish_colours, name = "species origin") +
  scale_shape_manual(values = source_shapes, name = "data source") +
  #scale_x_continuous(expand = c(0, 0)) +
  #scale_y_continuous(expand = c(0, 0)) +
  theme_classic() +
  ggtitle("d. Yosemite") +
  theme(
    legend.position = "bottom",
    axis.title = element_blank(),
    axis.text = element_blank(),
    axis.ticks = element_blank(),
    axis.line = element_blank(),
    axis.ticks.length = unit(0, "pt"),
    plot.title = element_text(hjust = 0, size = 10),
    plot.margin=unit(c(.0,.0,.0,.0),"cm")
  )

legend_maps <- get_legend(Yos_new_discoveries_tmp) #+ theme(legend.margin = margin(2, 2, 2, 2))

Yos_new_discoveries <- Yos_new_discoveries_tmp + theme(legend.position = "none")
```

```{r}
Royal_location <- read_csv("data_Royal/Royal_locations_first_last_coordinates_20241105.csv")
establish_colours2 <-  c("native" = "#6A51A3", "introduced" = "red")
source_shapes <-  c("iNat" = 17, "voucher" = 16)

Royal_long_unseen_locations <- Royal_location %>%
  filter(category == "long unseen", `record type` == "voucher")

Royal_Yosemite_recent_additions_all <- Royal_location %>%
  filter(category == "new discovery") %>%
  rename(source = `record type`)

Royal_outline <- st_read("data_Royal/Royal_outline.shp") %>%
  st_transform(crs = 4326) %>%
  st_make_valid()

Royal_roads <- st_read("data_Royal/Royal_roads.gpx", layer = "tracks") %>%
  st_transform(crs = 4326) %>%
  st_make_valid()

Royal_roads_clipped <- rmapshaper::ms_clip(target = Royal_roads, clip = Royal_outline[1])

Royal_long_unseen <-
  ggplot() + 
  geom_sf(mapping = aes(), data = Royal_outline , stat = "sf", fill = "#C5DDC2", color = "grey50") +
  geom_sf(mapping = aes(), data = Royal_roads_clipped, stat = "sf") +
  geom_point(aes(longitude, latitude, col = factor(establishment_means)), data = Royal_long_unseen_locations, position = position_jitter(height=.001, width=.001)) +
  scale_colour_manual(values = establish_colours2, name = "origin") +
  #scale_x_continuous(expand = c(0, 0)) +
  #scale_y_continuous(expand = c(0, 0)) +
  theme_classic() + 
  ggtitle("a. Royal") +
  theme(
    legend.position = "none",
    axis.title = element_blank(),
    axis.text = element_blank(),
    axis.ticks = element_blank(),
    axis.line = element_blank(),
    axis.ticks.length = unit(0, "pt"),
    plot.title = element_text(hjust = 0, size = 10),
    plot.margin=unit(c(.0,.0,.0,.0),"cm")
  )

Royal_new_discoveries <-
  ggplot() + 
  geom_sf(mapping = aes(), data = Royal_outline , stat = "sf", fill = "#C5DDC2", color = "grey50") +
  geom_sf(mapping = aes(), data = Royal_roads_clipped, stat = "sf") +
  geom_point(aes(longitude, latitude, col = factor(establishment_means), shape = factor(source)), data = Royal_Yosemite_recent_additions_all, position = position_jitter(height=.001, width=.001)) +
  scale_colour_manual(values = establish_colours2, name = "species origin") +
  scale_shape_manual(values = source_shapes, name = "data source") +
  annotation_scale(location = "br", width_hint = 0.5, pad_y = unit(1.4, "cm"), pad_x = unit(.3, "cm"), line_width = 0.5, height = unit(0.2, "cm")) +
  #scale_x_continuous(expand = c(0, 0)) +
  #scale_y_continuous(expand = c(0, 0)) +
  theme_classic() +
  ggtitle("c. Royal") +
  theme(
    axis.title = element_blank(),
    axis.text = element_blank(),
    axis.ticks = element_blank(),
    axis.line = element_blank(),
    axis.ticks.length = unit(0, "pt"),
    plot.title = element_text(hjust = 0, size = 10),
    plot.margin=unit(c(0,0,0,0),"cm"),
    legend.position = "none"
    )
```

```{r}
#Yos_maps_combined <- ggdraw(plot_grid(Yosemite_long_unseen, Yos_new_arrivals, ncol=1, align='v', rel_widths=c(1, 1)))

#blank <- grid::rectGrob(gp = gpar(fill="white", col = "white"))

unseen <- grid.arrange(
  Royal_long_unseen, Yosemite_long_unseen,
  ncol = 2,
  top = textGrob("Last collection location for long-unseen species", gp = gpar(fontsize = 10), hjust = 1.2)
  )

new_discoveries <- grid.arrange(
  Royal_new_discoveries, Yos_new_discoveries,
  ncol = 2,
  top = textGrob("First collection location for post-1990 discoveries", gp = gpar(fontsize = 10), hjust = 1.2)
  )

#legend <- grid.arrange(
#  legend_maps, blank,
#  ncol = 2
#  )

all_maps <- grid.arrange(
  unseen, new_discoveries, legend_maps,
  ncol = 1, 
  heights = c(1, 1, 0.08)
)

cowplot::save_plot("outputs/maps.jpg", all_maps, base_width = 8, base_height = 9)
```

## Figure 3. Decline in "unobserved" over time

### - function to calculate declining long-unseens

```{r}
summarise_long_unseens <-function(data, detection_column, total_species) {

    detection_data_summary <- data %>%
      select(detection_column) %>%
      group_by(detection_column) %>%
      mutate(re_finds_per_year = n()) %>%
      distinct(re_finds_per_year) %>%
      ungroup() %>%
      bind_rows(c("detection_column" = 1989, "re_finds_per_year" = 0)) %>%
      arrange(detection_column) %>%
      mutate(total_refound = re_finds_per_year,
             total_refound = accumulate(re_finds_per_year[-1], sum, .init = total_refound[1]),
             remaining = total_species - total_refound,
             proportion_remaining = remaining / total_species,
             detection_column = detection_column + 1
             ) %>%
      rename(year = detection_column)
    
    if (max(detection_data_summary$year) < 2024) {
    detection_data_summary <- detection_data_summary %>%
      bind_rows(c("year" = 2024, 
                  "re_finds_per_year" = 0, 
                  "total_refound" = max(detection_data_summary$total_refound), 
                  "remaining" = min(detection_data_summary$remaining),
                  "proportion_remaining" = min(detection_data_summary$proportion_remaining)
      ))
    }
  detection_data_summary
}
```

### - generate data summaries - Yosemite

```{r}

Yosemite_paper2_fig4_data <-
  Yosemite_species_paper_2 %>%
  select(accepted_name, family, broader, establishment_means, voucher_END, iNat_RG_END, old_voucher, recent_voucher) %>%
  distinct()

# vouchers
Yosemite_recent_vouchers <- Yosemite_voucher_data %>%
  filter(keep_omit == "keep", year > 1989) %>%
  filter(current_name %in% Yosemite_paper2_fig4_data$accepted_name) %>%
  select(accepted_name = current_name, year) %>%
  mutate(dataset = "voucher") %>%
  arrange(year) %>%
  distinct(accepted_name, .keep_all = TRUE)

Yosemite_total_species <- nrow(Yosemite_paper2_fig4_data)

Yosemite_voucher_redetection_summary <- Yosemite_recent_vouchers %>%
  select(year) %>%
  group_by(year) %>%
  mutate(re_finds_per_year = n()) %>%
  distinct(re_finds_per_year) %>%
  ungroup() %>%
  bind_rows(c("year" = 1989, "re_finds_per_year" = 0)) %>%
  arrange(year) %>%
  mutate(total_refound = re_finds_per_year,
         total_refound = accumulate(re_finds_per_year[-1], sum, .init = total_refound[1]),
         remaining = Yosemite_total_species - total_refound,
         proportion_remaining = remaining / Yosemite_total_species,
         year = year + 1
         )
  
  if (max(Yosemite_voucher_redetection_summary$year) < 2024) {
  Yosemite_voucher_redetection_summary <- Yosemite_voucher_redetection_summary %>%
    bind_rows(c("year" = 2024, 
                "re_finds_per_year" = 0, 
                "total_refound" = max(Yosemite_voucher_redetection_summary$total_refound), 
                "remaining" = min(Yosemite_voucher_redetection_summary$remaining),
                "proportion_remaining" = min(Yosemite_voucher_redetection_summary$proportion_remaining)
    ))
  }


# iNaturalist
Yosemite_recent_iNat <- Yosemite_iNat %>%
  select(scientific_name, observed_on) %>%
  mutate(year = year(observed_on)) %>%
  # this is very slightly changes the outcome, but makes for a much nicer figure
  filter(year > 2003) %>%
  filter(scientific_name %in% Yosemite_species_paper_2$accepted_name) %>%
  select(accepted_name = scientific_name, year) %>%
  mutate(dataset = "iNat") %>%
  arrange(year) %>%
  distinct(accepted_name, .keep_all = TRUE)
# have confirmed there were no species with pre-2008 observations that haven't been seen since - so filtering changes when species were "ticked off" the iNat list, but not whether they are ticked off the list, at least for Yosemite

Yosemite_iNat_redetection_summary <- Yosemite_recent_iNat %>%
  select(year) %>%
  group_by(year) %>%
  mutate(re_finds_per_year = n()) %>%
  distinct(re_finds_per_year) %>%
  ungroup() %>%
  bind_rows(c("year" = 1989, "re_finds_per_year" = 0)) %>%
  arrange(year) %>%
  mutate(total_refound = re_finds_per_year,
         total_refound = accumulate(re_finds_per_year[-1], sum, .init = total_refound[1]),
         remaining = Yosemite_total_species - total_refound,
         proportion_remaining = remaining / Yosemite_total_species,
         year = year + 1
         ) %>%
  bind_rows(c("year" = 2004, "re_finds_per_year" = 0, "total_refound" = 0, "remaining" = Yosemite_total_species, "proportion_remaining" = 1))
  
if (max(Yosemite_iNat_redetection_summary$year) < 2024) {
  Yosemite_iNat_redetection_summary <- Yosemite_iNat_redetection_summary %>%
    bind_rows(c("year" = 2024, 
                "re_finds_per_year" = 0, 
                "total_refound" = max(Yosemite_iNat_redetection_summary$total_refound), 
                "remaining" = min(Yosemite_iNat_redetection_summary$remaining),
                "proportion_remaining" = min(Yosemite_iNat_redetection_summary$proportion_remaining)
    ))
}

Yosemite_first_iNat = min(Yosemite_recent_iNat$year)

# combined voucher & iNat

Yosemite_recent_obs_combined <- Yosemite_recent_vouchers %>%
  bind_rows(Yosemite_recent_iNat) %>%
  arrange(accepted_name, year) %>%
  #mutate(accepted_name = stringr::word(accepted_name, start = 1, end = 2)) %>%
  group_by(accepted_name) %>%
  summarise_all(.funs = first) %>%
  ungroup() %>%
  arrange(year)

Yosemite_combined_redetection_summary <- Yosemite_recent_obs_combined %>%
  group_by(year) %>%
  mutate(re_finds_per_year = n()) %>%
  distinct(re_finds_per_year) %>%
  ungroup()

Yosemite_recent_obs_2_lines <- Yosemite_recent_obs_combined %>%
  mutate(counts = 1) %>%
  pivot_wider(names_from = dataset, values_from = counts) %>%
  mutate(
    iNat = if_else(is.na(iNat), 0, iNat),
    voucher = if_else(is.na(voucher), 0, voucher)
    ) %>%
  select(-accepted_name) %>%
  group_by(year) %>%
  mutate(
    voucher_finds_per_year = sum(voucher),
    iNat_finds_per_year = sum(iNat)
    ) %>%
  select(-voucher, -iNat) %>%
  distinct() %>%
  ungroup() %>%
  left_join(Yosemite_combined_redetection_summary %>% rename(combined_finds_per_year = re_finds_per_year))

Yosemite_recent_obs_2_lines <- Yosemite_recent_obs_2_lines %>%
  bind_rows(c("year" = 1989, "voucher_finds_per_year" = 0, "iNat_finds_per_year" = 0, "combined_finds_per_year" = 0)) %>%
  arrange(year) %>%
  mutate(total_combined_refound = combined_finds_per_year,
         total_voucher_refound  = voucher_finds_per_year,
         total_combined_refound = accumulate(combined_finds_per_year[-1], sum, .init = total_combined_refound[1]),
         total_voucher_refound = accumulate(voucher_finds_per_year[-1], sum, .init = total_voucher_refound[1]),
         remaining_combined = Yosemite_total_species - total_combined_refound,
         remaining_voucher = Yosemite_total_species - total_voucher_refound,
         proportion_remaining_combined = remaining_combined / Yosemite_total_species,
         year = year + 1
         )
```

### - generate data summaries - Royal

```{r}
Royal_need_finding <- read_csv("data_Royal/Royal_needs_to_be_found.csv") %>%
  rename(
    first_voucher_since_1990 = `First voucher since 1990`,
    first_iNat_since_1990 = `First iNat record since 1990`
  )

Royal_total_species = nrow(Royal_need_finding)

Royal_recent_vouchers <- Royal_need_finding %>%
  select(scientific_name, year = first_voucher_since_1990) %>%
  filter(!is.na(year)) %>%
  arrange(year) %>%
  mutate(dataset = "voucher")

Royal_voucher_redetection_summary <- Royal_recent_vouchers %>%
  group_by(year) %>%
  mutate(re_finds_per_year = n()) %>%
  distinct(re_finds_per_year) %>%
  ungroup() %>%
  bind_rows(c("year" = 1989, "re_finds_per_year" = 0)) %>%
  arrange(year) %>%
  mutate(total_refound = re_finds_per_year,
         total_refound = accumulate(re_finds_per_year[-1], sum, .init = total_refound[1]),
         remaining = Royal_total_species - total_refound,
         proportion_remaining = remaining / Royal_total_species,
         year = year + 1
         )
  
  if (max(Royal_voucher_redetection_summary$year) < 2024) {
  Royal_voucher_redetection_summary <- Royal_voucher_redetection_summary %>%
    bind_rows(c("year" = 2024, 
                "re_finds_per_year" = 0, 
                "total_refound" = max(Royal_voucher_redetection_summary$total_refound), 
                "remaining" = min(Royal_voucher_redetection_summary$remaining),
                "proportion_remaining" = min(Royal_voucher_redetection_summary$proportion_remaining)
    ))
  }


Royal_recent_iNat <- Royal_need_finding %>%
  select(scientific_name, year = first_iNat_since_1990) %>%
  filter(!is.na(year)) %>%
  arrange(year) %>%
  mutate(dataset = "voucher")

Royal_iNat_redetection_summary <- Royal_recent_iNat %>%
  group_by(year) %>%
  mutate(re_finds_per_year = n()) %>%
  distinct(re_finds_per_year) %>%
  ungroup() %>%
  bind_rows(c("year" = 1989, "re_finds_per_year" = 0)) %>%
  arrange(year) %>%
  mutate(total_refound = re_finds_per_year,
         total_refound = accumulate(re_finds_per_year[-1], sum, .init = total_refound[1]),
         remaining = Royal_total_species - total_refound,
         proportion_remaining = remaining / Royal_total_species,
         year = year + 1
         )
  
if (max(Royal_iNat_redetection_summary$year) < 2024) {
  Royal_iNat_redetection_summary <- Royal_iNat_redetection_summary %>%
    bind_rows(c("year" = 2024, 
                "re_finds_per_year" = 0, 
                "total_refound" = max(Royal_iNat_redetection_summary$total_refound), 
                "remaining" = min(Royal_iNat_redetection_summary$remaining),
                "proportion_remaining" = min(Royal_iNat_redetection_summary$proportion_remaining)
    ))
}

Royal_first_iNat = min(Royal_recent_iNat$year)


# Royal combined - panel B summary

Royal_recent_obs_combined <- Royal_need_finding %>%
  filter(!is.na(first_voucher_since_1990) | !is.na(first_iNat_since_1990)) %>%
  rowwise() %>%
  mutate(
    year = case_when(
      is.na(first_voucher_since_1990) ~ first_iNat_since_1990,
      is.na(first_iNat_since_1990) ~ first_voucher_since_1990,
      !is.na(first_voucher_since_1990) & !is.na(first_iNat_since_1990) ~ min(first_voucher_since_1990, first_iNat_since_1990)
    ),
    dataset = case_when(
      is.na(first_voucher_since_1990) ~ "iNat",
      is.na(first_iNat_since_1990) ~ "voucher",
      !is.na(first_voucher_since_1990) & !is.na(first_iNat_since_1990) &  first_voucher_since_1990 >= first_iNat_since_1990 ~ "iNat",
      !is.na(first_voucher_since_1990) & !is.na(first_iNat_since_1990) &  first_voucher_since_1990 < first_iNat_since_1990 ~ "voucher"
    ),
    counts = 1
  ) %>%
  select(accepted_name = scientific_name, year, dataset, counts) %>%
  pivot_wider(names_from = dataset, values_from = counts) %>%
  mutate(
    iNat = if_else(is.na(iNat), 0, iNat),
    voucher = if_else(is.na(voucher), 0, voucher)
    ) %>%
  select(-accepted_name) %>%
  group_by(year) %>%
  mutate(
    voucher_finds_per_year = sum(voucher),
    iNat_finds_per_year = sum(iNat)
    ) %>%
  select(-voucher, -iNat) %>%
  distinct() %>%
  ungroup() %>%
  mutate(combined_finds_per_year = voucher_finds_per_year + iNat_finds_per_year)

Royal_recent_obs_2_lines <- Royal_recent_obs_combined %>%
  bind_rows(c("year" = 1989, "voucher_finds_per_year" = 0, "iNat_finds_per_year" = 0, "combined_finds_per_year" = 0)) %>%
  arrange(year) %>%
  mutate(total_combined_refound = combined_finds_per_year,
         total_voucher_refound  = voucher_finds_per_year,
         total_combined_refound = accumulate(combined_finds_per_year[-1], sum, .init = total_combined_refound[1]),
         total_voucher_refound = accumulate(voucher_finds_per_year[-1], sum, .init = total_voucher_refound[1]),
         remaining_combined = Royal_total_species - total_combined_refound,
         remaining_voucher = Royal_total_species - total_voucher_refound,
         proportion_remaining_combined = remaining_combined / Royal_total_species,
         year = year + 1
         )
  
  if (max(Royal_iNat_redetection_summary$year) < 2024) {
  Royal_iNat_redetection_summary <- Royal_iNat_redetection_summary %>%
    bind_rows(c("year" = 2024, 
                "re_finds_per_year" = 0,
                "total_refound" = max(Royal_iNat_redetection_summary$total_refound), 
                "remaining" = min(Royal_iNat_redetection_summary$remaining),
                "proportion_remaining" = min(Royal_iNat_redetection_summary$proportion_remaining)
    ))
  }
  
#write_csv(Royal_recent_combined, "data_Royal/Royal_recent_combined.csv", na = "")
```

### - generate plots

```{r}
# try https://stackoverflow.com/questions/61775003/ggplot2-create-shaded-area-with-gradient-below-curve to get colors to grade; won't let you use gradients with geom_ribbon

combined_plot_a <- ggplot() + 
  geom_rect(aes(xmin = 1990, xmax = 2025, ymin = 0, ymax = min(Royal_voucher_redetection_summary$remaining)), fill = "#608CB8", colour = NA, alpha = 0.1) + 
  geom_rect(aes(xmin = 2004, xmax = 2025, ymin = 0, ymax = min(Royal_iNat_redetection_summary$remaining)), fill = "#74AC00", colour = NA, alpha = 0.1) + 
  geom_ribbon(aes(x = year, ymin = min(Royal_iNat_redetection_summary$remaining), ymax = remaining), data = Royal_iNat_redetection_summary %>% filter(year > 2003), fill = "#74AC00", color = "#74AC00", alpha = 0.35) +
  geom_ribbon(aes(x = year, ymin = min(Royal_voucher_redetection_summary$remaining), ymax = remaining), data = Royal_voucher_redetection_summary, fill = "#608CB8", color = "#608CB8", alpha = 0.35) +
  scale_x_continuous(limits = c(1990, 2025), breaks = c(1990, 2000, 2010, 2020), expand = c(0,0)) +
  scale_y_continuous(limits = c(0, 1000), breaks = c(200, 400, 600, 800, 1000), expand = c(0,0)) +
  geom_text(aes(x = 1996, y = 235, label = "status", fontface = "italic")) +
  geom_text(aes(x = 1996, y = 165, label = "unknown", fontface = "italic")) +
  geom_text(aes(x = 2014, y = 100, label = "status unknown", fontface = "italic")) +
  geom_text(aes(x = 1997, y = 660, label = "vouchers only")) +
  geom_text(aes(x = 2012, y = 760, label = "iNaturalist only")) +
  theme_classic()  +
  labs(
    title = "Royal"
  ) +
  theme(
    axis.title.x = element_blank(),
    axis.title.y = element_blank()
  )

combined_plot_b <- ggplot() + 
    geom_rect(aes(xmin = 1990, xmax = 2025, ymin = 0, ymax = min(Royal_recent_obs_2_lines$remaining_combined)), fill = "#6EA387", colour = NA, alpha = 0.2) +
    geom_ribbon(aes(x = year, ymin = min(Royal_recent_obs_2_lines$remaining_combined), ymax = remaining_combined), data = Royal_recent_obs_2_lines, fill = "#6EA387", alpha = 0.4) +
  geom_line(aes(x = year, y = remaining_combined), data = Royal_recent_obs_2_lines, color = "#74AC00", size = 1) +
  geom_line(aes(x = year, y = remaining_voucher), data = Royal_recent_obs_2_lines, color = "#608CB8", size = 1) +
  scale_x_continuous(limits = c(1990, 2025), breaks = c(1990, 2000, 2010, 2020), expand = c(0,0)) +
  scale_y_continuous(limits = c(0, 1000), breaks = c(200, 400, 600, 800, 1000), expand = c(0,0)) +
  geom_text(aes(x = 2000, y = 600, label = "combined")) +
  geom_text(aes(x = 2000, y = 530, label = "resources")) +
  geom_text(aes(x = 2008, y = 200, label = "status unknown", fontface = "italic")) +
theme_classic()  +
  labs(
    title = " "
  ) +
  theme(
    axis.title.x = element_blank(),
    axis.title.y = element_blank()
  )

combined_plot_c <- ggplot() + 
  geom_rect(aes(xmin = 1990, xmax = 2024, ymin = 0, ymax = min(Yosemite_voucher_redetection_summary$remaining)), fill = "#608CB8", colour = NA, alpha = 0.2) + 
  geom_rect(aes(xmin = 2004, xmax = 2024, ymin = 0, ymax = min(Yosemite_iNat_redetection_summary$remaining)), fill = "#74AC00", colour = NA, alpha = 0.1) + 
  geom_ribbon(aes(x = year, ymin = min(Yosemite_voucher_redetection_summary$remaining), ymax = remaining), data = Yosemite_voucher_redetection_summary, fill = "#608CB8", color = "#608CB8", alpha = 0.35) +
  geom_ribbon(aes(x = year, ymin = min(Yosemite_iNat_redetection_summary$remaining), ymax = remaining), data = Yosemite_iNat_redetection_summary %>% filter(year > 2003), fill = "#74AC00", color = "#74AC00", alpha = 0.35) +
  scale_x_continuous(limits = c(1990, 2025), breaks = c(1990, 2000, 2010, 2020), expand = c(0,0)) +
  scale_y_continuous(limits = c(0, 1600), breaks = c(500, 1000, 1500), expand = c(0,0)) +
  geom_text(aes(x = 1997.5, y = 240, label = "status unknown", fontface = "italic")) +
  geom_text(aes(x = 2014.5, y = 380, label = "status", fontface = "italic")) +
  geom_text(aes(x = 2014.5, y = 300, label = "unknown", fontface = "italic")) +
  geom_text(aes(x = 1997, y = 900, label = "vouchers only")) +
  geom_text(aes(x = 2011, y = 1050, label = "iNaturalist only")) +
  #scale_y_log10(limits = c(1, 1800), breaks = c(1, 10, 100, 1000, 1577), expand = c(0,0)) +
  theme_classic()  +
  labs(
    title = "Yosemite"
  ) +
  theme(
    axis.title.x = element_blank(),
    axis.title.y = element_blank()
  )

combined_plot_d <- ggplot() + 
    geom_rect(aes(xmin = 1990, xmax = 2024, ymin = 0, ymax = min(Yosemite_recent_obs_2_lines$remaining_combined)), fill = "#6EA387", colour = NA, alpha = 0.2) +
    geom_ribbon(aes(x = year, ymin = min(Yosemite_recent_obs_2_lines$remaining_combined), ymax = remaining_combined), data = Yosemite_recent_obs_2_lines, fill = "#6EA387", alpha = 0.4) +
  geom_line(aes(x = year, y = remaining_combined), data = Yosemite_recent_obs_2_lines, color = "#74AC00", size = 1) +
  geom_line(aes(x = year, y = remaining_voucher), data = Yosemite_recent_obs_2_lines, color = "#608CB8", size = 1) +
  scale_x_continuous(limits = c(1990, 2025), breaks = c(1990, 2000, 2010, 2020), expand = c(0,0)) +
  scale_y_continuous(limits = c(0, 1600), breaks = c(500, 1000, 1500), expand = c(0,0)) +
  geom_text(aes(x = 1998, y = 850, label = "combined")) +
  geom_text(aes(x = 1998, y = 750, label = "resources")) +
  geom_text(aes(x = 2008, y = 110, label = "status unknown", fontface = "italic")) +
theme_classic()  +
  labs(
    title = " "
  ) +
  theme(
    axis.title.x = element_blank(),
    axis.title.y = element_blank()
  )

combined_plot_d_alt <- ggplot() + 
    geom_rect(aes(xmin = 1990, xmax = 2024, ymin = 0, ymax = min(Yosemite_recent_obs_2_lines$remaining_combined)), fill = "#6EA387", colour = NA, alpha = 0.2) +
    geom_ribbon(aes(x = year, ymin = min(Yosemite_recent_obs_2_lines$remaining_combined), ymax = remaining_combined), data = Yosemite_recent_obs_2_lines %>% filter(year < 2012), fill = "#608CB8", alpha = 0.2) +
    geom_ribbon(aes(x = year, ymin = min(Yosemite_recent_obs_2_lines$remaining_combined), ymax = remaining_combined), data = Yosemite_recent_obs_2_lines %>% filter(year > 2005), fill = "#74AC00", alpha = 0.2) +
  #scale_fill_gradient(low = "#608CB8", high = "#74AC00") +
  geom_line(aes(x = year, y = remaining_combined), data = Yosemite_recent_obs_2_lines, color = "#74AC00", size = 1) +
  geom_line(aes(x = year, y = remaining_voucher), data = Yosemite_recent_obs_2_lines, color = "#608CB8", size = 1) +
  scale_x_continuous(limits = c(1990, 2025), breaks = c(1990, 2000, 2010, 2020), expand = c(0,0)) +
  scale_y_continuous(limits = c(0, 1600), breaks = c(500, 1000, 1500), expand = c(0,0)) +
  geom_text(aes(x = 1998, y = 850, label = "combined")) +
  geom_text(aes(x = 1998, y = 750, label = "resources")) +
  geom_text(aes(x = 2008, y = 110, label = "status unknown", fontface = "italic")) +
theme_classic()  +
  labs(
    title = " "
  ) +
  theme(
    axis.title.x = element_blank(),
    axis.title.y = element_blank()
  )

decline_in_unobserved <- grid.arrange(
  combined_plot_a, combined_plot_b, combined_plot_c, combined_plot_d,
  ncol = 2,
  left = textGrob("species without recorded observations since 1990", rot = 90, gp = gpar(fontsize = 10)),
  bottom = textGrob("year", gp = gpar(fontsize = 10))
)

cowplot::save_plot("outputs/decline_in_unobserved.jpg", decline_in_unobserved, base_width = 8, base_height = 8)

```

## Figure \[not included in paper\]. "Finds per observer" histogram

### - generate Yosemite iNat summary

```{r}
iNat_discoveries <- Yosemite_species_list %>%
  filter(iNat_RG_END == "1", is.na(voucher_END))

iNat_discoverers <- Yosemite_iNat %>%
  select(scientific_name, observed_on, user_login) %>%
  arrange(observed_on) %>%
  mutate(scientific_name = stringr::word(scientific_name, start = 1, end = 2)) %>%
  filter(scientific_name %in% iNat_discoveries$accepted_name) %>%
  group_by(scientific_name) %>%
  summarise_all(.funs = first) %>%
  ungroup() %>%
  group_by(user_login) %>%
  mutate(counts_per_obs = n()) %>%
  ungroup() %>% 
  distinct(user_login, counts_per_obs) %>%
  mutate(
    source = "iNat",
    decade_plus = "1990 - 2024"
    ) %>%
  rename(first_observer = user_login)
```

### - generate Yosemite voucher summary

```{r}
counts_per_decade <- Yosemite_species_list %>%
  select(accepted_name, establishment_means, voucher_END, year_first, first_observer) %>%
  filter(voucher_END == "1") %>%
  arrange(year_first) %>%
  mutate(decade_plus = 
           case_when(
             year_first < 1900 ~ "1860-1900",
             year_first >= 1900 & year_first < 1930 ~ "1900 - 1930",
             year_first >= 1930 & year_first < 1990 ~ "1930 - 1990",
             year_first >= 1990  ~ "1990 - 2024"
             ),
         source = "voucher") %>%
  group_by(decade_plus, first_observer, source) %>%
  summarise(counts_per_obs = n()) %>%
  distinct(decade_plus, first_observer, counts_per_obs, source) %>%
  ungroup() %>%
  filter(!is.na(decade_plus)) %>%
  bind_rows(iNat_discoverers)
```

### - generate Royal summary

```{r}
Royal_observer_summary <- Royal_observers %>%
  rename(first_observer = first_collector, year_first = year_first_collection) %>%
  arrange(year_first) %>%
  mutate(decade_plus = 
           case_when(
             year_first < 1900 ~ "1860-1900",
             year_first >= 1900 & year_first < 1930 ~ "1900 - 1930",
             year_first >= 1930 & year_first < 1990 ~ "1930 - 1990",
             year_first >= 1990  ~ "1990 - 2024"
             )
         ) %>%
  group_by(decade_plus, first_observer, source) %>%
  summarise(counts_per_obs = n()) %>%
  distinct(decade_plus, first_observer, counts_per_obs, source) %>%
  ungroup() %>%
  filter(!is.na(decade_plus))
```

### - histograms of "finds" by observer

```{r}
collection_colours <-  c("iNaturalist" = "#74AC00", "voucher" = "#608CB8")

counts_per_decade <- counts_per_decade %>%
  mutate(source = ifelse(source == "iNat", "iNaturalist", source))

Yos_histograms <- ggplot(data = counts_per_decade, aes(x = counts_per_obs)) +
  geom_histogram(aes_string(fill = "source")) +
  facet_wrap(~ decade_plus, ncol = 1) +
  scale_x_log10() +
  scale_y_continuous(limits = c(0,40)) +
  scale_fill_manual(values = collection_colours, name = "data source") +
  labs(
    y = "number of observers",
    #x = "number of first records",
    title = "Yosemite"
    ) +
  theme(
    axis.title.x = element_blank(),
    plot.title = element_text(hjust = 0.5),
    axis.text.y = element_blank(),
    axis.title.y = element_blank(),
    axis.ticks.y = element_blank()
    ) 

Royal_histograms <- ggplot(data = Royal_observer_summary, aes(x = counts_per_obs)) +
  geom_histogram(aes_string(fill = "source")) +
  facet_wrap(~ decade_plus, ncol = 1) +
  scale_x_log10() +
  scale_y_continuous(limits = c(0,40)) +
  scale_fill_manual(values = collection_colours, name = "data source") +
  labs(
    y = "number of observers",
    title = "Royal"
    ) +
  theme(
    axis.title.x = element_blank(),
    plot.title = element_text(hjust = 0.5),
    legend.position = "none"
  )

histograms <- grid.arrange(
  Royal_histograms, Yos_histograms,
  ncol = 2, 
  widths = c(1, 1.35),
  bottom = textGrob("number of first records", gp = gpar(fontsize = 10))
)

cowplot::save_plot("outputs/observer_histograms.jpg", histograms, base_width = 6, base_height = 9)
```

## New observations 2024.02 to 2024.08

```{r}
iNat_20240901 <- read_csv("data_Yosemite/iNat_Yos_RG_2024.09.01.csv")

iNat_RG_202402 <- Yosemite_species_paper_2 %>% 
  filter(iNat_RG_END == "1")

unseen_to_RG_summer_24 <- iNat_20240901 %>%
filter(taxon_species_name %in% Yosemite_species_paper_2$accepted_name) %>%
filter(!taxon_species_name %in% iNat_RG_202402$accepted_name)  %>%
  select(user_login, taxon_species_name, observed_on, latitude, longitude) %>%
  arrange(observed_on) %>%
  distinct(taxon_species_name, .keep_all = TRUE) %>%
  arrange(user_login)

iNat_new_finds_summer_24 <- iNat_20240901 %>%
filter(!taxon_species_name %in% unseen_to_RG_summer_24$taxon_species_name)  %>%
filter(!taxon_species_name %in% iNat_RG_202402$accepted_name) %>%
  select(user_login, taxon_species_name, observed_on, updated_at, latitude, longitude) %>%
  arrange(observed_on) %>%
  distinct(taxon_species_name, .keep_all = TRUE) %>%
  arrange(user_login) %>% View()
```

```{r}
iNat_needsID_20240901 <- read_csv("data_Yosemite/iNat_Yos_needsID_2024.09.01.csv")

iNat_RG_202402 <- Yosemite_species_paper_2 %>% 
  filter(iNat_RG_END == "1")

unseen_as_RG_thru_summer_24 <- iNat_needsID_20240901 %>%
  arrange(observed_on) %>%
  distinct(taxon_species_name, .keep_all = TRUE) %>%
filter(taxon_species_name %in% Yosemite_species_paper_2$accepted_name) %>%
filter(!taxon_species_name %in% (Yosemite_species_paper_2 %>% filter(is.na(recent_voucher)))$accepted_name) %>%
filter(!taxon_species_name %in% iNat_RG_202402$accepted_name)  %>%
filter(!taxon_species_name %in% unseen_to_RG_summer_24$taxon_species_name)  %>%
  select(user_login, taxon_species_name, observed_on, latitude, longitude) %>%
  arrange(user_login) %>%
  left_join(Yosemite_species_paper_2 %>% rename(taxon_species_name = accepted_name) %>% select(taxon_species_name, establishment_means, family, broader))
```

```{r}
lastpre1990 <- Yosemite_CCH2_data %>%
  filter(year < 1991) %>%
  arrange(-year) %>% 
  select(accepted_name = current_name, last_pre1990_detection = year) %>%
  group_by(accepted_name) %>% 
  summarise(last_pre1990_detection = first(last_pre1990_detection)) %>% 
  ungroup()


Yosemite_recent_vouchers_showy <- Yosemite_CCH2_data %>%
  filter(keep_omit == "keep", year > 1989) %>%
  filter(current_name %in% Yosemite_paper2_fig4_data$accepted_name) %>%
  select(accepted_name = current_name, year) %>%
  left_join(Yosemite_paper2_fig4_data %>% select(accepted_name, broader)) %>%
  mutate(dataset = "CCH") %>%
  arrange(year) %>%
  distinct(accepted_name, .keep_all = TRUE) %>%
  filter(broader == "5.monocot-colorful")


Yosemite_species_paper_2_stats <- Yosemite_species_paper_2 %>%
  left_join(Yosemite_recent_vouchers %>% select(accepted_name, first_CCH_redetect = year)) %>%
  left_join(Yosemite_recent_iNat %>% select(accepted_name, first_iNat_detect = year)) %>%
  left_join(lastpre1990, by = "accepted_name") %>%
  select(accepted_name, family, broader, establishment_means, first_iNat_detect, first_CCH_redetect, voucher_obs, year_first, iNat_RG_END, recent_voucher, last_pre1990_detection) %>%
  mutate(
    first_iNat_detect = as.numeric(first_iNat_detect), 
    first_CCH_redetect = as.numeric(first_CCH_redetect), 
    voucher_obs = as.numeric(voucher_obs),
    year_first = as.numeric(year_first),
    recent_detection = ifelse(iNat_RG_END == "1" | recent_voucher == "1", 1, NA),
    first_redetection = ifelse(first_CCH_redetect < first_iNat_detect | (is.na(first_iNat_detect)), first_CCH_redetect, first_iNat_detect),
    first_redetection = ifelse(is.na(first_redetection), first_iNat_detect, first_redetection),
    years_since_last_detection = first_redetection - last_pre1990_detection
    )

redetected <- Yosemite_species_paper_2_stats %>%
  filter(!is.na(recent_detection)) %>%
  select(accepted_name, voucher_obs, last_pre1990_detection) %>%
  arrange(-last_pre1990_detection)

remaining <- Yosemite_species_paper_2_stats %>%
  filter(is.na(recent_detection)) %>%
  select(accepted_name, voucher_obs, last_pre1990_detection) %>%
  arrange(-last_pre1990_detection)

prob_detection_by_obs_number <- Yosemite_species_paper_2_stats %>%
  select(accepted_name, voucher_obs, last_pre1990_detection, recent_detection) %>%
  mutate(detected_01 = ifelse(!is.na(recent_detection), 1, 0))

remaining_histogram <- ggplot(data = remaining) +
  geom_histogram(aes(x = voucher_obs), binwidth = 1) + 
  scale_x_continuous(limits = c(0, 75), expand = c(0, 0), breaks = c(0, 25, 50, 75)) + 
  scale_y_continuous(limits = c(0, 110), expand = c(0, 0)) +
  labs(
    title = "b. Undetected since 1990"
  ) +
  theme(
    axis.title.x = element_blank(),
    axis.title.y = element_blank()
  )

redetected_histogram <- ggplot(data = redetected) +
  geom_histogram(aes(x = voucher_obs), binwidth = 1) + 
  scale_x_continuous(limits = c(0, 130),expand = c(0, 0)) + 
  scale_y_continuous(limits = c(0, 110),expand = c(0, 0)) +
  labs(
    title = "a. Re-detected 1990-2023"
  ) +
  theme(
    axis.title.x = element_blank(),
    axis.title.y = element_blank()
  )

prob_detection_plot <- ggplot(data= prob_detection_by_obs_number) +
  geom_point(aes(x = voucher_obs, y= detected_01)) + 
  scale_y_continuous(limits = c(-0.01, 1.01),expand = c(0, 0))

voucher_count_histograms <- grid.arrange(
  redetected_histogram, remaining_histogram,
  ncol = 2,
  nrow = 1,
  widths = c(1, 0.6),
  left = textGrob("species count", rot = 90, gp = gpar(fontsize = 10)),
  bottom = textGrob("number of pre-1990 vouchers collected", gp = gpar(fontsize = 10))
)

cowplot::save_plot("outputs/voucher_count_histograms.jpg", voucher_count_histograms, base_width = 8, base_height = 4)
```

## declining curves by taxon group

```{r}
counts_per_broader <- Yosemite_species_paper_2_stats %>% 
  group_by(broader) %>%
  mutate(counts_per_broader = n()) %>%
  ungroup() %>%
  distinct(broader, counts_per_broader) %>%
  arrange(broader)

recent_obs <- list(tibble(),tibble(),tibble(),tibble(),tibble())
summary_detections <- list(tibble(),tibble(),tibble(),tibble(),tibble())

# panel A
data_tmp <- Yosemite_species_paper_2_stats %>%
  filter(!is.na(first_redetection))

# panel B
data_tmp_iNat_RG <- Yosemite_species_paper_2_stats %>%
  filter(!is.na(first_iNat_detect))%>%
  select(accepted_name, broader, first_iNat_detect) %>%
  rename(first_redetection = first_iNat_detect)

# panel C
data_tmp_CCH_only <- Yosemite_species_paper_2_stats %>%
  filter(!is.na(first_CCH_redetect)) %>%
  select(accepted_name, broader, first_CCH_redetect) %>%
  rename(first_redetection = first_CCH_redetect)

# panel D
data_tmp_needsID <- iNat_needsID_20240901 %>%
  rename(accepted_name = taxon_species_name) %>%
  bind_rows(Yosemite_iNat) %>%
  arrange(observed_on) %>%
  mutate(first_redetection = year(observed_on)) %>%
  filter(first_redetection > 1989) %>%
  group_by(accepted_name) %>%
  slice_head(n = 1) %>%
  ungroup() %>% 
  select(accepted_name, observed_on, first_redetection) %>%
  left_join(Yosemite_species_paper_2_stats %>% select(accepted_name, broader)) %>%
  filter(accepted_name %in% Yosemite_species_paper_2_stats$accepted_name)

for (i in seq_along(1:5)) {
  recent_obs[[i]] <- data_tmp_needsID %>%
  filter(broader == counts_per_broader$broader[i]) 
  
  summary_detections[[i]] <- recent_obs[[i]] %>%
    select(first_redetection) %>%
    group_by(first_redetection) %>%
    mutate(re_finds_per_year = n()) %>%
    distinct(re_finds_per_year) %>%
    ungroup() %>%
    bind_rows(c("first_redetection" = 1989, "re_finds_per_year" = 0)) %>%
    arrange(first_redetection) %>%
    mutate(total_refound = re_finds_per_year,
           total_refound = accumulate(re_finds_per_year[-1], sum, .init = total_refound[1]),
           remaining = counts_per_broader$counts_per_broader[i] - total_refound,
           proportion_remaining = remaining / counts_per_broader$counts_per_broader[i],
           first_redetection = first_redetection + 1,
           broader = counts_per_broader$broader[i]
           ) %>%
    rename(year = first_redetection)
  
  if (max(summary_detections[[i]]$year) < 2024) {
  summary_detections[[i]] <- summary_detections[[i]] %>%
    bind_rows(c("year" = 2024, 
                "re_finds_per_year" = 0, 
                "total_refound" = max(summary_detections[[i]]$total_refound), 
                "remaining" = min(summary_detections[[i]]$remaining),
                "proportion_remaining" = min(summary_detections[[i]]$proportion_remaining)
    )) %>%
    mutate(broader = counts_per_broader$broader[i])
  }
}

colors_broader <- c("1.ferns/primitive" = "darkgreen","2.gymnosperm" = "brown", "3.dicot"= "#324ab2", 
                    "4.monocot" = "#808000", "5.monocot-colorful" = "#461257")
    

RG_and_needsID <- ggplot() +
  geom_line(aes(x = year, y = proportion_remaining, col = factor(broader)), data = summary_detections[[1]], size = 0.7) +
  geom_line(aes(x = year, y = proportion_remaining, col = factor(broader)), data = summary_detections[[2]], size = 0.7) +
  geom_line(aes(x = year, y = proportion_remaining, col = factor(broader)), data = summary_detections[[3]], size = 0.7) +
  geom_line(aes(x = year, y = proportion_remaining, col = factor(broader)), data = summary_detections[[4]], size = 0.7) +
  geom_line(aes(x = year, y = proportion_remaining, col = factor(broader)), data = summary_detections[[5]], size = 0.7) +
  scale_x_continuous(limits = c(1990, 2024),expand = c(0, 0)) +
  scale_y_continuous(limits = c(0, 1), expand = c(0, 0)) +
  labs(
    #y = "proportion taxa known in 1990",
    title = "Detections from Research Grade and needsID observations"
  ) + 
  scale_color_manual(values = c("darkgreen", "brown", "#324ab2", "#808000", "#461257"), 
                    labels = c("ferns and relatives", "gymnosperms", "dicots", "graminoids", "showy monocots"),
                    name = "Phylogenetic groupings") +
  theme_classic() +
  theme(
    panel.grid.major.y = element_line(linewidth = 0.3, color = "grey80"),
    axis.title.y = element_blank(),
    legend.position="none"
  )

declining_by_type <- grid.arrange(vouchers_only, iNat_RG_only, nrow = 1, widths = c(1, 1.55))

cowplot::save_plot("outputs/declining_by_type.svg", declining_by_type, base_width = 8, base_height = 4)

cowplot::save_plot("outputs/declining_by_RG_and_needsID.svg", RG_and_needsID, base_width = 3.3, base_height = 4)
```

```{r}
iNat_total_obs_year <- Yosemite_iNat %>%
  mutate(year = year(observed_on)) %>%
  group_by(year) %>%
  mutate(iNat_obs_per_year = n()) %>%
  ungroup() %>%
  distinct(year, iNat_obs_per_year) %>%
  filter(year > 2006, year < 2024)


iNat_species_detected_per_year <- Yosemite_iNat %>%
  mutate(year = year(observed_on)) %>%
  group_by(year, accepted_name) %>%
  slice(1) %>%
  ungroup() %>%
  group_by(year) %>%
  mutate(iNat_species_per_year = n()) %>%
  ungroup() %>%
  distinct(year, iNat_species_per_year) %>%
  filter(year > 2006, year < 2024)


iNat_counts <- iNat_counts %>% left_join(Yosemite_species_paper_2 %>% select(accepted_name, voucher_obs, broader))

summary_iNat_RG <- data_tmp_iNat_RG %>%
    select(first_redetection) %>%
    group_by(first_redetection) %>%
    mutate(re_finds_per_year = n()) %>%
    distinct(re_finds_per_year) %>%
    ungroup() %>%
    bind_rows(c("first_redetection" = 1989, "re_finds_per_year" = 0)) %>%
    arrange(first_redetection) %>%
    mutate(total_refound = re_finds_per_year,
           total_refound = accumulate(re_finds_per_year[-1], sum, .init = total_refound[1]),
           remaining = sum(counts_per_broader$counts_per_broader)- total_refound,
           proportion_remaining = remaining / sum(counts_per_broader$counts_per_broader),
           first_redetection = first_redetection + 1
           ) %>%
    rename(year = first_redetection) %>%
  left_join(iNat_total_obs_year) %>%
  mutate(finds_per_effort = re_finds_per_year/iNat_obs_per_year)


ggplot(data = iNat_species_detected_per_year) +
  geom_point(aes(x=year, y = iNat_species_per_year)) +
  #geom_point(aes(x=year, y = iNat_obs_per_year/10), data = iNat_total_obs_year, col = "red", pch = 1) +
  geom_col(aes(x=year, y=re_finds_per_year), data = summary_iNat_RG) +
  scale_x_continuous(limits=c(2000, 2024), expand = c(0,0)) +
  scale_y_continuous(limits=c(0,600),expand = c(0,0)) + #, sec.axis = sec_axis(~ . * 10, name = "iNaturalist observations per year")) +
  labs(
    y = "species detected per year"
  )
```
